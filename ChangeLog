# Generated by configure.  Do no edit.

2009-06-12  Patrick Ohly  <patrick.ohly@intel.com>

	* NEWS:
	* configure-pre.in:

	bumped version: 0.8.1+0.9+beta2

2009-06-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/core/SyncEvolutionConfig.cpp:

	documentation: added vCalendar 1.0 and explain automatic format
	selection

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* NEWS:
	* README:
	* configure-pre.in:

	adapted for 0.9 beta 2 snapshot
	(syncevolution-0-9-beta2-2009-06-10)

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* README:
	* autogen.sh:
	* configure-pre.in:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/FilterConfigNode.cpp:
	* src/core/SyncEvolutionCmdline.cpp:

	Debian Etch: fixes some compilation issues

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/CurlTransportAgent.cpp:
	* src/core/CurlTransportAgent.h:

	libcurl: fixed memory handling issue with libcurl < 7.17.0.

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:

	config: use ${XDG_CACHE_HOME} for logs and database dumps
	(Bugzilla #3309)

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	config: clarified that clientAuthType only has an effect during
	the initial sync

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/syncevolution.xml:

	config: enable clientAuthType (Bugzilla #3242)

2009-06-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/syncevolution.xml:

	config: enabled maxMsgSize/maxObjSize, removed obsolete loSupport
	(Bugzilla #2784)

2009-06-09  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SoupTransportAgent.cpp:

	Soup HTTP Transport: must return content type of reply

2009-06-03  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' of git@git.moblin.org:syncevolution

2009-06-03  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionConfig.cpp:

	logging: logLevel 4 and 5 enable message translation and dumping

2009-06-03  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-pre.in:
	* src/gtk-ui/main.c:

	dbus client: make libunique dependency optional

2009-06-03  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/main.c:

	dbus-client: add missing license to main.c

2009-06-03  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-pre.in:
	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/main.c:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.h:

	dbus-client: force single instance mode

2009-06-02  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: disable "change sync service" when syncing

2009-06-02  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/ui.glade:

	dbus client: wrap text in "change sync service" button

2009-06-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/ui.glade:

	dbus client: fix glade file corruption

2009-06-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui-config.c:

	dbus client: sort sources alphabetically in UI

2009-05-14  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	bumped version: 0.8.1+0.9+beta2+20090514

2009-05-14  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-14  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/client-test-app.cpp:
	* src/core/EvolutionSyncSource.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: removed code which wasn't needed anymore

2009-05-14  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: due to typo it did not compare file against dir
	(skipped content of dir)

2009-05-14  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: don't open urls twice

2009-05-14  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: handle LOCERR_TRANSPFAIL

2009-05-14  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:

	dbus service: don't abort on Sync() exception

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: hide progress bar when new service is selected

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbus client: cosmetic fixes

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bump: 0.8.1+0.9+beta2+20090513

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-window.c:

	maximise windows even more

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	EXDATE: accept all reasonable versions, generate separate
	properties with one value each

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: avoid possible crasher on restart

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: disable canceling for now

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui-config.c:
	* src/gtk-ui/sync-ui-config.h:
	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:

	dbus client/service: hide non--supported sources

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: call AbortSync asynchronously

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/dbus/syncevo-dbus.c:
	* src/dbus/syncevo-dbus.h:

	dbus client: Add missing async AbortSync to wrapper lib

2009-05-13  Jussi Kukkonen  <jku@linux.intel.com>

	* src/dbus/syncevo-dbus-types.h:
	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:

	dbus service/client: fix DBus error handling

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:

	--enable-shared: fix for loading backend modules contained typo,
	only syncecal.so was opened

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/FileConfigTree.cpp:

	--remove: .other.ini files were not removed, leaving an
	incomplete config behind (#1806)

2009-05-13  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	configuration handling: only list servers as "configured" which
	really have a config

2009-05-12  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:
	* src/core/Makefile.am:

	--enable-shared: find backends in $(libdir)/syncevolution

2009-05-12  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync-ui-marshal.list:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:

	dbus client: support Connman

2009-05-12  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/ui.glade:

	dbus client: make the main window layout even tighter

2009-05-12  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/ui.glade:

	modify services window to actually fit into netbook screen

2009-05-12  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:

	dbus client: use less space in main window

2009-05-12  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	bumped version: 0.8.1+0.9+ui+20090512

2009-05-12  Patrick Ohly  <patrick.ohly@intel.com>

	* NEWS:
	* README:

	NEWS: summarized new features

2009-05-12  Patrick Ohly  <patrick.ohly@intel.com>

	* src/Makefile-gen.am:
	* src/backends/addressbook/Makefile.am:
	* src/backends/evolution/Makefile.am:
	* src/backends/file/Makefile.am:
	* src/backends/sqlite/Makefile.am:

	testing: fixed compile error and test driver linking with
	--enable-shared

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' into ui

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* README:

	README: added --print-sessions, --remove, --restore and
	"Item/Data Changes" (#1806)

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: ignore UID when comparing for Synthesis server
	(#2161)

2009-05-11  Jussi Kukkonen  <jku@linux.intel.com>

	* src/dbus/syncevo-dbus.c:
	* src/dbus/syncevo-dbus.h:
	* src/gtk-ui/sync-ui.c:

	dbus client: handle server disappearing while syncing

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/README.h:
	* src/dbus/syncevo-dbus-types.c:
	* src/dbus/syncevo-dbus-types.h:
	* src/dbus/syncevo-dbus.c:
	* src/dbus/syncevo-dbus.h:
	* src/dbus/test.c:
	* src/gtk-ui/mux-frame.c:
	* src/gtk-ui/mux-frame.h:
	* src/gtk-ui/mux-icon-button.c:
	* src/gtk-ui/mux-icon-button.h:
	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/mux-window.h:
	* src/gtk-ui/sync-ui-config.c:
	* src/gtk-ui/sync-ui-config.h:
	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:

	added missing copyright and license headers

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* NEWS:

	NEWS: bumped date of release

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bump: 0.8.1+0.9+beta1

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: filter out INTERVAL=1 in normal form (#2029)

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-11  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: filter out INTERVAL=1 in normal form (#2029)

2009-05-11  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: remember to init GLib threads

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bump: 0.8.1+0.9+ui+20090508

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' into ui

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' of git@git.moblin.org:syncevolution

2009-05-08  Patrick Ohly  <pohly@pohly-MOBL.(none)>

	* configure-pre.in:

	configure: accept git@<host>/<path>.git as git URI

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:

	testing: fix for database comparison

2009-05-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: localize 'known' source names

2009-05-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: compare template names case-insensitively

2009-05-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: improve language in sync source reporting

2009-05-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:

	dbus service: chain up progress methods

2009-05-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: improve error handling

2009-05-07  Patrick Ohly  <patrick.ohly@intel.com>

	* Makefile-gen.am:

	packaging: include LICENSE texts

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:
	* src/core/SoupTransportAgent.cpp:
	* src/core/SyncEvolutionConfig.cpp:

	HTTP: check for libsoup-gnome first and use GNOME proxy settings
	(#2060)

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:

	SyncReport: store overall synchronization status

2009-05-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/default/syncevolution/Funambol/icon.png:
	* src/default/syncevolution/ScheduleWorld/icon.png:

	icons for services (#2062): cannot be used until we have proper
	permission by their owners

2009-05-07  Patrick Ohly  <patrick.ohly@intel.com>

	* Makefile-gen.am:

	packaging: include LICENSE texts

2009-05-07  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbus client: show more last sync report data in UI

2009-05-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbius client: update to match tweaked designs

2009-05-07  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	bumped version: 0.8.1+0.9+ui+20090507

2009-05-07  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' into ui

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-pre.in:

	add gio-2.0 to PKG_CHECK_MODULES

2009-05-06  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution-internal
	into ui

2009-05-06  Patrick Ohly  <patrick.ohly@intel.com>

	* Makefile-gen.am:
	* configure-post.in:
	* interfaces/Makefile.am:
	* interfaces/spec-strip-docs.xsl:
	* interfaces/syncevo-full.xml:
	* interfaces/syncevo-marshal.list:
	* org.Moblin.SyncEvolution.service.in:
	* src/Makefile-gen.am:
	* src/dbus/Makefile.am:
	* src/dbus/README:
	* src/dbus/interfaces/Makefile.am:
	* src/dbus/interfaces/spec-strip-docs.xsl:
	* src/dbus/interfaces/syncevo-full.xml:
	* src/dbus/interfaces/syncevo-marshal.list:
	* src/dbus/syncevo-dbus-types.c:
	* src/dbus/syncevo-dbus-types.h:
	* src/dbus/syncevo-dbus.c:
	* src/dbus/syncevo-dbus.h:
	* src/dbus/syncevo-dbus.pc.in:
	* src/dbus/test.c:
	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/sync-ui-config.h:
	* src/gtk-ui/sync-ui.c:
	* src/org.Moblin.SyncEvolution.service.in:
	* syncevo-dbus.pc.in:
	* syncevo-dbus/Makefile.am:
	* syncevo-dbus/README:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:
	* syncevo-dbus/test.c:

	build rules: moved D-Bus into sub directories

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: dont use gdk_pixbuf_new_from_stream_at_scale

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/ui.glade:

	workaround for MuxWindow icons if not in theme

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/sync-ui.c:

	dbus-client: avoid GLib 2.18 features

2009-05-06  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	intltool: is 0.37.1 good enough?!

2009-05-06  Patrick Ohly  <patrick.ohly@intel.com>

	* Makefile-gen.am:

	Makefile: removed obsolete DISTCHECK_CONFIGURE_FLAGS

2009-05-06  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	compilation fix: when not configuring translation some vars must
	be set manually for po/Makefile

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* po/Makevars:
	* src/gtk-ui/sync-ui.c:

	dbus client: add translatable strings to sync ui

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync.desktop:
	* src/gtk-ui/sync.png:

	dbus client: icon is in moblin theme, no need to include here

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* Makefile-gen.am:
	* autogen.sh:
	* configure-post.in:
	* configure-pre.in:
	* po/ChangeLog:
	* po/Makevars:
	* po/POTFILES.in:
	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync-ui.c:

	add internationalization support

2009-05-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync.desktop:
	* src/gtk-ui/sync.png:

	dbus client: really add desktop file,icon

2009-05-05  Jussi Kukkonen  <jku@linux.intel.com>

	* src/Makefile-gen.am:
	* src/gtk-ui/Makefile.am:

	fix make dist

2009-05-05  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-generic.png:

	dbus client: add missing icon

2009-05-05  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bump: 0.8.1+0.9+20090505

2009-05-05  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSource.cpp:

	EvolutionCalendarSource: extra sanity check for empty TZID

2009-05-05  Patrick Ohly  <patrick.ohly@intel.com>

	* NEWS:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* test/synccompare.pl:
	* test/testcases/imemo20.ics:

	EvolutionMemoSource: notes with only a summary were not sent
	correctly

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncSource.h:

	removed obsolete EvolutionSyncSource::get*ItemKey() methods

2009-05-02  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: check for correct server behavior during
	refresh-from-client

2009-04-30  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' into ui

2009-04-30  Patrick Ohly  <patrick.ohly@intel.com>


	license: merged LGPL v2.1 -> LGPL v2.1 + v3 change

2009-04-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/COPYING:
	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/client-test.cpp:
	* test/synccompare.pl:
	* test/test.h:

	license: changed to LGPL v2.1 + v3

2009-04-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* COPYING:
	* debian/dbus-wrapper.cpp:
	* src/TestMain.cpp:
	* src/backends/addressbook/AddressBookConstants.cpp:
	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/addressbook/AddressBookSource.h:
	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.h:
	* src/backends/evolution/libical/icalstrdup.c:
	* src/backends/evolution/libical/icalstrdup.h:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteUtil.cpp:
	* src/backends/sqlite/SQLiteUtil.h:
	* src/client-test-app.cpp:
	* src/core/ConfigNode.h:
	* src/core/ConfigTree.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/FilterConfigNode.cpp:
	* src/core/FilterConfigNode.h:
	* src/core/PrefixConfigNode.cpp:
	* src/core/PrefixConfigNode.h:
	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:
	* src/core/VolatileConfigNode.h:
	* src/core/VolatileConfigTree.h:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:
	* src/syncevolution.cpp:

	license: changed to LGPL v2.1 + v3

2009-04-27  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/sync-ui.c:

	dbus client: load icons from theme

2009-04-27  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:

	dbus service: override getPrintChanges()

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:

	added/improved reporting of local changes

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncSource.h:

	removed obsolete EvolutionSyncSource::get*ItemKey() methods

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	removed debugging artifact from last check in

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/HashConfigNode.h:
	* src/core/Makefile.am:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:

	SyncReport: utility functions for serializing in a ConfigNode

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	session info: fixed incorrect "numbers of items after sync"

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/ConfigNode.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/FileConfigNode.h:
	* src/core/SafeConfigNode.h:

	ConfigNode + status.ini: added template methods for automatic
	conversion to/from string

2009-04-29  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	--enable-gui: don't build GUI unless selected, extended help text

2009-04-25  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: don't free server data when it's still used...

2009-04-25  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-window.c:

	dbus client: remove unnecessary MuxWindow function skeletons

2009-04-25  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-icon-button.c:
	* src/gtk-ui/mux-icon-button.h:
	* src/gtk-ui/mux-window.c:

	dbus client: refactor MuxIconButton

2009-04-24  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-post.in:
	* configure-pre.in:
	* src/gtk-ui/mux-frame.c:
	* src/gtk-ui/mux-frame.h:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:

	dbus client: allow building with no Mux widgets

2009-04-24  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/mux-bin.c:
	* src/gtk-ui/mux-bin.h:
	* src/gtk-ui/mux-frame.c:
	* src/gtk-ui/mux-frame.h:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:

	rename MuxBin to MuxFrame

2009-04-24  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: bug fix: progress text wasn't updated after sync

2009-04-24  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:

	dbus client: shutdown after client inactivity

2009-04-23  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus-types.c:

	dbus client: stop leaking memory on every dbus callback

2009-04-23  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo-full.xml:
	* src/gtk-ui/sync-ui-config.c:
	* src/gtk-ui/sync-ui.c:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:

	support sync reports in dbus api, use GetSyncReports in ui

2009-04-22  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: fix bug in gconf change handling

2009-04-22  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync-ui.c:

	dbus client: use generice sync icon

2009-04-22  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	work around duplicate synthesis errors

2009-04-22  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:

	dbus service: use SetPrintChanges()

2009-04-24  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bump: 0.8+0.9+20090424

2009-04-24  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Bugzilla 1412: no data source enabled => XML error => should be
	normal message

2009-04-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionCmdline.cpp:

	command line synopsis: --print-sessions can be combined with
	--quiet

2009-04-23  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:

	added --restore and fixed --status

2009-04-22  Patrick Ohly  <patrick.ohly@intel.com>

	* README:
	* src/core/SyncEvolutionCmdline.cpp:

	command line: removed traces of never implemented --properties
	options

2009-04-22  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:

	log dir handling: changed backup files from single file to
	directory, remember number of items in backup

2009-04-22  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/ConfigNode.h:
	* src/core/FileConfigNode.cpp:

	config nodes: utility code to create a node for a specific file

2009-04-22  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/FileConfigNode.cpp:

	FileConfigNode: error messages should refer to full path

2009-04-22  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: each of the two parameters can refer to a directory
	of items in addition to plain files

2009-04-21  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: handle more sync errors

2009-04-21  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:

	dbus client: improve error output

2009-04-17  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui-config.c:
	* src/gtk-ui/sync-ui-config.h:
	* src/gtk-ui/sync-ui.c:

	dbus client: update sync mode handling to match server

2009-04-17  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/Makefile.am:

	dbus interface: remove syncevo-marshal.list from BUILT_SOURCES

2009-04-17  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/syncevo-dbus-server.cpp:

	dbus service: add support for per-source syncmode

2009-04-21  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:

	logging: allow detailed control over printing of database changes
	with --printChanges

2009-04-20  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	configure: --disable-dbus-service and --disable-gui didn't work

2009-04-17  Patrick Ohly  <patrick.ohly@intel.com>

	* src/gtk-ui/Makefile.am:

	GTK UI: build fixes for out-of-tree compilation

2009-04-17  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	config templates: silently ignore missing template directory

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/Makefile-gen.am:
	* syncevo-dbus/Makefile.am:

	dbus service: use builddir when referring to dbus interface file

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: remove "settings" title bar button

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/Makefile-gen.am:

	dbus service: build syncevo-dbus-glue.h explicitly

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:

	logging: enable log dirs by default

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionUtil.cpp:

	logging: create directories with access permissions only for the
	user

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo-full.xml:
	* src/gtk-ui/README:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:

	dbus client: support removing services

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* Makefile-gen.am:

	change makefile subdir order: syncevo-dbus before src

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: bug fix: don't eat all keyboard input

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: set focus correctly

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-bin.c:
	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbus client: fix allocation bug in MuxBin, tweak related layout
	in ui

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SafeConfigNode.cpp:

	SafeConfigNode: the if clause for non-strict escaping did not
	work right

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: the "New York" test case works again

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:

	dbus client: tweak bin insensitivity

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/ConfigNode.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:

	log handling: SyncReport is stored in log dir and can be
	retrieved

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-bin.c:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:

	dbus client: use insensitivity in main window Bins

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbus  client; add styling for main window

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:

	logging: record start/end times in SyncReport and print it

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/mux-icon-button.c:
	* src/gtk-ui/mux-icon-button.h:
	* src/gtk-ui/mux-window.c:
	* src/gtk-ui/mux-window.h:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:

	dbus client: add MuxWindow class, use it in the client

2009-04-16  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/mux-bin.c:

	dbus client: add title-font property to MuxBin

2009-04-15  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/close.png:
	* src/gtk-ui/close_hover.png:
	* src/gtk-ui/settings.png:
	* src/gtk-ui/settings_hover.png:

	add tmp images for window decoration buttons

2009-04-14  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: do sensitivity changes on the bins, not buttons

2009-04-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionCmdline.cpp:

	command line: added long description of --remove option

2009-04-15  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncML.h:

	log handling: save start and end time in log dir, retrieve as
	part of SyncReport

2009-04-15  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:

	SafeConfigNode: added less strict escaping for use with
	FileConfigNode

2009-04-15  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:

	log handling: added access to previous sync sessions

2009-04-15  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/ConfigTree.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:

	config handling: added removing of a configuration

2009-04-14  Jussi Kukkonen  <jku@linux.intel.com>


	Merge commit 'origin/ui' into ui

2009-04-14  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/README:
	* src/gtk-ui/sync-ui.c:

	dbus client: add README

2009-04-11  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/ui.glade:

	dbus client: tweak service list padding

2009-04-11  Jussi Kukkonen  <jku@linux.intel.com>

	* src/default/README:
	* src/default/syncevolution/funambol/icon.png:
	* src/default/syncevolution/scheduleworld/icon.png:

	add funambol logo, make scheduleworld logo transparent

2009-04-11  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: fix memory leak

2009-04-10  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: fix focus/transient bug

2009-04-10  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: mark current service with bold in service list

2009-04-10  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/sync-ui.c:

	dbus client: close secondary windows on ESC

2009-04-10  Jussi Kukkonen  <jku@linux.intel.com>

	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/sync-ui.rc:
	* src/gtk-ui/ui.glade:

	dbus client: ui improvements

2009-04-09  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	version bumped for intermediate release

2009-04-09  Jussi Kukkonen  <jku@linux.intel.com>

	* Makefile-gen.am:
	* configure-post.in:
	* src/Makefile-gen.am:
	* src/gtk-ui/Makefile.am:
	* src/gtk-ui/mux-bin.c:
	* src/gtk-ui/mux-bin.h:
	* src/gtk-ui/sync-ui-config.c:
	* src/gtk-ui/sync-ui-config.h:
	* src/gtk-ui/sync-ui.c:
	* src/gtk-ui/ui.glade:
	* src/sync-ui-config.c:
	* src/sync-ui-config.h:
	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: add and use new widget MuxBin

2009-04-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionCmdline.cpp:

	testing: file:// prefix in IconURI

2009-04-08  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'ui' of git@git.moblin.org:syncevolution into ui

2009-04-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/default/syncevolution/Funambol/config.ini:
	* src/default/syncevolution/Funambol/sources/addressbook/config.ini:
	* src/default/syncevolution/Funambol/sources/calendar/config.ini:
	* src/default/syncevolution/Funambol/sources/memo/config.ini:
	* src/default/syncevolution/Funambol/sources/todo/config.ini:
	* src/default/syncevolution/ScheduleWorld/config.ini:
	* src/default/syncevolution/ScheduleWorld/icon.png:
	* src/default/syncevolution/ScheduleWorld/sources/addressbook/config.ini:
	* src/default/syncevolution/ScheduleWorld/sources/calendar/config.ini:
	* src/default/syncevolution/ScheduleWorld/sources/memo/config.ini:
	* src/default/syncevolution/ScheduleWorld/sources/todo/config.ini:
	* src/default/syncevolution/funambol/config.ini:
	* src/default/syncevolution/funambol/sources/addressbook/config.ini:
	* src/default/syncevolution/funambol/sources/calendar/config.ini:
	* src/default/syncevolution/funambol/sources/memo/config.ini:
	* src/default/syncevolution/funambol/sources/todo/config.ini:
	* src/default/syncevolution/scheduleworld/config.ini:
	* src/default/syncevolution/scheduleworld/icon.png:
	* src/default/syncevolution/scheduleworld/sources/addressbook/config.ini:
	* src/default/syncevolution/scheduleworld/sources/calendar/config.ini:
	* src/default/syncevolution/scheduleworld/sources/memo/config.ini:
	* src/default/syncevolution/scheduleworld/sources/todo/config.ini:

	configuration: template and server names are mixed case with
	case-insensitive comparison now

2009-04-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync-ui-config.c:
	* src/sync-ui-config.h:
	* src/sync_ui.c:

	dbus client: massive tabs -> 4 spaces change

2009-04-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/Makefile-gen.am:
	* src/sync-ui-config.c:
	* src/sync-ui-config.h:
	* src/sync_ui.c:

	dbus client: refactor server configuration to a new file

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo-full.xml:
	* src/sync_ui.c:
	* src/syncevo-dbus-server.cpp:
	* src/ui.glade:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/test.c:

	dbus service & client: support webURL and iconURI

2009-04-08  Jussi Kukkonen  <jku@linux.intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	prepend iconURI with "file://" when icon is local file	Please
	enter the commit message for your changes.

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>


	Merge commit 'origin/ui' into ui

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: add "un-templated" services

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>


	Merge branch 'dbus' into ui

2009-04-07  Patrick Ohly  <patrick.ohly@intel.com>

	* README:
	* autogen.sh:
	* interfaces/syncevo.xml:
	* src/Makefile-gen.am:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/Makefile.am:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/VolatileConfigNode.h:
	* src/default/README:
	* src/default/syncevolution/funambol/config.ini:
	* src/default/syncevolution/funambol/sources/addressbook/config.ini:
	* src/default/syncevolution/funambol/sources/calendar/config.ini:
	* src/default/syncevolution/funambol/sources/memo/config.ini:
	* src/default/syncevolution/funambol/sources/todo/config.ini:
	* src/default/syncevolution/scheduleworld/config.ini:
	* src/default/syncevolution/scheduleworld/icon.png:
	* src/default/syncevolution/scheduleworld/sources/addressbook/config.ini:
	* src/default/syncevolution/scheduleworld/sources/calendar/config.ini:
	* src/default/syncevolution/scheduleworld/sources/memo/config.ini:
	* src/default/syncevolution/scheduleworld/sources/todo/config.ini:

	configuration: added support for configuration templates in /etc
	and server icons

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus-types.h:

	dbus service: bug fixes, add error codes

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:

	dbus client: bug fixes

2009-04-07  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	autotools: first PKG_CHECK_MODULES() must be unconditional

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-pre.in:
	* src/sync_ui.c:

	dbus client: get rid of gvfs dependency

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo-full.xml:

	dbus service: document dbus api

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-pre.in:
	* interfaces/Makefile.am:
	* interfaces/spec-strip-docs.xsl:
	* interfaces/syncevo-full.xml:
	* interfaces/syncevo.xml:

	dbus service: use xsltproc to produce non-documented dbus API
	file

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:

	dbus client: implement "reset service settings"

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* syncevo-dbus/test.c:

	dbus service: exit test app on sync finish

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo.xml:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:

	dbus service: add GetTemplateConfig method

2009-04-07  Patrick Ohly  <patrick.ohly@intel.com>

	* README:
	* configure-pre.in:

	autotools: check for UI and D-Bus dependencies only when needed

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* syncevo-dbus/test.c:

	dbus service: exit test app on sync finish

2009-04-07  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo.xml:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:

	dbus service: add GetTemplateConfig method

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>


	Merge branch 'ui-patrick' into ui

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:

	dbus client: get syncevolution return code via Progress signal

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>


	Merge branch 'dbus' into ui

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: use Progress signal to return Syncevolution return
	code

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/syncevo-dbus-server.cpp:
	* src/ui.glade:

	dbus client: add sync mode support to client

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/sync_ui.c:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/test.c:

	fixed compiler warnings (unused variables, printf formatting,
	...)

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/Makefile-gen.am:
	* syncevo-dbus/Makefile.am:

	out-of-tree compilation: need extra -I/-L arguments

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:

	dbus client: implement source selection

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	merging: disable extra PKG_CHECK_MODULES(SYNTHESIS)

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>


	Merge branch 'master' into ui

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	ical20: moved VTIMEZONE before VEVENT/VTODO

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* NEWS:
	* README:
	* configure-pre.in:

	docs + version: updated for 0.9 beta 1

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>


	Merge branch 'dbus' into ui

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: copy template if config does not exist yet

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/ui.glade:

	dbus client: make syncmode selector inactive

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: fix send & receive progress bug

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: save current service in gconf

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: implement server settings save

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>


	Merge branch 'dbus' into ui

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: implement SetServerConfig

2009-04-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	SF #1874805: Syncing with Funambol results in loosing all-day
	property

2009-04-06  Jussi Kukkonen  <jku@linux.intel.com>

	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: stop hard coding sources in UI

2009-04-05  Jussi Kukkonen  <jku@linux.intel.com>

	* configure-post.in:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/sync_ui.c:
	* src/ui.glade:

	dbus client: add GUI

2009-04-03  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	autotools: treat --with-synthesis-src value as git repo by
	default

2009-04-03  Patrick Ohly  <patrick.ohly@intel.com>

	* autogen.sh:

	autotools: aclocal needs -Im4 to find ax_boost_base.m4

2009-04-05  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: send password in options as well

2009-04-05  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo.xml:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:
	* syncevo-dbus/test.c:

	dbus service: make GetServers signature like GetTemplates

2009-04-04  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo.xml:
	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:
	* syncevo-dbus/test.c:

	dbus service: add GetTemplates

2009-04-03  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	autotools: treat --with-synthesis-src value as git repo by
	default

2009-04-03  Patrick Ohly  <patrick.ohly@intel.com>

	* autogen.sh:

	autotools: aclocal needs -Im4 to find ax_boost_base.m4

2009-04-02  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:
	* syncevo-dbus/test.c:

	dbus service: fix option handling bug

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* syncevo-dbus/test.c:

	dbus service: add abort/suspend handling to test app

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: fix possible crasher on sync abort

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:

	dbus service: handle suspend request

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* syncevo-dbus/test.c:

	dbus service: add signal handling to test app

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* interfaces/syncevo-marshal.list:
	* interfaces/syncevo.xml:
	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:

	dbus service: remove separate SourceProgress signal

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/syncevo-dbus-server.cpp:

	dbus service: fix broken progress emission

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	dbus service: initial GetServerConfig implementation

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* syncevo-dbus/test.c:

	move dbus test app to syncevo-dbus/

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	implement GetServers in dbus service

2009-04-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/Makefile-gen.am:
	* src/syncevo-dbus-server.cpp:

	fix dbus service build, fix init bug in DBusSyncClient

2009-03-30  Jussi Kukkonen  <jku@linux.intel.com>

	* src/DBusSyncClient.cpp:
	* src/DBusSyncClient.h:
	* src/Makefile-gen.am:
	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:

	add DBusSyncClient (a EvolutionSyncClient implementation)

2009-03-01  Jussi Kukkonen  <jku@linux.intel.com>

	* src/syncevo-dbus-server.cpp:

	fix dbus method return values

2009-03-30  Jussi Kukkonen  <jku@linux.intel.com>

	* Makefile-gen.am:
	* configure-post.in:
	* configure-pre.in:
	* interfaces/Makefile.am:
	* interfaces/syncevo-marshal.list:
	* interfaces/syncevo.xml:
	* org.Moblin.SyncEvolution.service.in:
	* src/Makefile-gen.am:
	* src/syncevo-dbus-server.cpp:
	* src/syncevo-dbus-server.h:
	* syncevo-dbus.pc.in:
	* syncevo-dbus/Makefile.am:
	* syncevo-dbus/README:
	* syncevo-dbus/syncevo-dbus-types.c:
	* syncevo-dbus/syncevo-dbus-types.h:
	* syncevo-dbus/syncevo-dbus.c:
	* syncevo-dbus/syncevo-dbus.h:
	* syncevo-dbus/test.c:

	Add initial dbus api and wrapper client library

2009-04-01  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:
	* test/testcases/itodo20.ics:

	ical20 todo: added support for URL and PERCENT-COMPLETE

2009-04-01  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/client-test-app.cpp:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: 'text' was incomplete

2009-04-01  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionCmdline.cpp:

	testing + WBXML: default has changed, revert this when WBXML is
	supported by ScheduleWorld

2009-04-01  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:

	testing: disable interrupted sync testing temporarily

2009-04-01  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	testing: ignore -(Standard) suffix in TZID

2009-03-31  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:
	* test/testcases/vcard30.vcf:

	vcard: added X-MOZILLA-HTML support

2009-03-31  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: fixed wrong summary of daily repeating event

2009-03-31  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: simplified ical20 test cases for Synthesis engine

2009-03-25  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	WBXML: temporarily disabled by default because of Bugzilla 1360 -
	WBXML + ScheduleWorld: "UNKNOWN SERVER"

2009-03-31  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/CurlTransportAgent.cpp:
	* src/core/CurlTransportAgent.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:
	* src/core/TransportAgent.h:
	* test/ClientTest.cpp:

	HTTP transport: check reply content type

2009-03-30  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: removed 'New York' test case

2009-03-30  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: removed 'recurr at end of month' test case

2009-03-30  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	Revert "testing: simplified test cases"

2009-03-27  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* README:
	* configure-post.in:
	* configure-pre.in:
	* m4/ax_boost_base.m4:
	* src/backends/evolution/configure-sub.in:

	configure: fixed some checks (glib, boost, EDS)

2009-03-27  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:

	testing: fixed invalid memory access when printing empty log
	prefix

2009-03-26  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSource.cpp:

	Evolution calendar/memos/tasks: fixed support for system default
	database

2009-03-26  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	Revert "WBXML: temporarily disabled by default because of
	Bugzilla 1360 - WBXML + ScheduleWorld: "UNKNOWN SERVER""

2009-03-25  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	0.9 alpha 20090325: version bumped

2009-03-25  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSourceRegister.cpp:

	testing: Client::Sync::vcard21::testConversion must use vcard 3.0
	test cases

2009-03-25  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncEvolutionConfig.cpp:

	WBXML: temporarily disabled by default because of Bugzilla 1360 -
	WBXML + ScheduleWorld: "UNKNOWN SERVER"

2009-03-25  Patrick Ohly  <patrick.ohly@intel.com>

	* build/update-copyrights.sh:
	* src/backends/addressbook/AddressBookConstants.cpp:
	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/addressbook/AddressBookSource.h:
	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.h:
	* src/backends/evolution/e-cal-check-timezones.c:
	* src/backends/evolution/e-cal-check-timezones.h:
	* src/backends/evolution/libical/icalstrdup.c:
	* src/backends/evolution/libical/icalstrdup.h:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteUtil.cpp:
	* src/backends/sqlite/SQLiteUtil.h:
	* src/client-test-app.cpp:
	* src/core/ConfigNode.h:
	* src/core/ConfigTree.h:
	* src/core/CurlTransportAgent.cpp:
	* src/core/CurlTransportAgent.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/FilterConfigNode.cpp:
	* src/core/FilterConfigNode.h:
	* src/core/LogStdout.cpp:
	* src/core/LogStdout.h:
	* src/core/Logging.cpp:
	* src/core/Logging.h:
	* src/core/PrefixConfigNode.cpp:
	* src/core/PrefixConfigNode.h:
	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:
	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:
	* src/core/SynthesisDBPlugin.cpp:
	* src/core/SynthesisEngine.cpp:
	* src/core/SynthesisEngine.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:
	* src/core/TransportAgent.cpp:
	* src/core/TransportAgent.h:
	* src/core/VolatileConfigNode.h:
	* src/core/VolatileConfigTree.h:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:
	* src/syncevolution.cpp:
	* test/Algorithm/Diff.pm.bak:
	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/client-test.cpp:
	* test/synccompare.pl:
	* test/test.h:

	copyright updated

2009-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/COPYING:
	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/LICENSE.txt:
	* test/Sync4jContribution.pdf:
	* test/client-test-main.cpp:
	* test/client-test.cpp:
	* test/synccompare.pl:
	* test/test.h:

	testing: relicensed as LGPL v2.1, like the rest of the code

2009-03-24  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SynthesisDBPlugin.cpp:

	Moblin Bugzilla 1318: cannot connect to datastore implementation
	module

2009-03-24  Patrick Ohly  <patrick.ohly@intel.com>

	* authors.xml:
	* src/TestMain.cpp:
	* src/sync4j-client-api-sdkcpp_3_0_6a.diff:
	* src/syncclient_sample_config.xml:
	* src/syncserv_odbc.xml:
	* src/testCalendar.ics:
	* src/testMemo.ics:
	* src/testTask.ics:
	* src/testVCard.vcf:

	removed obsolete files

2009-03-24  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSource.cpp:

	Evolution calendar/memos/tasks: added support for system default
	database

2009-03-24  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	testing: use separate EXDATEs as normal form

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar20: EXDATE as separate properties, not as list

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar20: don't encode empty DESCRIPTION and LOCATION

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: simplified test cases

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:

	testing: removed obsolete X-EVOLUTION-ENDDATE parameter

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	testing: remove default VALUE=DATE and join multiple EXDATE
	values

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	testing: ignore difference due to different order of RRULE value
	subcomponents

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: added support for missing properties/parameters

2009-03-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SynthesisEngine.cpp:
	* src/core/SynthesisEngine.h:

	Synthesis error reporting: added INFO messages instead of generic
	ERROR after aborting

2009-03-22  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: don't force http prefix for URL properties

2009-03-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar: merged upstream fix for ATTENDEE shaping

2009-03-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar: added X-EVOLUTION-ALARM-UID

2009-03-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar: send VALARM as passed in by Evolution

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar: don't convert alarm times needlessly

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: don't fold long lines

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:

	testing: print sync name to give feedback while each sync test
	runs

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	icalendar: added extended attributes for meeting attendes

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	synccompare: normalize case of mailto: in ATTENDEE and ORGANIZER

2009-03-19  Patrick Ohly  <patrick.ohly@intel.com>

	* test/testcases/ical20.ics:
	* test/testcases/imemo20.ics:
	* test/testcases/itodo20.ics:

	iCalendar 2.0 testcases: converted to CRLF as required by
	standard

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSource.h:

	EvolutionContactSource: must use vCard 3.0 as internal format

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: allow NICKNAME in vcard 2.1

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	vcard testing: use the right testcases for vcard21 conversion
	tests

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:
	* test/testcases/vcard30.vcf:

	vcard: removed special ADR TYPE=PARCEL handling

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: better support for organizational info (ORG/ROLE)

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: added TEL TYPE=CAR

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/syncevolution.xml:

	vcard: added X-EVOLUTION-FILE-AS and X-EVOLUTION-ANNIVERSARY

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/Makefile.am:

	XML to C: must escape the backslash itself

2009-03-18  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	normalize values which look like a date to YYYYMMDD

2009-03-17  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/syncevolution.xml:

	DevInf: insert our own values into the XML config

2009-03-17  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	configuration: removed obsolete config options and added WBXML

2009-03-17  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSourceRegister.cpp:

	EvolutionContactSource: temporarily disabled broken test of
	incoming items

2009-03-13  Patrick Ohly  <patrick.ohly@intel.com>

	* .gitignore:
	* Makefile-gen.am:
	* autogen.sh:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/core/Makefile.am:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:

	compilation: fixes + installation of client-test + version bump

2009-03-12  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:

	SyncModes + EvolutionSyncClient::setSyncModes(): utility code to
	set the sync mode per source in the current session

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* test/ClientTest.cpp:
	* test/synccompare.pl:

	testing: nicer printing of before/after comparison

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SoupTransportAgent.cpp:

	SoupTransportAgent: print URL and "via libsoup:" prefix before
	reason_phrase

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: added Client::Sync::*::testConversion

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:

	added callbacks for abort and suspend

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: pass parameters for syncing as struct, renamed function

2009-03-11  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:

	testing: when catching a CppUnit exception after a sync, report
	the original error instead of 'unexpected exception'

2009-03-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis: avoid DBG_PLUGIN_ALL, it prints to stdout while
	connecting

2009-03-10  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SynthesisDBPlugin.cpp:

	Synthesis: allocating parent ID is optional

2009-03-08  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/Makefile.am:
	* src/core/SynthesisEngine.cpp:
	* src/core/SynthesisEngine.h:

	Synthesis: wrap TEngineModuleBase in functions which use smart
	pointers and exceptions

2009-03-07  Patrick Ohly  <patrick.ohly@intel.com>

	* test/client-test-main.cpp:

	testing: print CPPUnit failures directly after each failed test

2009-03-04  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:

	SoupTransportAgent: use an existing event loop if given

2009-03-04  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/syncevolution.cpp:

	glib: g_type_init() and g_thread_init() are needed to use libsoup

2009-03-02  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	bumped version

2009-03-02  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:

	Evolution contacts: rewritten so that it tracks changes via the
	REV property

2009-03-01  Patrick Ohly  <patrick.ohly@intel.com>

	* test/client-test-main.cpp:

	compiler warnings: check result of log writing

2009-03-01  Patrick Ohly  <patrick.ohly@intel.com>

	* test/ClientTest.cpp:

	compiler warning: brackets around && in ||

2009-02-28  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	compiler warning: intentionally ignore result of synccompare
	invocation

2009-02-27  Patrick Ohly  <patrick.ohly@intel.com>

	* src/Makefile-gen.am:

	packaging: run autogen.sh when copying Synthesis from git, needed
	later

2009-02-27  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	bumped version

2009-02-27  Patrick Ohly  <patrick.ohly@intel.com>

	* ChangeLog:
	* Makefile-gen.am:
	* build/gen-changelog.pl:
	* src/Makefile-gen.am:

	packaging: build ChangeLog from git log and copy Synthesis code
	via 'git archive'

2009-02-27  Patrick Ohly  <patrick.ohly@intel.com>

	* Makefile-gen.am:
	* configure-pre.in:

	synthesis: better method of invoking Synthesis configure

2009-02-26  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:

	synthesis: need to pass through --with-xmltok configure parameter

2009-02-25  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/Makefile.am:
	* src/core/boost/algorithm/string.hpp:
	* src/core/boost/algorithm/string/case_conv.hpp:
	* src/core/boost/algorithm/string/classification.hpp:
	* src/core/boost/algorithm/string/compare.hpp:
	* src/core/boost/algorithm/string/concept.hpp:
	* src/core/boost/algorithm/string/config.hpp:
	* src/core/boost/algorithm/string/constants.hpp:
	* src/core/boost/algorithm/string/detail/case_conv.hpp:
	* src/core/boost/algorithm/string/detail/classification.hpp:
	* src/core/boost/algorithm/string/detail/find_format.hpp:
	* src/core/boost/algorithm/string/detail/find_format_all.hpp:
	* src/core/boost/algorithm/string/detail/find_format_store.hpp:
	* src/core/boost/algorithm/string/detail/find_iterator.hpp:
	* src/core/boost/algorithm/string/detail/finder.hpp:
	* src/core/boost/algorithm/string/detail/finder_regex.hpp:
	* src/core/boost/algorithm/string/detail/formatter.hpp:
	* src/core/boost/algorithm/string/detail/formatter_regex.hpp:
	* src/core/boost/algorithm/string/detail/predicate.hpp:
	* src/core/boost/algorithm/string/detail/replace_storage.hpp:
	* src/core/boost/algorithm/string/detail/sequence.hpp:
	* src/core/boost/algorithm/string/detail/trim.hpp:
	* src/core/boost/algorithm/string/detail/util.hpp:
	* src/core/boost/algorithm/string/erase.hpp:
	* src/core/boost/algorithm/string/find.hpp:
	* src/core/boost/algorithm/string/find_format.hpp:
	* src/core/boost/algorithm/string/find_iterator.hpp:
	* src/core/boost/algorithm/string/finder.hpp:
	* src/core/boost/algorithm/string/formatter.hpp:
	* src/core/boost/algorithm/string/iter_find.hpp:
	* src/core/boost/algorithm/string/join.hpp:
	* src/core/boost/algorithm/string/predicate.hpp:
	* src/core/boost/algorithm/string/predicate_facade.hpp:
	* src/core/boost/algorithm/string/replace.hpp:
	* src/core/boost/algorithm/string/sequence_traits.hpp:
	* src/core/boost/algorithm/string/split.hpp:
	* src/core/boost/algorithm/string/std/list_traits.hpp:
	* src/core/boost/algorithm/string/std/rope_traits.hpp:
	* src/core/boost/algorithm/string/std/slist_traits.hpp:
	* src/core/boost/algorithm/string/std/string_traits.hpp:
	* src/core/boost/algorithm/string/std_containers_traits.hpp:
	* src/core/boost/algorithm/string/trim.hpp:
	* src/core/boost/algorithm/string/yes_no_type.hpp:
	* src/core/boost/assert.hpp:
	* src/core/boost/bind.hpp:
	* src/core/boost/bind/apply.hpp:
	* src/core/boost/bind/arg.hpp:
	* src/core/boost/bind/bind_cc.hpp:
	* src/core/boost/bind/bind_mf_cc.hpp:
	* src/core/boost/bind/bind_template.hpp:
	* src/core/boost/bind/make_adaptable.hpp:
	* src/core/boost/bind/mem_fn_cc.hpp:
	* src/core/boost/bind/mem_fn_template.hpp:
	* src/core/boost/bind/mem_fn_vw.hpp:
	* src/core/boost/bind/placeholders.hpp:
	* src/core/boost/bind/protect.hpp:
	* src/core/boost/bind/storage.hpp:
	* src/core/boost/cast.hpp:
	* src/core/boost/checked_delete.hpp:
	* src/core/boost/concept_archetype.hpp:
	* src/core/boost/concept_check.hpp:
	* src/core/boost/config.hpp:
	* src/core/boost/config/abi/borland_prefix.hpp:
	* src/core/boost/config/abi/borland_suffix.hpp:
	* src/core/boost/config/abi/msvc_prefix.hpp:
	* src/core/boost/config/abi/msvc_suffix.hpp:
	* src/core/boost/config/abi_prefix.hpp:
	* src/core/boost/config/abi_suffix.hpp:
	* src/core/boost/config/auto_link.hpp:
	* src/core/boost/config/compiler/borland.hpp:
	* src/core/boost/config/compiler/comeau.hpp:
	* src/core/boost/config/compiler/common_edg.hpp:
	* src/core/boost/config/compiler/compaq_cxx.hpp:
	* src/core/boost/config/compiler/digitalmars.hpp:
	* src/core/boost/config/compiler/gcc.hpp:
	* src/core/boost/config/compiler/gcc_xml.hpp:
	* src/core/boost/config/compiler/greenhills.hpp:
	* src/core/boost/config/compiler/hp_acc.hpp:
	* src/core/boost/config/compiler/intel.hpp:
	* src/core/boost/config/compiler/kai.hpp:
	* src/core/boost/config/compiler/metrowerks.hpp:
	* src/core/boost/config/compiler/mpw.hpp:
	* src/core/boost/config/compiler/sgi_mipspro.hpp:
	* src/core/boost/config/compiler/sunpro_cc.hpp:
	* src/core/boost/config/compiler/vacpp.hpp:
	* src/core/boost/config/compiler/visualc.hpp:
	* src/core/boost/config/no_tr1/complex.hpp:
	* src/core/boost/config/no_tr1/functional.hpp:
	* src/core/boost/config/no_tr1/memory.hpp:
	* src/core/boost/config/no_tr1/utility.hpp:
	* src/core/boost/config/platform/aix.hpp:
	* src/core/boost/config/platform/amigaos.hpp:
	* src/core/boost/config/platform/beos.hpp:
	* src/core/boost/config/platform/bsd.hpp:
	* src/core/boost/config/platform/cygwin.hpp:
	* src/core/boost/config/platform/hpux.hpp:
	* src/core/boost/config/platform/irix.hpp:
	* src/core/boost/config/platform/linux.hpp:
	* src/core/boost/config/platform/macos.hpp:
	* src/core/boost/config/platform/qnxnto.hpp:
	* src/core/boost/config/platform/solaris.hpp:
	* src/core/boost/config/platform/win32.hpp:
	* src/core/boost/config/posix_features.hpp:
	* src/core/boost/config/requires_threads.hpp:
	* src/core/boost/config/select_compiler_config.hpp:
	* src/core/boost/config/select_platform_config.hpp:
	* src/core/boost/config/select_stdlib_config.hpp:
	* src/core/boost/config/stdlib/dinkumware.hpp:
	* src/core/boost/config/stdlib/libcomo.hpp:
	* src/core/boost/config/stdlib/libstdcpp3.hpp:
	* src/core/boost/config/stdlib/modena.hpp:
	* src/core/boost/config/stdlib/msl.hpp:
	* src/core/boost/config/stdlib/roguewave.hpp:
	* src/core/boost/config/stdlib/sgi.hpp:
	* src/core/boost/config/stdlib/stlport.hpp:
	* src/core/boost/config/stdlib/vacpp.hpp:
	* src/core/boost/config/suffix.hpp:
	* src/core/boost/config/user.hpp:
	* src/core/boost/copyright:
	* src/core/boost/detail/algorithm.hpp:
	* src/core/boost/detail/allocator_utilities.hpp:
	* src/core/boost/detail/atomic_count.hpp:
	* src/core/boost/detail/atomic_count_gcc.hpp:
	* src/core/boost/detail/atomic_count_pthreads.hpp:
	* src/core/boost/detail/atomic_count_win32.hpp:
	* src/core/boost/detail/bad_weak_ptr.hpp:
	* src/core/boost/detail/binary_search.hpp:
	* src/core/boost/detail/call_traits.hpp:
	* src/core/boost/detail/catch_exceptions.hpp:
	* src/core/boost/detail/compressed_pair.hpp:
	* src/core/boost/detail/dynamic_bitset.hpp:
	* src/core/boost/detail/endian.hpp:
	* src/core/boost/detail/indirect_traits.hpp:
	* src/core/boost/detail/interlocked.hpp:
	* src/core/boost/detail/is_function_ref_tester.hpp:
	* src/core/boost/detail/is_incrementable.hpp:
	* src/core/boost/detail/is_xxx.hpp:
	* src/core/boost/detail/iterator.hpp:
	* src/core/boost/detail/lightweight_mutex.hpp:
	* src/core/boost/detail/lightweight_test.hpp:
	* src/core/boost/detail/limits.hpp:
	* src/core/boost/detail/lwm_nop.hpp:
	* src/core/boost/detail/lwm_pthreads.hpp:
	* src/core/boost/detail/lwm_win32_cs.hpp:
	* src/core/boost/detail/named_template_params.hpp:
	* src/core/boost/detail/no_exceptions_support.hpp:
	* src/core/boost/detail/none_t.hpp:
	* src/core/boost/detail/numeric_traits.hpp:
	* src/core/boost/detail/ob_call_traits.hpp:
	* src/core/boost/detail/ob_compressed_pair.hpp:
	* src/core/boost/detail/quick_allocator.hpp:
	* src/core/boost/detail/reference_content.hpp:
	* src/core/boost/detail/select_type.hpp:
	* src/core/boost/detail/shared_array_nmt.hpp:
	* src/core/boost/detail/shared_count.hpp:
	* src/core/boost/detail/shared_ptr_nmt.hpp:
	* src/core/boost/detail/sp_counted_base.hpp:
	* src/core/boost/detail/sp_counted_base_cw_ppc.hpp:
	* src/core/boost/detail/sp_counted_base_cw_x86.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_ia64.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_ppc.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_x86.hpp:
	* src/core/boost/detail/sp_counted_base_nt.hpp:
	* src/core/boost/detail/sp_counted_base_pt.hpp:
	* src/core/boost/detail/sp_counted_base_w32.hpp:
	* src/core/boost/detail/sp_counted_impl.hpp:
	* src/core/boost/detail/templated_streams.hpp:
	* src/core/boost/detail/utf8_codecvt_facet.hpp:
	* src/core/boost/detail/workaround.hpp:
	* src/core/boost/foreach.hpp:
	* src/core/boost/function.hpp:
	* src/core/boost/function/detail/function_iterate.hpp:
	* src/core/boost/function/detail/maybe_include.hpp:
	* src/core/boost/function/detail/prologue.hpp:
	* src/core/boost/function/function0.hpp:
	* src/core/boost/function/function1.hpp:
	* src/core/boost/function/function10.hpp:
	* src/core/boost/function/function2.hpp:
	* src/core/boost/function/function3.hpp:
	* src/core/boost/function/function4.hpp:
	* src/core/boost/function/function5.hpp:
	* src/core/boost/function/function6.hpp:
	* src/core/boost/function/function7.hpp:
	* src/core/boost/function/function8.hpp:
	* src/core/boost/function/function9.hpp:
	* src/core/boost/function/function_base.hpp:
	* src/core/boost/function/function_template.hpp:
	* src/core/boost/function_equal.hpp:
	* src/core/boost/get_pointer.hpp:
	* src/core/boost/implicit_cast.hpp:
	* src/core/boost/intrusive_ptr.hpp:
	* src/core/boost/iterator.hpp:
	* src/core/boost/iterator/counting_iterator.hpp:
	* src/core/boost/iterator/detail/any_conversion_eater.hpp:
	* src/core/boost/iterator/detail/config_def.hpp:
	* src/core/boost/iterator/detail/config_undef.hpp:
	* src/core/boost/iterator/detail/enable_if.hpp:
	* src/core/boost/iterator/detail/facade_iterator_category.hpp:
	* src/core/boost/iterator/detail/minimum_category.hpp:
	* src/core/boost/iterator/filter_iterator.hpp:
	* src/core/boost/iterator/indirect_iterator.hpp:
	* src/core/boost/iterator/interoperable.hpp:
	* src/core/boost/iterator/is_lvalue_iterator.hpp:
	* src/core/boost/iterator/is_readable_iterator.hpp:
	* src/core/boost/iterator/iterator_adaptor.hpp:
	* src/core/boost/iterator/iterator_archetypes.hpp:
	* src/core/boost/iterator/iterator_categories.hpp:
	* src/core/boost/iterator/iterator_concepts.hpp:
	* src/core/boost/iterator/iterator_facade.hpp:
	* src/core/boost/iterator/iterator_traits.hpp:
	* src/core/boost/iterator/new_iterator_tests.hpp:
	* src/core/boost/iterator/permutation_iterator.hpp:
	* src/core/boost/iterator/reverse_iterator.hpp:
	* src/core/boost/iterator/transform_iterator.hpp:
	* src/core/boost/iterator/zip_iterator.hpp:
	* src/core/boost/lexical_cast.hpp:
	* src/core/boost/mem_fn.hpp:
	* src/core/boost/mpl/O1_size.hpp:
	* src/core/boost/mpl/O1_size_fwd.hpp:
	* src/core/boost/mpl/accumulate.hpp:
	* src/core/boost/mpl/advance.hpp:
	* src/core/boost/mpl/advance_fwd.hpp:
	* src/core/boost/mpl/alias.hpp:
	* src/core/boost/mpl/always.hpp:
	* src/core/boost/mpl/and.hpp:
	* src/core/boost/mpl/apply.hpp:
	* src/core/boost/mpl/apply_fwd.hpp:
	* src/core/boost/mpl/apply_wrap.hpp:
	* src/core/boost/mpl/arg.hpp:
	* src/core/boost/mpl/arg_fwd.hpp:
	* src/core/boost/mpl/arithmetic.hpp:
	* src/core/boost/mpl/as_sequence.hpp:
	* src/core/boost/mpl/assert.hpp:
	* src/core/boost/mpl/at.hpp:
	* src/core/boost/mpl/at_fwd.hpp:
	* src/core/boost/mpl/aux_/O1_size_impl.hpp:
	* src/core/boost/mpl/aux_/adl_barrier.hpp:
	* src/core/boost/mpl/aux_/advance_backward.hpp:
	* src/core/boost/mpl/aux_/advance_forward.hpp:
	* src/core/boost/mpl/aux_/apply_1st.hpp:
	* src/core/boost/mpl/aux_/arg_typedef.hpp:
	* src/core/boost/mpl/aux_/arithmetic_op.hpp:
	* src/core/boost/mpl/aux_/arity.hpp:
	* src/core/boost/mpl/aux_/arity_spec.hpp:
	* src/core/boost/mpl/aux_/at_impl.hpp:
	* src/core/boost/mpl/aux_/back_impl.hpp:
	* src/core/boost/mpl/aux_/basic_bind.hpp:
	* src/core/boost/mpl/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/aux_/clear_impl.hpp:
	* src/core/boost/mpl/aux_/common_name_wknd.hpp:
	* src/core/boost/mpl/aux_/comparison_op.hpp:
	* src/core/boost/mpl/aux_/config/adl.hpp:
	* src/core/boost/mpl/aux_/config/arrays.hpp:
	* src/core/boost/mpl/aux_/config/bind.hpp:
	* src/core/boost/mpl/aux_/config/compiler.hpp:
	* src/core/boost/mpl/aux_/config/ctps.hpp:
	* src/core/boost/mpl/aux_/config/dependent_nttp.hpp:
	* src/core/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp:
	* src/core/boost/mpl/aux_/config/dtp.hpp:
	* src/core/boost/mpl/aux_/config/eti.hpp:
	* src/core/boost/mpl/aux_/config/forwarding.hpp:
	* src/core/boost/mpl/aux_/config/gcc.hpp:
	* src/core/boost/mpl/aux_/config/has_apply.hpp:
	* src/core/boost/mpl/aux_/config/has_xxx.hpp:
	* src/core/boost/mpl/aux_/config/integral.hpp:
	* src/core/boost/mpl/aux_/config/intel.hpp:
	* src/core/boost/mpl/aux_/config/lambda.hpp:
	* src/core/boost/mpl/aux_/config/msvc.hpp:
	* src/core/boost/mpl/aux_/config/msvc_typename.hpp:
	* src/core/boost/mpl/aux_/config/nttp.hpp:
	* src/core/boost/mpl/aux_/config/operators.hpp:
	* src/core/boost/mpl/aux_/config/overload_resolution.hpp:
	* src/core/boost/mpl/aux_/config/preprocessor.hpp:
	* src/core/boost/mpl/aux_/config/static_constant.hpp:
	* src/core/boost/mpl/aux_/config/ttp.hpp:
	* src/core/boost/mpl/aux_/config/typeof.hpp:
	* src/core/boost/mpl/aux_/config/use_preprocessed.hpp:
	* src/core/boost/mpl/aux_/config/workaround.hpp:
	* src/core/boost/mpl/aux_/contains_impl.hpp:
	* src/core/boost/mpl/aux_/count_args.hpp:
	* src/core/boost/mpl/aux_/count_impl.hpp:
	* src/core/boost/mpl/aux_/empty_impl.hpp:
	* src/core/boost/mpl/aux_/erase_impl.hpp:
	* src/core/boost/mpl/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/aux_/filter_iter.hpp:
	* src/core/boost/mpl/aux_/find_if_pred.hpp:
	* src/core/boost/mpl/aux_/fold_impl.hpp:
	* src/core/boost/mpl/aux_/fold_impl_body.hpp:
	* src/core/boost/mpl/aux_/fold_op.hpp:
	* src/core/boost/mpl/aux_/fold_pred.hpp:
	* src/core/boost/mpl/aux_/front_impl.hpp:
	* src/core/boost/mpl/aux_/full_lambda.hpp:
	* src/core/boost/mpl/aux_/has_apply.hpp:
	* src/core/boost/mpl/aux_/has_begin.hpp:
	* src/core/boost/mpl/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/aux_/has_rebind.hpp:
	* src/core/boost/mpl/aux_/has_size.hpp:
	* src/core/boost/mpl/aux_/has_tag.hpp:
	* src/core/boost/mpl/aux_/has_type.hpp:
	* src/core/boost/mpl/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/aux_/insert_impl.hpp:
	* src/core/boost/mpl/aux_/insert_range_impl.hpp:
	* src/core/boost/mpl/aux_/inserter_algorithm.hpp:
	* src/core/boost/mpl/aux_/integral_wrapper.hpp:
	* src/core/boost/mpl/aux_/is_msvc_eti_arg.hpp:
	* src/core/boost/mpl/aux_/iter_apply.hpp:
	* src/core/boost/mpl/aux_/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/iter_push_front.hpp:
	* src/core/boost/mpl/aux_/joint_iter.hpp:
	* src/core/boost/mpl/aux_/lambda_arity_param.hpp:
	* src/core/boost/mpl/aux_/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/lambda_spec.hpp:
	* src/core/boost/mpl/aux_/lambda_support.hpp:
	* src/core/boost/mpl/aux_/largest_int.hpp:
	* src/core/boost/mpl/aux_/logical_op.hpp:
	* src/core/boost/mpl/aux_/msvc_dtw.hpp:
	* src/core/boost/mpl/aux_/msvc_eti_base.hpp:
	* src/core/boost/mpl/aux_/msvc_is_class.hpp:
	* src/core/boost/mpl/aux_/msvc_never_true.hpp:
	* src/core/boost/mpl/aux_/msvc_type.hpp:
	* src/core/boost/mpl/aux_/na.hpp:
	* src/core/boost/mpl/aux_/na_assert.hpp:
	* src/core/boost/mpl/aux_/na_fwd.hpp:
	* src/core/boost/mpl/aux_/na_spec.hpp:
	* src/core/boost/mpl/aux_/nested_type_wknd.hpp:
	* src/core/boost/mpl/aux_/nttp_decl.hpp:
	* src/core/boost/mpl/aux_/numeric_cast_utils.hpp:
	* src/core/boost/mpl/aux_/numeric_op.hpp:
	* src/core/boost/mpl/aux_/order_impl.hpp:
	* src/core/boost/mpl/aux_/overload_names.hpp:
	* src/core/boost/mpl/aux_/partition_op.hpp:
	* src/core/boost/mpl/aux_/pop_back_impl.hpp:
	* src/core/boost/mpl/aux_/pop_front_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessor/add.hpp:
	* src/core/boost/mpl/aux_/preprocessor/def_params_tail.hpp:
	* src/core/boost/mpl/aux_/preprocessor/default_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/enum.hpp:
	* src/core/boost/mpl/aux_/preprocessor/ext_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/filter_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/is_seq.hpp:
	* src/core/boost/mpl/aux_/preprocessor/params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/partial_spec_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/range.hpp:
	* src/core/boost/mpl/aux_/preprocessor/repeat.hpp:
	* src/core/boost/mpl/aux_/preprocessor/sub.hpp:
	* src/core/boost/mpl/aux_/preprocessor/token_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessor/tuple.hpp:
	* src/core/boost/mpl/aux_/ptr_to_ref.hpp:
	* src/core/boost/mpl/aux_/push_back_impl.hpp:
	* src/core/boost/mpl/aux_/push_front_impl.hpp:
	* src/core/boost/mpl/aux_/range_c/O1_size.hpp:
	* src/core/boost/mpl/aux_/range_c/back.hpp:
	* src/core/boost/mpl/aux_/range_c/empty.hpp:
	* src/core/boost/mpl/aux_/range_c/front.hpp:
	* src/core/boost/mpl/aux_/range_c/iterator.hpp:
	* src/core/boost/mpl/aux_/range_c/size.hpp:
	* src/core/boost/mpl/aux_/range_c/tag.hpp:
	* src/core/boost/mpl/aux_/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/reverse_fold_impl_body.hpp:
	* src/core/boost/mpl/aux_/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/sequence_wrapper.hpp:
	* src/core/boost/mpl/aux_/shift_op.hpp:
	* src/core/boost/mpl/aux_/single_element_iter.hpp:
	* src/core/boost/mpl/aux_/size_impl.hpp:
	* src/core/boost/mpl/aux_/sort_impl.hpp:
	* src/core/boost/mpl/aux_/static_cast.hpp:
	* src/core/boost/mpl/aux_/template_arity.hpp:
	* src/core/boost/mpl/aux_/template_arity_fwd.hpp:
	* src/core/boost/mpl/aux_/test.hpp:
	* src/core/boost/mpl/aux_/test/assert.hpp:
	* src/core/boost/mpl/aux_/test/data.hpp:
	* src/core/boost/mpl/aux_/test/test_case.hpp:
	* src/core/boost/mpl/aux_/traits_lambda_spec.hpp:
	* src/core/boost/mpl/aux_/transform_iter.hpp:
	* src/core/boost/mpl/aux_/type_wrapper.hpp:
	* src/core/boost/mpl/aux_/unwrap.hpp:
	* src/core/boost/mpl/aux_/value_wknd.hpp:
	* src/core/boost/mpl/aux_/yes_no.hpp:
	* src/core/boost/mpl/back.hpp:
	* src/core/boost/mpl/back_fwd.hpp:
	* src/core/boost/mpl/back_inserter.hpp:
	* src/core/boost/mpl/base.hpp:
	* src/core/boost/mpl/begin.hpp:
	* src/core/boost/mpl/begin_end.hpp:
	* src/core/boost/mpl/begin_end_fwd.hpp:
	* src/core/boost/mpl/bind.hpp:
	* src/core/boost/mpl/bind_fwd.hpp:
	* src/core/boost/mpl/bitand.hpp:
	* src/core/boost/mpl/bitor.hpp:
	* src/core/boost/mpl/bitwise.hpp:
	* src/core/boost/mpl/bitxor.hpp:
	* src/core/boost/mpl/bool.hpp:
	* src/core/boost/mpl/bool_fwd.hpp:
	* src/core/boost/mpl/clear.hpp:
	* src/core/boost/mpl/clear_fwd.hpp:
	* src/core/boost/mpl/comparison.hpp:
	* src/core/boost/mpl/contains.hpp:
	* src/core/boost/mpl/contains_fwd.hpp:
	* src/core/boost/mpl/copy.hpp:
	* src/core/boost/mpl/copy_if.hpp:
	* src/core/boost/mpl/count.hpp:
	* src/core/boost/mpl/count_fwd.hpp:
	* src/core/boost/mpl/count_if.hpp:
	* src/core/boost/mpl/deque.hpp:
	* src/core/boost/mpl/deref.hpp:
	* src/core/boost/mpl/distance.hpp:
	* src/core/boost/mpl/distance_fwd.hpp:
	* src/core/boost/mpl/divides.hpp:
	* src/core/boost/mpl/empty.hpp:
	* src/core/boost/mpl/empty_base.hpp:
	* src/core/boost/mpl/empty_fwd.hpp:
	* src/core/boost/mpl/empty_sequence.hpp:
	* src/core/boost/mpl/end.hpp:
	* src/core/boost/mpl/equal.hpp:
	* src/core/boost/mpl/equal_to.hpp:
	* src/core/boost/mpl/erase.hpp:
	* src/core/boost/mpl/erase_fwd.hpp:
	* src/core/boost/mpl/erase_key.hpp:
	* src/core/boost/mpl/erase_key_fwd.hpp:
	* src/core/boost/mpl/eval_if.hpp:
	* src/core/boost/mpl/filter_view.hpp:
	* src/core/boost/mpl/find.hpp:
	* src/core/boost/mpl/find_if.hpp:
	* src/core/boost/mpl/fold.hpp:
	* src/core/boost/mpl/for_each.hpp:
	* src/core/boost/mpl/front.hpp:
	* src/core/boost/mpl/front_fwd.hpp:
	* src/core/boost/mpl/front_inserter.hpp:
	* src/core/boost/mpl/greater.hpp:
	* src/core/boost/mpl/greater_equal.hpp:
	* src/core/boost/mpl/has_key.hpp:
	* src/core/boost/mpl/has_key_fwd.hpp:
	* src/core/boost/mpl/has_xxx.hpp:
	* src/core/boost/mpl/identity.hpp:
	* src/core/boost/mpl/if.hpp:
	* src/core/boost/mpl/index_if.hpp:
	* src/core/boost/mpl/index_of.hpp:
	* src/core/boost/mpl/inherit.hpp:
	* src/core/boost/mpl/inherit_linearly.hpp:
	* src/core/boost/mpl/insert.hpp:
	* src/core/boost/mpl/insert_fwd.hpp:
	* src/core/boost/mpl/insert_range.hpp:
	* src/core/boost/mpl/insert_range_fwd.hpp:
	* src/core/boost/mpl/inserter.hpp:
	* src/core/boost/mpl/int.hpp:
	* src/core/boost/mpl/int_fwd.hpp:
	* src/core/boost/mpl/integral_c.hpp:
	* src/core/boost/mpl/integral_c_fwd.hpp:
	* src/core/boost/mpl/integral_c_tag.hpp:
	* src/core/boost/mpl/is_placeholder.hpp:
	* src/core/boost/mpl/is_sequence.hpp:
	* src/core/boost/mpl/iter_fold.hpp:
	* src/core/boost/mpl/iter_fold_if.hpp:
	* src/core/boost/mpl/iterator_category.hpp:
	* src/core/boost/mpl/iterator_range.hpp:
	* src/core/boost/mpl/iterator_tags.hpp:
	* src/core/boost/mpl/joint_view.hpp:
	* src/core/boost/mpl/key_type.hpp:
	* src/core/boost/mpl/key_type_fwd.hpp:
	* src/core/boost/mpl/lambda.hpp:
	* src/core/boost/mpl/lambda_fwd.hpp:
	* src/core/boost/mpl/less.hpp:
	* src/core/boost/mpl/less_equal.hpp:
	* src/core/boost/mpl/limits/arity.hpp:
	* src/core/boost/mpl/limits/list.hpp:
	* src/core/boost/mpl/limits/map.hpp:
	* src/core/boost/mpl/limits/set.hpp:
	* src/core/boost/mpl/limits/unrolling.hpp:
	* src/core/boost/mpl/limits/vector.hpp:
	* src/core/boost/mpl/list.hpp:
	* src/core/boost/mpl/list/aux_/O1_size.hpp:
	* src/core/boost/mpl/list/aux_/begin_end.hpp:
	* src/core/boost/mpl/list/aux_/clear.hpp:
	* src/core/boost/mpl/list/aux_/empty.hpp:
	* src/core/boost/mpl/list/aux_/front.hpp:
	* src/core/boost/mpl/list/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/list/aux_/item.hpp:
	* src/core/boost/mpl/list/aux_/iterator.hpp:
	* src/core/boost/mpl/list/aux_/numbered.hpp:
	* src/core/boost/mpl/list/aux_/numbered_c.hpp:
	* src/core/boost/mpl/list/aux_/pop_front.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list10.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list10_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list20.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list20_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list30.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list30_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list40.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list40_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list50.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list50_c.hpp:
	* src/core/boost/mpl/list/aux_/push_back.hpp:
	* src/core/boost/mpl/list/aux_/push_front.hpp:
	* src/core/boost/mpl/list/aux_/size.hpp:
	* src/core/boost/mpl/list/aux_/tag.hpp:
	* src/core/boost/mpl/list/list0.hpp:
	* src/core/boost/mpl/list/list0_c.hpp:
	* src/core/boost/mpl/list/list10.hpp:
	* src/core/boost/mpl/list/list10_c.hpp:
	* src/core/boost/mpl/list/list20.hpp:
	* src/core/boost/mpl/list/list20_c.hpp:
	* src/core/boost/mpl/list/list30.hpp:
	* src/core/boost/mpl/list/list30_c.hpp:
	* src/core/boost/mpl/list/list40.hpp:
	* src/core/boost/mpl/list/list40_c.hpp:
	* src/core/boost/mpl/list/list50.hpp:
	* src/core/boost/mpl/list/list50_c.hpp:
	* src/core/boost/mpl/list_c.hpp:
	* src/core/boost/mpl/logical.hpp:
	* src/core/boost/mpl/long.hpp:
	* src/core/boost/mpl/long_fwd.hpp:
	* src/core/boost/mpl/lower_bound.hpp:
	* src/core/boost/mpl/map.hpp:
	* src/core/boost/mpl/map/aux_/at_impl.hpp:
	* src/core/boost/mpl/map/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/map/aux_/clear_impl.hpp:
	* src/core/boost/mpl/map/aux_/contains_impl.hpp:
	* src/core/boost/mpl/map/aux_/empty_impl.hpp:
	* src/core/boost/mpl/map/aux_/erase_impl.hpp:
	* src/core/boost/mpl/map/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/map/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/map/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/map/aux_/insert_impl.hpp:
	* src/core/boost/mpl/map/aux_/item.hpp:
	* src/core/boost/mpl/map/aux_/iterator.hpp:
	* src/core/boost/mpl/map/aux_/key_type_impl.hpp:
	* src/core/boost/mpl/map/aux_/map0.hpp:
	* src/core/boost/mpl/map/aux_/numbered.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map50.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map50.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map50.hpp:
	* src/core/boost/mpl/map/aux_/size_impl.hpp:
	* src/core/boost/mpl/map/aux_/tag.hpp:
	* src/core/boost/mpl/map/aux_/value_type_impl.hpp:
	* src/core/boost/mpl/map/map0.hpp:
	* src/core/boost/mpl/map/map10.hpp:
	* src/core/boost/mpl/map/map20.hpp:
	* src/core/boost/mpl/map/map30.hpp:
	* src/core/boost/mpl/map/map40.hpp:
	* src/core/boost/mpl/map/map50.hpp:
	* src/core/boost/mpl/math/fixed_c.hpp:
	* src/core/boost/mpl/math/is_even.hpp:
	* src/core/boost/mpl/math/rational_c.hpp:
	* src/core/boost/mpl/max.hpp:
	* src/core/boost/mpl/max_element.hpp:
	* src/core/boost/mpl/min.hpp:
	* src/core/boost/mpl/min_element.hpp:
	* src/core/boost/mpl/min_max.hpp:
	* src/core/boost/mpl/minus.hpp:
	* src/core/boost/mpl/modulus.hpp:
	* src/core/boost/mpl/multiplies.hpp:
	* src/core/boost/mpl/multiset/aux_/count_impl.hpp:
	* src/core/boost/mpl/multiset/aux_/insert_impl.hpp:
	* src/core/boost/mpl/multiset/aux_/item.hpp:
	* src/core/boost/mpl/multiset/aux_/multiset0.hpp:
	* src/core/boost/mpl/multiset/aux_/tag.hpp:
	* src/core/boost/mpl/multiset/multiset0.hpp:
	* src/core/boost/mpl/negate.hpp:
	* src/core/boost/mpl/next.hpp:
	* src/core/boost/mpl/next_prior.hpp:
	* src/core/boost/mpl/not.hpp:
	* src/core/boost/mpl/not_equal_to.hpp:
	* src/core/boost/mpl/numeric_cast.hpp:
	* src/core/boost/mpl/or.hpp:
	* src/core/boost/mpl/order.hpp:
	* src/core/boost/mpl/order_fwd.hpp:
	* src/core/boost/mpl/pair.hpp:
	* src/core/boost/mpl/pair_view.hpp:
	* src/core/boost/mpl/partition.hpp:
	* src/core/boost/mpl/placeholders.hpp:
	* src/core/boost/mpl/plus.hpp:
	* src/core/boost/mpl/pop_back.hpp:
	* src/core/boost/mpl/pop_back_fwd.hpp:
	* src/core/boost/mpl/pop_front.hpp:
	* src/core/boost/mpl/pop_front_fwd.hpp:
	* src/core/boost/mpl/print.hpp:
	* src/core/boost/mpl/prior.hpp:
	* src/core/boost/mpl/protect.hpp:
	* src/core/boost/mpl/push_back.hpp:
	* src/core/boost/mpl/push_back_fwd.hpp:
	* src/core/boost/mpl/push_front.hpp:
	* src/core/boost/mpl/push_front_fwd.hpp:
	* src/core/boost/mpl/quote.hpp:
	* src/core/boost/mpl/range_c.hpp:
	* src/core/boost/mpl/remove.hpp:
	* src/core/boost/mpl/remove_if.hpp:
	* src/core/boost/mpl/replace.hpp:
	* src/core/boost/mpl/replace_if.hpp:
	* src/core/boost/mpl/reverse.hpp:
	* src/core/boost/mpl/reverse_fold.hpp:
	* src/core/boost/mpl/reverse_iter_fold.hpp:
	* src/core/boost/mpl/same_as.hpp:
	* src/core/boost/mpl/sequence_tag.hpp:
	* src/core/boost/mpl/sequence_tag_fwd.hpp:
	* src/core/boost/mpl/set.hpp:
	* src/core/boost/mpl/set/aux_/at_impl.hpp:
	* src/core/boost/mpl/set/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/set/aux_/clear_impl.hpp:
	* src/core/boost/mpl/set/aux_/empty_impl.hpp:
	* src/core/boost/mpl/set/aux_/erase_impl.hpp:
	* src/core/boost/mpl/set/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/set/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/set/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/set/aux_/insert_impl.hpp:
	* src/core/boost/mpl/set/aux_/item.hpp:
	* src/core/boost/mpl/set/aux_/iterator.hpp:
	* src/core/boost/mpl/set/aux_/key_type_impl.hpp:
	* src/core/boost/mpl/set/aux_/numbered.hpp:
	* src/core/boost/mpl/set/aux_/numbered_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set10.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set10_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set20.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set20_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set30.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set30_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set40.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set40_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set50.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set50_c.hpp:
	* src/core/boost/mpl/set/aux_/set0.hpp:
	* src/core/boost/mpl/set/aux_/size_impl.hpp:
	* src/core/boost/mpl/set/aux_/tag.hpp:
	* src/core/boost/mpl/set/aux_/value_type_impl.hpp:
	* src/core/boost/mpl/set/set0.hpp:
	* src/core/boost/mpl/set/set0_c.hpp:
	* src/core/boost/mpl/set/set10.hpp:
	* src/core/boost/mpl/set/set10_c.hpp:
	* src/core/boost/mpl/set/set20.hpp:
	* src/core/boost/mpl/set/set20_c.hpp:
	* src/core/boost/mpl/set/set30.hpp:
	* src/core/boost/mpl/set/set30_c.hpp:
	* src/core/boost/mpl/set/set40.hpp:
	* src/core/boost/mpl/set/set40_c.hpp:
	* src/core/boost/mpl/set/set50.hpp:
	* src/core/boost/mpl/set/set50_c.hpp:
	* src/core/boost/mpl/set_c.hpp:
	* src/core/boost/mpl/shift_left.hpp:
	* src/core/boost/mpl/shift_right.hpp:
	* src/core/boost/mpl/single_view.hpp:
	* src/core/boost/mpl/size.hpp:
	* src/core/boost/mpl/size_fwd.hpp:
	* src/core/boost/mpl/size_t.hpp:
	* src/core/boost/mpl/size_t_fwd.hpp:
	* src/core/boost/mpl/sizeof.hpp:
	* src/core/boost/mpl/sort.hpp:
	* src/core/boost/mpl/stable_partition.hpp:
	* src/core/boost/mpl/switch.hpp:
	* src/core/boost/mpl/tag.hpp:
	* src/core/boost/mpl/times.hpp:
	* src/core/boost/mpl/transform.hpp:
	* src/core/boost/mpl/transform_view.hpp:
	* src/core/boost/mpl/unique.hpp:
	* src/core/boost/mpl/unpack_args.hpp:
	* src/core/boost/mpl/upper_bound.hpp:
	* src/core/boost/mpl/value_type.hpp:
	* src/core/boost/mpl/value_type_fwd.hpp:
	* src/core/boost/mpl/vector.hpp:
	* src/core/boost/mpl/vector/aux_/O1_size.hpp:
	* src/core/boost/mpl/vector/aux_/at.hpp:
	* src/core/boost/mpl/vector/aux_/back.hpp:
	* src/core/boost/mpl/vector/aux_/begin_end.hpp:
	* src/core/boost/mpl/vector/aux_/clear.hpp:
	* src/core/boost/mpl/vector/aux_/empty.hpp:
	* src/core/boost/mpl/vector/aux_/front.hpp:
	* src/core/boost/mpl/vector/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/vector/aux_/item.hpp:
	* src/core/boost/mpl/vector/aux_/iterator.hpp:
	* src/core/boost/mpl/vector/aux_/numbered.hpp:
	* src/core/boost/mpl/vector/aux_/numbered_c.hpp:
	* src/core/boost/mpl/vector/aux_/pop_back.hpp:
	* src/core/boost/mpl/vector/aux_/pop_front.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/push_back.hpp:
	* src/core/boost/mpl/vector/aux_/push_front.hpp:
	* src/core/boost/mpl/vector/aux_/size.hpp:
	* src/core/boost/mpl/vector/aux_/tag.hpp:
	* src/core/boost/mpl/vector/aux_/vector0.hpp:
	* src/core/boost/mpl/vector/vector0.hpp:
	* src/core/boost/mpl/vector/vector0_c.hpp:
	* src/core/boost/mpl/vector/vector10.hpp:
	* src/core/boost/mpl/vector/vector10_c.hpp:
	* src/core/boost/mpl/vector/vector20.hpp:
	* src/core/boost/mpl/vector/vector20_c.hpp:
	* src/core/boost/mpl/vector/vector30.hpp:
	* src/core/boost/mpl/vector/vector30_c.hpp:
	* src/core/boost/mpl/vector/vector40.hpp:
	* src/core/boost/mpl/vector/vector40_c.hpp:
	* src/core/boost/mpl/vector/vector50.hpp:
	* src/core/boost/mpl/vector/vector50_c.hpp:
	* src/core/boost/mpl/vector_c.hpp:
	* src/core/boost/mpl/void.hpp:
	* src/core/boost/mpl/void_fwd.hpp:
	* src/core/boost/mpl/zip_view.hpp:
	* src/core/boost/next_prior.hpp:
	* src/core/boost/noncopyable.hpp:
	* src/core/boost/pointer_cast.hpp:
	* src/core/boost/preprocessor.hpp:
	* src/core/boost/preprocessor/arithmetic.hpp:
	* src/core/boost/preprocessor/arithmetic/add.hpp:
	* src/core/boost/preprocessor/arithmetic/dec.hpp:
	* src/core/boost/preprocessor/arithmetic/detail/div_base.hpp:
	* src/core/boost/preprocessor/arithmetic/div.hpp:
	* src/core/boost/preprocessor/arithmetic/inc.hpp:
	* src/core/boost/preprocessor/arithmetic/mod.hpp:
	* src/core/boost/preprocessor/arithmetic/mul.hpp:
	* src/core/boost/preprocessor/arithmetic/sub.hpp:
	* src/core/boost/preprocessor/array.hpp:
	* src/core/boost/preprocessor/array/data.hpp:
	* src/core/boost/preprocessor/array/elem.hpp:
	* src/core/boost/preprocessor/array/insert.hpp:
	* src/core/boost/preprocessor/array/pop_back.hpp:
	* src/core/boost/preprocessor/array/pop_front.hpp:
	* src/core/boost/preprocessor/array/push_back.hpp:
	* src/core/boost/preprocessor/array/push_front.hpp:
	* src/core/boost/preprocessor/array/remove.hpp:
	* src/core/boost/preprocessor/array/replace.hpp:
	* src/core/boost/preprocessor/array/reverse.hpp:
	* src/core/boost/preprocessor/array/size.hpp:
	* src/core/boost/preprocessor/assert_msg.hpp:
	* src/core/boost/preprocessor/cat.hpp:
	* src/core/boost/preprocessor/comma.hpp:
	* src/core/boost/preprocessor/comma_if.hpp:
	* src/core/boost/preprocessor/comparison.hpp:
	* src/core/boost/preprocessor/comparison/equal.hpp:
	* src/core/boost/preprocessor/comparison/greater.hpp:
	* src/core/boost/preprocessor/comparison/greater_equal.hpp:
	* src/core/boost/preprocessor/comparison/less.hpp:
	* src/core/boost/preprocessor/comparison/less_equal.hpp:
	* src/core/boost/preprocessor/comparison/not_equal.hpp:
	* src/core/boost/preprocessor/config/config.hpp:
	* src/core/boost/preprocessor/config/limits.hpp:
	* src/core/boost/preprocessor/control.hpp:
	* src/core/boost/preprocessor/control/deduce_d.hpp:
	* src/core/boost/preprocessor/control/detail/dmc/while.hpp:
	* src/core/boost/preprocessor/control/detail/edg/while.hpp:
	* src/core/boost/preprocessor/control/detail/msvc/while.hpp:
	* src/core/boost/preprocessor/control/detail/while.hpp:
	* src/core/boost/preprocessor/control/expr_if.hpp:
	* src/core/boost/preprocessor/control/expr_iif.hpp:
	* src/core/boost/preprocessor/control/if.hpp:
	* src/core/boost/preprocessor/control/iif.hpp:
	* src/core/boost/preprocessor/control/while.hpp:
	* src/core/boost/preprocessor/debug.hpp:
	* src/core/boost/preprocessor/debug/assert.hpp:
	* src/core/boost/preprocessor/debug/error.hpp:
	* src/core/boost/preprocessor/debug/line.hpp:
	* src/core/boost/preprocessor/dec.hpp:
	* src/core/boost/preprocessor/detail/auto_rec.hpp:
	* src/core/boost/preprocessor/detail/check.hpp:
	* src/core/boost/preprocessor/detail/dmc/auto_rec.hpp:
	* src/core/boost/preprocessor/detail/is_binary.hpp:
	* src/core/boost/preprocessor/detail/is_nullary.hpp:
	* src/core/boost/preprocessor/detail/is_unary.hpp:
	* src/core/boost/preprocessor/detail/null.hpp:
	* src/core/boost/preprocessor/detail/split.hpp:
	* src/core/boost/preprocessor/empty.hpp:
	* src/core/boost/preprocessor/enum.hpp:
	* src/core/boost/preprocessor/enum_params.hpp:
	* src/core/boost/preprocessor/enum_params_with_a_default.hpp:
	* src/core/boost/preprocessor/enum_params_with_defaults.hpp:
	* src/core/boost/preprocessor/enum_shifted.hpp:
	* src/core/boost/preprocessor/enum_shifted_params.hpp:
	* src/core/boost/preprocessor/expand.hpp:
	* src/core/boost/preprocessor/expr_if.hpp:
	* src/core/boost/preprocessor/facilities.hpp:
	* src/core/boost/preprocessor/facilities/apply.hpp:
	* src/core/boost/preprocessor/facilities/empty.hpp:
	* src/core/boost/preprocessor/facilities/expand.hpp:
	* src/core/boost/preprocessor/facilities/identity.hpp:
	* src/core/boost/preprocessor/facilities/intercept.hpp:
	* src/core/boost/preprocessor/facilities/is_1.hpp:
	* src/core/boost/preprocessor/facilities/is_empty.hpp:
	* src/core/boost/preprocessor/facilities/is_empty_or_1.hpp:
	* src/core/boost/preprocessor/for.hpp:
	* src/core/boost/preprocessor/identity.hpp:
	* src/core/boost/preprocessor/if.hpp:
	* src/core/boost/preprocessor/inc.hpp:
	* src/core/boost/preprocessor/iterate.hpp:
	* src/core/boost/preprocessor/iteration.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower1.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower2.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower3.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower4.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower5.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper1.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper2.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper3.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper4.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper5.hpp:
	* src/core/boost/preprocessor/iteration/detail/finish.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward1.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward2.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward3.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward4.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward5.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse1.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse2.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse3.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse4.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse5.hpp:
	* src/core/boost/preprocessor/iteration/detail/local.hpp:
	* src/core/boost/preprocessor/iteration/detail/rlocal.hpp:
	* src/core/boost/preprocessor/iteration/detail/self.hpp:
	* src/core/boost/preprocessor/iteration/detail/start.hpp:
	* src/core/boost/preprocessor/iteration/iterate.hpp:
	* src/core/boost/preprocessor/iteration/local.hpp:
	* src/core/boost/preprocessor/iteration/self.hpp:
	* src/core/boost/preprocessor/library.hpp:
	* src/core/boost/preprocessor/limits.hpp:
	* src/core/boost/preprocessor/list.hpp:
	* src/core/boost/preprocessor/list/adt.hpp:
	* src/core/boost/preprocessor/list/append.hpp:
	* src/core/boost/preprocessor/list/at.hpp:
	* src/core/boost/preprocessor/list/cat.hpp:
	* src/core/boost/preprocessor/list/detail/dmc/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/edg/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/edg/fold_right.hpp:
	* src/core/boost/preprocessor/list/detail/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/fold_right.hpp:
	* src/core/boost/preprocessor/list/enum.hpp:
	* src/core/boost/preprocessor/list/filter.hpp:
	* src/core/boost/preprocessor/list/first_n.hpp:
	* src/core/boost/preprocessor/list/fold_left.hpp:
	* src/core/boost/preprocessor/list/fold_right.hpp:
	* src/core/boost/preprocessor/list/for_each.hpp:
	* src/core/boost/preprocessor/list/for_each_i.hpp:
	* src/core/boost/preprocessor/list/for_each_product.hpp:
	* src/core/boost/preprocessor/list/rest_n.hpp:
	* src/core/boost/preprocessor/list/reverse.hpp:
	* src/core/boost/preprocessor/list/size.hpp:
	* src/core/boost/preprocessor/list/to_tuple.hpp:
	* src/core/boost/preprocessor/list/transform.hpp:
	* src/core/boost/preprocessor/logical.hpp:
	* src/core/boost/preprocessor/logical/and.hpp:
	* src/core/boost/preprocessor/logical/bitand.hpp:
	* src/core/boost/preprocessor/logical/bitnor.hpp:
	* src/core/boost/preprocessor/logical/bitor.hpp:
	* src/core/boost/preprocessor/logical/bitxor.hpp:
	* src/core/boost/preprocessor/logical/bool.hpp:
	* src/core/boost/preprocessor/logical/compl.hpp:
	* src/core/boost/preprocessor/logical/nor.hpp:
	* src/core/boost/preprocessor/logical/not.hpp:
	* src/core/boost/preprocessor/logical/or.hpp:
	* src/core/boost/preprocessor/logical/xor.hpp:
	* src/core/boost/preprocessor/max.hpp:
	* src/core/boost/preprocessor/min.hpp:
	* src/core/boost/preprocessor/punctuation.hpp:
	* src/core/boost/preprocessor/punctuation/comma.hpp:
	* src/core/boost/preprocessor/punctuation/comma_if.hpp:
	* src/core/boost/preprocessor/punctuation/paren.hpp:
	* src/core/boost/preprocessor/punctuation/paren_if.hpp:
	* src/core/boost/preprocessor/repeat.hpp:
	* src/core/boost/preprocessor/repeat_2nd.hpp:
	* src/core/boost/preprocessor/repeat_3rd.hpp:
	* src/core/boost/preprocessor/repeat_from_to.hpp:
	* src/core/boost/preprocessor/repeat_from_to_2nd.hpp:
	* src/core/boost/preprocessor/repeat_from_to_3rd.hpp:
	* src/core/boost/preprocessor/repetition.hpp:
	* src/core/boost/preprocessor/repetition/deduce_r.hpp:
	* src/core/boost/preprocessor/repetition/deduce_z.hpp:
	* src/core/boost/preprocessor/repetition/detail/dmc/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/edg/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/msvc/for.hpp:
	* src/core/boost/preprocessor/repetition/enum.hpp:
	* src/core/boost/preprocessor/repetition/enum_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_params_with_a_default.hpp:
	* src/core/boost/preprocessor/repetition/enum_params_with_defaults.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing_params.hpp:
	* src/core/boost/preprocessor/repetition/for.hpp:
	* src/core/boost/preprocessor/repetition/repeat.hpp:
	* src/core/boost/preprocessor/repetition/repeat_from_to.hpp:
	* src/core/boost/preprocessor/selection.hpp:
	* src/core/boost/preprocessor/selection/max.hpp:
	* src/core/boost/preprocessor/selection/min.hpp:
	* src/core/boost/preprocessor/seq.hpp:
	* src/core/boost/preprocessor/seq/cat.hpp:
	* src/core/boost/preprocessor/seq/detail/split.hpp:
	* src/core/boost/preprocessor/seq/elem.hpp:
	* src/core/boost/preprocessor/seq/enum.hpp:
	* src/core/boost/preprocessor/seq/filter.hpp:
	* src/core/boost/preprocessor/seq/first_n.hpp:
	* src/core/boost/preprocessor/seq/fold_left.hpp:
	* src/core/boost/preprocessor/seq/fold_right.hpp:
	* src/core/boost/preprocessor/seq/for_each.hpp:
	* src/core/boost/preprocessor/seq/for_each_i.hpp:
	* src/core/boost/preprocessor/seq/for_each_product.hpp:
	* src/core/boost/preprocessor/seq/insert.hpp:
	* src/core/boost/preprocessor/seq/pop_back.hpp:
	* src/core/boost/preprocessor/seq/pop_front.hpp:
	* src/core/boost/preprocessor/seq/push_back.hpp:
	* src/core/boost/preprocessor/seq/push_front.hpp:
	* src/core/boost/preprocessor/seq/remove.hpp:
	* src/core/boost/preprocessor/seq/replace.hpp:
	* src/core/boost/preprocessor/seq/rest_n.hpp:
	* src/core/boost/preprocessor/seq/reverse.hpp:
	* src/core/boost/preprocessor/seq/seq.hpp:
	* src/core/boost/preprocessor/seq/size.hpp:
	* src/core/boost/preprocessor/seq/subseq.hpp:
	* src/core/boost/preprocessor/seq/to_array.hpp:
	* src/core/boost/preprocessor/seq/to_tuple.hpp:
	* src/core/boost/preprocessor/seq/transform.hpp:
	* src/core/boost/preprocessor/slot.hpp:
	* src/core/boost/preprocessor/slot/counter.hpp:
	* src/core/boost/preprocessor/slot/detail/counter.hpp:
	* src/core/boost/preprocessor/slot/detail/def.hpp:
	* src/core/boost/preprocessor/slot/detail/shared.hpp:
	* src/core/boost/preprocessor/slot/detail/slot1.hpp:
	* src/core/boost/preprocessor/slot/detail/slot2.hpp:
	* src/core/boost/preprocessor/slot/detail/slot3.hpp:
	* src/core/boost/preprocessor/slot/detail/slot4.hpp:
	* src/core/boost/preprocessor/slot/detail/slot5.hpp:
	* src/core/boost/preprocessor/slot/slot.hpp:
	* src/core/boost/preprocessor/stringize.hpp:
	* src/core/boost/preprocessor/tuple.hpp:
	* src/core/boost/preprocessor/tuple/eat.hpp:
	* src/core/boost/preprocessor/tuple/elem.hpp:
	* src/core/boost/preprocessor/tuple/rem.hpp:
	* src/core/boost/preprocessor/tuple/reverse.hpp:
	* src/core/boost/preprocessor/tuple/to_list.hpp:
	* src/core/boost/preprocessor/tuple/to_seq.hpp:
	* src/core/boost/preprocessor/while.hpp:
	* src/core/boost/preprocessor/wstringize.hpp:
	* src/core/boost/range.hpp:
	* src/core/boost/range/begin.hpp:
	* src/core/boost/range/concepts.hpp:
	* src/core/boost/range/config.hpp:
	* src/core/boost/range/const_iterator.hpp:
	* src/core/boost/range/const_reverse_iterator.hpp:
	* src/core/boost/range/detail/begin.hpp:
	* src/core/boost/range/detail/collection_traits.hpp:
	* src/core/boost/range/detail/collection_traits_detail.hpp:
	* src/core/boost/range/detail/common.hpp:
	* src/core/boost/range/detail/const_iterator.hpp:
	* src/core/boost/range/detail/difference_type.hpp:
	* src/core/boost/range/detail/empty.hpp:
	* src/core/boost/range/detail/end.hpp:
	* src/core/boost/range/detail/implementation_help.hpp:
	* src/core/boost/range/detail/iterator.hpp:
	* src/core/boost/range/detail/mfc/carray.hpp:
	* src/core/boost/range/detail/mfc/cstring.hpp:
	* src/core/boost/range/detail/remove_extent.hpp:
	* src/core/boost/range/detail/sfinae.hpp:
	* src/core/boost/range/detail/size.hpp:
	* src/core/boost/range/detail/size_type.hpp:
	* src/core/boost/range/detail/sizer.hpp:
	* src/core/boost/range/detail/value_type.hpp:
	* src/core/boost/range/detail/vc6/end.hpp:
	* src/core/boost/range/detail/vc6/size.hpp:
	* src/core/boost/range/difference_type.hpp:
	* src/core/boost/range/empty.hpp:
	* src/core/boost/range/end.hpp:
	* src/core/boost/range/functions.hpp:
	* src/core/boost/range/iterator.hpp:
	* src/core/boost/range/iterator_range.hpp:
	* src/core/boost/range/metafunctions.hpp:
	* src/core/boost/range/rbegin.hpp:
	* src/core/boost/range/rend.hpp:
	* src/core/boost/range/result_iterator.hpp:
	* src/core/boost/range/reverse_iterator.hpp:
	* src/core/boost/range/reverse_result_iterator.hpp:
	* src/core/boost/range/size.hpp:
	* src/core/boost/range/size_type.hpp:
	* src/core/boost/range/sub_range.hpp:
	* src/core/boost/range/value_type.hpp:
	* src/core/boost/ref.hpp:
	* src/core/boost/scoped_array.hpp:
	* src/core/boost/scoped_ptr.hpp:
	* src/core/boost/shared_ptr.hpp:
	* src/core/boost/smart_cast.hpp:
	* src/core/boost/smart_ptr.hpp:
	* src/core/boost/static_assert.hpp:
	* src/core/boost/static_warning.hpp:
	* src/core/boost/throw_exception.hpp:
	* src/core/boost/type_traits.hpp:
	* src/core/boost/type_traits/add_const.hpp:
	* src/core/boost/type_traits/add_cv.hpp:
	* src/core/boost/type_traits/add_pointer.hpp:
	* src/core/boost/type_traits/add_reference.hpp:
	* src/core/boost/type_traits/add_volatile.hpp:
	* src/core/boost/type_traits/aligned_storage.hpp:
	* src/core/boost/type_traits/alignment_of.hpp:
	* src/core/boost/type_traits/alignment_traits.hpp:
	* src/core/boost/type_traits/arithmetic_traits.hpp:
	* src/core/boost/type_traits/array_traits.hpp:
	* src/core/boost/type_traits/broken_compiler_spec.hpp:
	* src/core/boost/type_traits/composite_traits.hpp:
	* src/core/boost/type_traits/config.hpp:
	* src/core/boost/type_traits/conversion_traits.hpp:
	* src/core/boost/type_traits/cv_traits.hpp:
	* src/core/boost/type_traits/decay.hpp:
	* src/core/boost/type_traits/detail/bool_trait_def.hpp:
	* src/core/boost/type_traits/detail/bool_trait_undef.hpp:
	* src/core/boost/type_traits/detail/cv_traits_impl.hpp:
	* src/core/boost/type_traits/detail/false_result.hpp:
	* src/core/boost/type_traits/detail/ice_and.hpp:
	* src/core/boost/type_traits/detail/ice_eq.hpp:
	* src/core/boost/type_traits/detail/ice_not.hpp:
	* src/core/boost/type_traits/detail/ice_or.hpp:
	* src/core/boost/type_traits/detail/is_function_ptr_helper.hpp:
	* src/core/boost/type_traits/detail/is_function_ptr_tester.hpp:
	* src/core/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:
	* src/core/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp:
	* src/core/boost/type_traits/detail/size_t_trait_def.hpp:
	* src/core/boost/type_traits/detail/size_t_trait_undef.hpp:
	* src/core/boost/type_traits/detail/template_arity_spec.hpp:
	* src/core/boost/type_traits/detail/type_trait_def.hpp:
	* src/core/boost/type_traits/detail/type_trait_undef.hpp:
	* src/core/boost/type_traits/detail/wrap.hpp:
	* src/core/boost/type_traits/detail/yes_no_type.hpp:
	* src/core/boost/type_traits/extent.hpp:
	* src/core/boost/type_traits/function_traits.hpp:
	* src/core/boost/type_traits/has_nothrow_assign.hpp:
	* src/core/boost/type_traits/has_nothrow_constructor.hpp:
	* src/core/boost/type_traits/has_nothrow_copy.hpp:
	* src/core/boost/type_traits/has_nothrow_destructor.hpp:
	* src/core/boost/type_traits/has_trivial_assign.hpp:
	* src/core/boost/type_traits/has_trivial_constructor.hpp:
	* src/core/boost/type_traits/has_trivial_copy.hpp:
	* src/core/boost/type_traits/has_trivial_destructor.hpp:
	* src/core/boost/type_traits/has_virtual_destructor.hpp:
	* src/core/boost/type_traits/ice.hpp:
	* src/core/boost/type_traits/integral_constant.hpp:
	* src/core/boost/type_traits/intrinsics.hpp:
	* src/core/boost/type_traits/is_abstract.hpp:
	* src/core/boost/type_traits/is_arithmetic.hpp:
	* src/core/boost/type_traits/is_array.hpp:
	* src/core/boost/type_traits/is_base_and_derived.hpp:
	* src/core/boost/type_traits/is_base_of.hpp:
	* src/core/boost/type_traits/is_class.hpp:
	* src/core/boost/type_traits/is_compound.hpp:
	* src/core/boost/type_traits/is_const.hpp:
	* src/core/boost/type_traits/is_convertible.hpp:
	* src/core/boost/type_traits/is_empty.hpp:
	* src/core/boost/type_traits/is_enum.hpp:
	* src/core/boost/type_traits/is_float.hpp:
	* src/core/boost/type_traits/is_floating_point.hpp:
	* src/core/boost/type_traits/is_function.hpp:
	* src/core/boost/type_traits/is_fundamental.hpp:
	* src/core/boost/type_traits/is_integral.hpp:
	* src/core/boost/type_traits/is_member_function_pointer.hpp:
	* src/core/boost/type_traits/is_member_object_pointer.hpp:
	* src/core/boost/type_traits/is_member_pointer.hpp:
	* src/core/boost/type_traits/is_object.hpp:
	* src/core/boost/type_traits/is_pod.hpp:
	* src/core/boost/type_traits/is_pointer.hpp:
	* src/core/boost/type_traits/is_polymorphic.hpp:
	* src/core/boost/type_traits/is_reference.hpp:
	* src/core/boost/type_traits/is_same.hpp:
	* src/core/boost/type_traits/is_scalar.hpp:
	* src/core/boost/type_traits/is_signed.hpp:
	* src/core/boost/type_traits/is_stateless.hpp:
	* src/core/boost/type_traits/is_union.hpp:
	* src/core/boost/type_traits/is_unsigned.hpp:
	* src/core/boost/type_traits/is_void.hpp:
	* src/core/boost/type_traits/is_volatile.hpp:
	* src/core/boost/type_traits/msvc/remove_all_extents.hpp:
	* src/core/boost/type_traits/msvc/remove_bounds.hpp:
	* src/core/boost/type_traits/msvc/remove_const.hpp:
	* src/core/boost/type_traits/msvc/remove_cv.hpp:
	* src/core/boost/type_traits/msvc/remove_extent.hpp:
	* src/core/boost/type_traits/msvc/remove_pointer.hpp:
	* src/core/boost/type_traits/msvc/remove_reference.hpp:
	* src/core/boost/type_traits/msvc/remove_volatile.hpp:
	* src/core/boost/type_traits/msvc/typeof.hpp:
	* src/core/boost/type_traits/object_traits.hpp:
	* src/core/boost/type_traits/rank.hpp:
	* src/core/boost/type_traits/reference_traits.hpp:
	* src/core/boost/type_traits/remove_all_extents.hpp:
	* src/core/boost/type_traits/remove_bounds.hpp:
	* src/core/boost/type_traits/remove_const.hpp:
	* src/core/boost/type_traits/remove_cv.hpp:
	* src/core/boost/type_traits/remove_extent.hpp:
	* src/core/boost/type_traits/remove_pointer.hpp:
	* src/core/boost/type_traits/remove_reference.hpp:
	* src/core/boost/type_traits/remove_volatile.hpp:
	* src/core/boost/type_traits/same_traits.hpp:
	* src/core/boost/type_traits/transform_traits.hpp:
	* src/core/boost/type_traits/transform_traits_spec.hpp:
	* src/core/boost/type_traits/type_with_alignment.hpp:
	* src/core/boost/utility.hpp:
	* src/core/boost/utility/addressof.hpp:
	* src/core/boost/utility/base_from_member.hpp:
	* src/core/boost/utility/compare_pointees.hpp:
	* src/core/boost/utility/detail/in_place_factory_prefix.hpp:
	* src/core/boost/utility/detail/in_place_factory_suffix.hpp:
	* src/core/boost/utility/detail/result_of_iterate.hpp:
	* src/core/boost/utility/enable_if.hpp:
	* src/core/boost/utility/in_place_factory.hpp:
	* src/core/boost/utility/result_of.hpp:
	* src/core/boost/utility/typed_in_place_factory.hpp:
	* src/core/boost/utility/value_init.hpp:
	* src/core/boost/weak_ptr.hpp:

	boost: no longer bundled, must be installed

2009-02-25  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/LogStdout.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncML.h:

	fixed compiler warnings on Ubuntu 8.10/g++ 4.3

2009-02-24  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/backends/addressbook/Makefile.am:
	* src/backends/evolution/Makefile.am:
	* src/backends/file/Makefile.am:
	* src/backends/sqlite/Makefile.am:
	* src/core/Makefile.am:
	* test/Makefile.am:

	dist: fixed distcheck, bundle Synthesis

2009-02-24  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/CurlTransportAgent.cpp:
	* src/core/CurlTransportAgent.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:
	* src/core/TransportAgent.h:
	* test/ClientTest.cpp:

	HTPP: set user agent string again

2009-02-24  Patrick Ohly  <patrick.ohly@intel.com>

	* test/synccompare.pl:

	testing: silence diffs by enabling Synthesis suppressions

2009-02-24  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/syncevolution.xml:

	Synthesis: set device ID via <fakedeviceid>

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	device ID hack: set 'SYSYNC_DEVICE_ID' to tell Synthesis
	getLocalDeviceID() about client setting

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SyncML.cpp:

	sync report: suppress empty conflict summary, show sync mode

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:

	testing: memo test item must contain <<REVISION>>

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:
	* test/ClientTest.cpp:

	testing: relaxed testLinkedItemsInsertBothUpdateChild/Parent

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:

	Synthesis progress: use new enums and report details about sync
	end error

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:

	notes: fixed invalid Synthesis XML config

2009-02-23  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:

	libsoup: report reason for failure

2009-02-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/CurlTransportAgent.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/TransportAgent.h:

	error handling: added SE_THROW[_EXCEPTION]() and handling of it

2009-02-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/CurlTransportAgent.cpp:

	curl: m_slist was not initialized

2009-02-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:
	* src/syncclient_sample_config.xml:
	* src/syncevolution.xml:

	Synthesis: imported more recent datatype configuration

2009-02-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis: use default message format (WBXML)

2009-02-20  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis: must close and reopen config keys to flush modified
	settings

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	sync: check status of all sources to determine overall success

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	error handling: done ask for STEPCMD_ABORT twice, instead let
	engine continue shutdown

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncML.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: added checking of sync source result and sync mode

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/SyncML.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: re-enabled SyncReport and checking it

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/Makefile-gen.am:
	* src/client-test-app.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/Logging.cpp:
	* src/core/Logging.h:
	* src/core/Makefile.am:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncML.cpp:
	* src/core/SyncML.h:
	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:

	testing: fixed log handling during Client::Sync

2009-02-19  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:

	testing: fixed compilation of Evolution and SQLite sources

2009-02-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/LogStdout.cpp:
	* src/core/LogStdout.h:
	* src/core/Logging.h:
	* test/client-test-main.cpp:

	testing: one log file is created per test

2009-02-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/Makefile-gen.am:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/client-test-app.cpp:
	* test/COPYING:
	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/test.h:

	testing: compiles and runs again, but output redirection is not
	working yet

2009-02-17  Patrick Ohly  <patrick.ohly@intel.com>

	* LICENSE.txt:
	* test/Algorithm/COPYING:
	* test/Algorithm/copyright:
	* test/COPYING:
	* test/LICENSE.txt:
	* test/Sync4jContribution.pdf:

	license: clarified default license and exceptions

2009-02-17  Patrick Ohly  <patrick.ohly@intel.com>

	* .gitignore:

	.gitignore: ignore patches

2009-02-17  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:

	sync mode: removed dead code

2009-02-17  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/sqlite/Makefile.am:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/Makefile.am:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/SyncML.h:
	* src/core/SynthesisDBPlugin.cpp:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:
	* src/core/vocl/README:
	* src/core/vocl/VConverter.cpp:
	* src/core/vocl/VConverter.h:
	* src/core/vocl/VObject.cpp:
	* src/core/vocl/VObject.h:
	* src/core/vocl/VProperty.cpp:
	* src/core/vocl/VProperty.h:
	* src/core/vocl/posixadapter.h:
	* src/core/vocl/vcardconverter.cpp:
	* src/syncevolution.cpp:

	removed all references to Funambol header files and definitions

2009-02-16  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/LogStdout.cpp:
	* src/core/LogStdout.h:
	* src/core/Logging.cpp:
	* src/core/Logging.h:
	* src/core/Makefile.am:
	* src/core/SoupTransportAgent.cpp:
	* src/core/vocl/VObject.cpp:
	* src/syncevolution.cpp:
	* src/syncevolution.xml:

	logging: replaced Funambol logging with our own infrastructure

2009-02-15  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* configure-post.in:
	* configure-pre.in:
	* src/core/CurlTransportAgent.cpp:
	* src/core/CurlTransportAgent.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/Makefile.am:
	* src/core/SoupTransportAgent.cpp:
	* src/core/SoupTransportAgent.h:
	* src/core/TransportAgent.cpp:
	* src/core/TransportAgent.h:

	transport agent: replaced Funambol TransportAgent with own
	libsoup/libcurl classes

2009-02-13  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:
	* src/syncevolution.xml:

	Synthesis: binary files under <config root>/.synthesis

2009-02-06  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/Makefile.am:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/SynthesisDBPlugin.cpp:
	* src/syncevolution.xml:

	Synthesis: connect engine with EvolutionSyncSource

2009-02-05  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:

	HACKING: improved Synthesis instructions to work with
	--enable-shared

2009-02-03  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis progress display: assume that all 'total' counts may be
	unavailable

2009-02-02  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis sync report: print information about conflicts,
	matches, sent/received bytes

2009-02-02  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncClient.cpp:

	Synthesis LOCERR_OK: in sysync namespace now

2009-02-01  Patrick Ohly  <patrick.ohly@intel.com>

	* configure-post.in:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.h:

	EvolutionSyncClient: clarified/added callbacks that can be
	implemented by derived classes

2008-12-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	interrupted sync tests: added comparison against reference files

2009-01-18  Patrick Ohly  <patrick.ohly@intel.com>

	* HACKING:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/Makefile.am:
	* src/sunbird_client.xml:
	* src/syncevolution.xml:
	* src/syncserv_odbc.xml:

	use Synthesis SDK to run a sync session

2009-02-18  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/file/Makefile.am:
	* src/backends/sqlite/Makefile.am:
	* src/core/EvolutionSmartPtr.h:

	compilation fix: glib dependency in header file

2009-02-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/core/EvolutionSyncSource.cpp:

	backend loading: added syncfile.so.0

2009-01-27  Patrick Ohly  <patrick.ohly@intel.com>

	* .gitignore:

	ignore autotools files

2009-02-06  Patrick Ohly  <patrick.ohly@intel.com>

	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/core/FileConfigNode.cpp:
	* src/core/SyncEvolutionUtil.cpp:

	silence gcc 4.3.2 warnings

2008-12-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:

	ClientTest: better infrastructure for data file comparisons

2008-12-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	interrupted sync testing: completed the set of changes that can
	be applied to client and server

2008-12-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	ClientTest: infrastructure for removing and updating specific
	items

2008-12-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	interrupted sync testing: maxmsgsize == 1 indicates that caller
	wants to interrupt while receiving server's reply

2008-12-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	interrupted sync testing: added CLIENT_TEST_INTERRUPT_AT to
	select where to interrupt

2008-12-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	ClientTest: test resuming a synchronization after a disconnect

2008-12-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: allow accumulating log prefixes dynamically

2008-12-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	testing: enhanced infrastructure (LUIDs)

2008-07-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	tests: split big test into smaller ones

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	fixed some (incorrect) gcc warnings about uninitialized vars,
	relaxed semantic checks in testLinkedItems

2008-06-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	added support for TZID renaming

2008-06-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/testcases/ical20.ics:

	fixed detached event testing (ical20)

2008-06-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	use SyncSource::removeAllItems() instead of loop + deleteItem()

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	VTIMEZONE and TZID do not have to be preserved verbatim as long
	as the replacement is still representing the same timezone.
	Reduce TZIDs which follow the Olson database pseudo-standard to
	their location part and strip the VTIMEZONE - makes the diff
	shorter, too.

2008-04-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/testcases/ical20.ics:

	ical20: added testing of detached recurrences

2008-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.h:

	fixed compiler warnings in header files (found by g++ -Wall when
	compiling client)

2008-02-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	order of categories is irrelevant, ignore changed order by
	sorting (ScheduleWorld recently started to reorder categories)

2008-02-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	my.funambol.com no longer stores 'preferred' phone number

2008-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/ical20.ics:

	Synthesis server returns SUMMARY also as DESCRIPTION unless
	DESCRIPTION is present: always sends a DESCRIPTION to avoid diffs

2008-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	ignore that Synthesis does not support some iCalendar 2.0
	properties (SEQUENCE, TRANSP, ORGANIZER, VALARM, ATTENDEE
	parameters)

2008-02-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	also supported N;ENCODING=QUOTED-PRINTABLE: when normalizing for
	Synthesis server

2008-02-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	extended Sync::testRefreshSemantic: a two-way sync after a
	refresh-from-server should not transmit any changes

2008-01-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	added obligatory endSync() calls: found when testing
	SyncEvolution's TrackingSyncSource whereas other sources happened
	to work without them

2007-12-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	extended LocalTests::testChanges and run SyncTests::testManyItems
	with message size limit

2007-12-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	ignore differences due to added/removed line breaks at end of
	description (some servers do that and it does not really matter)

2007-12-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	- less aggressive capitalization: only apply this to TYPE -
	simplified one regex (splitting TYPE=foo,bar)

2007-11-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:
	* test/testcases/vcard30.vcf:

	extended test data and synccompare to use/handle vCard 3.0 with
	mixed-case parameters

2007-11-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/client-test-main.cpp:

	fixed invalid parameters for CPPUNIT macro in the 'timed out'
	error situation

2007-11-28  Andrea Toccalini  <toccalini@funambol.com>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/client-test.cpp:
	* test/synccompare.pl:

	updated license to AGPL

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	Documented some of the environment variables checked by the
	script and added some more to control some of the hard-coded
	strings/return codes:

2007-11-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	myFUNAMBOL looses some data that was preserved by Funambol 3.0.
	synccompare.pl now simplifies the test data so that the
	Client::Sync::vcard21::testItems passes again. For an example of
	what gets lost see the failed test:

2007-11-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/client-test.cpp:

	During the transition from SyncEvolution to the C++ client
	library the NUM_ITEMS setting got lost: all tests which create a
	configurable amount of items (Source::testManyChanges,
	Sync::testManyItems) unintentionally ran with zero items, i.e.
	didn't actually test anything.

2007-10-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	- suppress acceptable modification when using the Mac OS X
	address book: some properties and types not supported by it -
	find perl in the PATH by invoking it via /usr/bin/env (which
	hopefully is at that place): required by iPhone

2007-10-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	The ComplexUpdate test failed when multiple sync sources were
	active, but only some had a complex item to update with. Now the
	simple update item is used for those sources.

2007-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	make update() utility function a bit more flexible: the checking
	stage is optional now

2007-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	separate patch to fix indention

2007-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	made it possible for clients to not just configure existing
	tests, but also add their own ones

2007-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/itodo20.ics:

	same as for events: CATEGORIES need to be separated with plain
	commas

2007-06-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/ical20.ics:

	fixed comma separation in CATEGORIES (exported with \, by
	Evolution, but that is broken); added some more CATEGORIES
	properties

2007-06-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:
	* test/testcases/vcard21.vcf:
	* test/testcases/vcard30.vcf:

	avoid irrelevant differences due to extra white space,
	generalized X-WSS removal

2007-06-06  Matteo Vitolo  <mvitolo@funambol.com>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/client-test.cpp:
	* test/synccompare.pl:

	copyright updated

2007-05-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	remove X-MOZILLA-HTML:FALSE because it (almost) has the same
	semantic as no X-MOZILLA-HTML

2007-05-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	avoid patching FALSE/TRUE in test suite sources when installing
	them: the same words also occur in the test data strings embedded
	in the source code and patching those is incorrect

2007-04-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	client-test Client::Sync did not execute the tests with more than
	once source because the tests were registered in two different
	nodes, both called Client::Sync - CPPUnit does not seem to handle
	that; fixed by keeping the node name unique

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	insert additional lines after the first line of VJOURNAL because
	it might be used as the summary and thus should not be modified

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	A little bit more sane datatype handling of items inserted by
	test frame work: the type is empty in insert() and update() now
	and "raw" in importItem(). The "raw" type is historical and it
	might be possible to remove it.

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:
	* test/testcases/imemo20.ics:

	added some (preliminary) support for iCalendar 2.0 journal
	entries

2007-04-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	the check for vCard 2.1 was not correct and always enabled
	quoted-printable encoding

2007-04-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcard21.vcf:
	* test/testcases/vcard30.vcf:

	Avoid line breaks at the end of a NOTE: some servers remove this
	because some phones add line breaks during each sync or edit (?).
	This is a minor change to items that should break automated
	testing.

2007-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.h:
	* test/client-test.cpp:

	updated Doxygen documentation about client testing

2007-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	deleteAll() did not always work because the initial sync was
	TWO_WAY and not SLOW

2007-04-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	additional check to avoid error messages if tput itself fails

2007-03-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:

	pass the sync result to CheckSyncReport so that it can be taken
	into account when checking the result

2007-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/Algorithm/Artistic:
	* test/Algorithm/Diff.pm:
	* test/Algorithm/README:
	* test/Algorithm/copyright:
	* test/synccompare.pl:

	replaced invocation of external diff/mktemp tools with pure Perl
	diff

2007-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcard30.vcf:

	added a test case for the Funambol 3.0 parser bug (can be used to
	verify workarounds in clients)

2007-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:
	* test/client-test.cpp:

	first draft of API documentation via Doxygen

2007-03-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:

	fixed compilation if --enable-unit-tests is used without
	--enable-integration-tests

2007-03-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	moved common code for printing a SyncReport into the SyncReport
	class itself

2007-02-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:

	- added checking of the SyncReport - changed expectations for
	refresh-from-server sync: number of deleted items depends on
	SyncSource implementation and cannot be checked - make LOCATION
	unique in calendar events to avoid having events merged by
	Funambol server

2007-02-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:

	- added vcard21/vcal10 for Funambol 3.0 server - server URI is
	now set automatically when creating client config; works for
	vcard21/vcal10 with Funambol 3.0 and vcard30/ical20 with
	ScheduleWorld

2007-02-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	ignore some minor differences (TYPE shortcuts, truncated ORG) and
	one bug (=0A instead of =0D=0A), found when testing against
	Funambol 3.0 with vcal10/vcard21

2007-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcard21.vcf:

	removed TYPEs which are too complex for Funambol 3.0 server

2007-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcard21.vcf:

	vCard 2.1 contacts generated by vcardconverter from vcard30.vcf,
	non-2.1 properties stripped manually (FBURL, CALURL)

2007-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcal10.ics:

	removed VEVENTs which caused problems with Funambol 3.0 server

2007-02-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/testcases/vcal10.ics:

	initial revision generated by ScheduleWorld from ical20.ics

2007-02-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	added syncing of many sources at once (still to be tested)

2006-12-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/client-test.cpp:

	solved Windows compile problems

2006-12-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:

	sync tests now work on Linux: - implemented sync() method using
	FILESyncSource - clarified naming of clients and different change
	tracking

2006-12-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	check for the same environment variable as client-test

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/client-test.cpp:

	Implemented change tracking in FILESyncSource. Fixed some
	portability problems (e.g. %ls with char parameter), ensured that
	everything still compiles on Windows. RawFILESyncSource now
	passes all local source tests on Linux, but syncing is still not
	implemented.

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test.cpp:
	* test/synccompare.pl:
	* test/testcases/ical20.ics:
	* test/testcases/itodo20.ics:
	* test/testcases/vcard30.vcf:

	Added real sync testing, using RawFILESyncSource to store items
	locally. Compiles and runs on Linux, but tests mostly fail
	because FILESyncSource supports no change tracking yet.

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/client-test-main.cpp:

	fixed incorrect copyright

2006-12-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	finished porting all tests from SyncEvolution test suite,
	improved log file handling

2006-12-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	fixed formatting slightly, added real sync tests

2006-12-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	finished local tests

2006-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:
	* test/client-test-main.cpp:

	added a C++ client test framework, moved test runner to new
	'test' directory

2009-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* COPYING:
	* LICENSE.LGPL-21:
	* docs/Sync4jContribution.pdf:
	* src/TestMain.cpp:
	* src/backends/addressbook/AddressBookConstants.cpp:
	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/addressbook/AddressBookSource.h:
	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.h:
	* src/backends/evolution/libical/icalstrdup.c:
	* src/backends/evolution/libical/icalstrdup.h:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteUtil.cpp:
	* src/backends/sqlite/SQLiteUtil.h:
	* src/client-test-app.cpp:
	* src/core/ConfigNode.h:
	* src/core/ConfigTree.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/FilterConfigNode.cpp:
	* src/core/FilterConfigNode.h:
	* src/core/PrefixConfigNode.cpp:
	* src/core/PrefixConfigNode.h:
	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:
	* src/core/VolatileConfigNode.h:
	* src/core/VolatileConfigTree.h:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:
	* src/core/vocl/posixadapter.h:
	* src/core/vocl/vcardconverter.cpp:
	* src/normalize_vcard.pl:
	* src/syncevolution.cpp:

	license: changed to LGPL v2.1

2009-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/e-cal-check-timezones.c:
	* src/backends/evolution/e-cal-check-timezones.h:

	license: reverted back to original upstream LGPL v2.1

2009-02-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	tests: removed in preparation for importing complete history

2009-01-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/vocl/VObject.cpp:
	* src/core/vocl/VObject.h:
	* src/core/vocl/VProperty.cpp:
	* src/core/vocl/VProperty.h:

	added "const" to read-only char * strings

2008-12-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* configure-pre.in:

	0.8.1a merge

2008-12-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	on x86 also build lpia .deb

2008-12-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:

	added ConfigServer_add_client

2008-12-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:

	EDS availability check: put logic into eds abi wrapper (avoids
	compiler warning when functions are pulled from libs directly)

2008-12-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-post.in:

	fix for compile problem: if glib dev files were installed but not
	the evolution dev files, then glib.h was not found when compiling
	syncevolution.c

2008-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	deb packaging: allow overriding architecture with PKGARCH

2008-11-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	prevent shell expansion inside checkinstall with single quotes

2008-10-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/control:

	changed section used for Maemo package

2008-10-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	git checkout: also try tags prefix if normal checkout fails

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* debian/changelog:

	version 0.8.1

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	bumped version to 0.8.1 (SyncEvolution and API)

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/core/eds_abi_wrapper.cpp:
	* src/syncevolution.cpp:

	fixed compile errors/warnings on Maemo/Mac OS X

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/SyncEvolutionUtil.cpp:

	#2087389: fixed: Mac OS X: removing old logdirs fails

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	cleaned up README

2008-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	fixed git checkout with old git: it doesn't add 'origin' prefix

2008-10-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:

	--enable-evolution-compatibility: run with reduced functionality
	when functions are missing

2008-10-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	fixed unversioned replaces/conflicts in package

2008-10-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	avoid hyphen in version number

2008-10-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	fixed missing git checkout in configure

2008-10-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:

	SF #2095433: regression in 0.8: one-way sync of virtual birthday
	calendar

2008-10-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	build one deb which replaces the zoo of evolution-<evover>
	packages

2008-10-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	fixed typo (user instead of username)

2008-10-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:
	* src/backends/evolution/libical/icalstrdup.c:
	* src/backends/evolution/libical/icalstrdup.h:

	fixed checking out origin branch and updating from git

2008-10-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	use Funambol C++ client library from github

2008-10-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-post.in:
	* configure-pre.in:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/e-cal-check-timezones.h:
	* src/client-test-app.cpp:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/Makefile.am:
	* src/core/eds_abi_wrapper.cpp:
	* src/core/eds_abi_wrapper.h:
	* src/syncevolution.cpp:

	hard dependencies on specific Evolution libs can be avoided with
	--enable-evolution-compatibility

2008-10-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:
	* test/runtests.py:

	checking out client library is optional now (done automatically
	by newer SyncEvolution configure script)

2008-09-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:

	fixed checking out from SVN

2008-09-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure-pre.in:
	* src/Makefile-gen.am:

	improved handling of Funambol client library source

2008-08-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure-pre.in:

	use libcurl on all platforms

2008-08-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure-pre.in:

	version number must go into configure-pre.in

2008-08-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* HACKING:
	* NEWS:
	* debian/changelog:

	version 0.8

2008-08-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* COPYING:
	* src/TestMain.cpp:
	* src/backends/addressbook/AddressBookConstants.cpp:
	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/addressbook/AddressBookSource.h:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.h:
	* src/backends/evolution/e-cal-check-timezones.c:
	* src/backends/evolution/e-cal-check-timezones.h:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/backends/sqlite/SQLiteUtil.cpp:
	* src/backends/sqlite/SQLiteUtil.h:
	* src/client-test-app.cpp:
	* src/core/ConfigNode.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FilterConfigNode.cpp:
	* src/core/FilterConfigNode.h:
	* src/core/PrefixConfigNode.cpp:
	* src/core/PrefixConfigNode.h:
	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/VolatileConfigNode.h:
	* src/core/VolatileConfigTree.h:
	* src/syncevolution.cpp:

	license and copyright clarification

2008-08-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:

	new suppressions for Evolution libs

2008-08-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* test/runtests.py:

	speed up testing by reducing the default delay in Evolution
	calendar/task/text sync sources

2008-08-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/file/FileSyncSourceRegister.cpp:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	enable those linked item tests that 'dumb' sources can pass

2008-08-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/Makefile.am:

	libs which might be in non-standard locations (glib, evolution)
	must come before libs in default locations (curl), otherwise we
	might incorrectly pick up glib from the default location

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* configure-pre.in:
	* debian/changelog:

	0.8 beta 3

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure-pre.in:
	* src/core/Makefile.am:

	fixed libcurl link error with --enable-shared

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/sqlite/configure-sub.in:

	avoid libsqlite dependency if it is not needed

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure-pre.in:
	* src/Makefile-gen.am:

	removed obsolete LIBDBUS hack

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	removed unused BACKEND_REGISTRIES substitution from regenerated
	configure.in: it is already part of src/Makefile.am

2008-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	only invoke client-test once; suppress known SW 'new client'
	problem; test 'text' source with Funambol

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	previous commit disabled 'all' target - use BUILT_SOURCES instead

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:
	* src/client-test-app.cpp:
	* src/core/EvolutionSyncSource.h:

	fixed issue with inconsistent use of ClientTest.h after copying
	it to SyncEvolution

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/TrackingSyncSource.h:

	EvolutionSyncSource::sleepSinceModification(): delay after a sync
	only if needed, must be requested by sources

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:

	preserve child events when updating parent without relying on
	CALOBJ_MOD_THIS

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	testLinkedItemsInsertBothUpdateParent: updating parent may also
	update child

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	evo user/passwd must always be set for Client::Sync

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.h:

	better comment for returnOnlyChildren in removeEvents: parent is
	always removed

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* test/ClientTest.cpp:
	* test/ClientTest.h:

	calendar synchronization with Evolution Exchange Connector works
	again

2008-08-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/ClientTest.h:

	copied r_v70ga from C++ client lib because some changes will be
	necessary

2008-08-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionConfig.cpp:

	enabled 'memo' source in Funambol template

2008-08-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/file/FileSyncSource.cpp:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/SyncEvolutionUtil.cpp:

	cleaned up error reporting: errno now passed to throwError

2008-08-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/EvolutionSyncSource.h:

	CLIENT_TEST_EVOLUTION_USER/PASSWORD and warning about init order

2008-08-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	added CLIENT_TEST_EVOLUTION_USER/PASSWORD so that backends which
	require authentication can now also be tested

2008-08-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	added missing imemo20.ics test cases to build

2008-08-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/file/FileSyncSourceRegister.cpp:

	disable linked item testing: file backend does not support the
	special semantic

2008-08-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:

	include Doxyfile in distribution

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	updated

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:

	avoid redundant ': failure' in error situations where the error
	description is already included

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* configure-pre.in:

	release 0.8 beta 2

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/SyncEvolutionCmdline.cpp:

	--sync implies --run, to be compatible with old command lines

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/README.h:

	better explanation what the classes do

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	added documentation for client-test env variables and usage

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	corrected outdated config path

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:

	only include integration tests in anonymous namespace because
	CPPUnit unit tests become ugly otherwise

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/file/FileSyncSource.cpp:
	* src/backends/file/FileSyncSource.h:
	* src/backends/file/FileSyncSourceRegister.cpp:
	* src/backends/file/Makefile.am:
	* src/backends/file/configure-sub.in:

	added file backend

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:

	added EvolutionSyncSource::logItemUtil(): extracts key properties
	from raw data and logs them

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	more dependency fixes

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added synopsis for --status

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:

	use anonymous namespaces to avoid name conflicts between classes

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:

	improved command line and its documented

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	minor fixes for recent introduction of libsyncevolution

2008-08-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	re-added 'test' target (alias for client-test now)

2008-08-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* Doxyfile:
	* Makefile-gen.am:
	* src/README.h:
	* src/core/EvolutionSyncSource.h:
	* src/core/SyncEvolutionConfig.h:

	cleaned up Doxygen documentation + included Funambol API

2008-08-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:
	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/sqlite/Makefile.am:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:
	* src/client-test-app.cpp:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/Makefile.am:

	added automatic registration of test

2008-08-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:

	client-test now depends on libsyncevolution.la and backends, i.e.
	'all'

2008-08-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:
	* src/core/Makefile.am:

	fixed inclusion of moved boost in distribution

2008-07-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* Doxyfile:
	* src/Test.h:
	* src/boost/algorithm/string.hpp:
	* src/boost/algorithm/string/case_conv.hpp:
	* src/boost/algorithm/string/classification.hpp:
	* src/boost/algorithm/string/compare.hpp:
	* src/boost/algorithm/string/concept.hpp:
	* src/boost/algorithm/string/config.hpp:
	* src/boost/algorithm/string/constants.hpp:
	* src/boost/algorithm/string/detail/case_conv.hpp:
	* src/boost/algorithm/string/detail/classification.hpp:
	* src/boost/algorithm/string/detail/find_format.hpp:
	* src/boost/algorithm/string/detail/find_format_all.hpp:
	* src/boost/algorithm/string/detail/find_format_store.hpp:
	* src/boost/algorithm/string/detail/find_iterator.hpp:
	* src/boost/algorithm/string/detail/finder.hpp:
	* src/boost/algorithm/string/detail/finder_regex.hpp:
	* src/boost/algorithm/string/detail/formatter.hpp:
	* src/boost/algorithm/string/detail/formatter_regex.hpp:
	* src/boost/algorithm/string/detail/predicate.hpp:
	* src/boost/algorithm/string/detail/replace_storage.hpp:
	* src/boost/algorithm/string/detail/sequence.hpp:
	* src/boost/algorithm/string/detail/trim.hpp:
	* src/boost/algorithm/string/detail/util.hpp:
	* src/boost/algorithm/string/erase.hpp:
	* src/boost/algorithm/string/find.hpp:
	* src/boost/algorithm/string/find_format.hpp:
	* src/boost/algorithm/string/find_iterator.hpp:
	* src/boost/algorithm/string/finder.hpp:
	* src/boost/algorithm/string/formatter.hpp:
	* src/boost/algorithm/string/iter_find.hpp:
	* src/boost/algorithm/string/join.hpp:
	* src/boost/algorithm/string/predicate.hpp:
	* src/boost/algorithm/string/predicate_facade.hpp:
	* src/boost/algorithm/string/replace.hpp:
	* src/boost/algorithm/string/sequence_traits.hpp:
	* src/boost/algorithm/string/split.hpp:
	* src/boost/algorithm/string/std/list_traits.hpp:
	* src/boost/algorithm/string/std/rope_traits.hpp:
	* src/boost/algorithm/string/std/slist_traits.hpp:
	* src/boost/algorithm/string/std/string_traits.hpp:
	* src/boost/algorithm/string/std_containers_traits.hpp:
	* src/boost/algorithm/string/trim.hpp:
	* src/boost/algorithm/string/yes_no_type.hpp:
	* src/boost/assert.hpp:
	* src/boost/bind.hpp:
	* src/boost/bind/apply.hpp:
	* src/boost/bind/arg.hpp:
	* src/boost/bind/bind_cc.hpp:
	* src/boost/bind/bind_mf_cc.hpp:
	* src/boost/bind/bind_template.hpp:
	* src/boost/bind/make_adaptable.hpp:
	* src/boost/bind/mem_fn_cc.hpp:
	* src/boost/bind/mem_fn_template.hpp:
	* src/boost/bind/mem_fn_vw.hpp:
	* src/boost/bind/placeholders.hpp:
	* src/boost/bind/protect.hpp:
	* src/boost/bind/storage.hpp:
	* src/boost/cast.hpp:
	* src/boost/checked_delete.hpp:
	* src/boost/concept_archetype.hpp:
	* src/boost/concept_check.hpp:
	* src/boost/config.hpp:
	* src/boost/config/abi/borland_prefix.hpp:
	* src/boost/config/abi/borland_suffix.hpp:
	* src/boost/config/abi/msvc_prefix.hpp:
	* src/boost/config/abi/msvc_suffix.hpp:
	* src/boost/config/abi_prefix.hpp:
	* src/boost/config/abi_suffix.hpp:
	* src/boost/config/auto_link.hpp:
	* src/boost/config/compiler/borland.hpp:
	* src/boost/config/compiler/comeau.hpp:
	* src/boost/config/compiler/common_edg.hpp:
	* src/boost/config/compiler/compaq_cxx.hpp:
	* src/boost/config/compiler/digitalmars.hpp:
	* src/boost/config/compiler/gcc.hpp:
	* src/boost/config/compiler/gcc_xml.hpp:
	* src/boost/config/compiler/greenhills.hpp:
	* src/boost/config/compiler/hp_acc.hpp:
	* src/boost/config/compiler/intel.hpp:
	* src/boost/config/compiler/kai.hpp:
	* src/boost/config/compiler/metrowerks.hpp:
	* src/boost/config/compiler/mpw.hpp:
	* src/boost/config/compiler/sgi_mipspro.hpp:
	* src/boost/config/compiler/sunpro_cc.hpp:
	* src/boost/config/compiler/vacpp.hpp:
	* src/boost/config/compiler/visualc.hpp:
	* src/boost/config/no_tr1/complex.hpp:
	* src/boost/config/no_tr1/functional.hpp:
	* src/boost/config/no_tr1/memory.hpp:
	* src/boost/config/no_tr1/utility.hpp:
	* src/boost/config/platform/aix.hpp:
	* src/boost/config/platform/amigaos.hpp:
	* src/boost/config/platform/beos.hpp:
	* src/boost/config/platform/bsd.hpp:
	* src/boost/config/platform/cygwin.hpp:
	* src/boost/config/platform/hpux.hpp:
	* src/boost/config/platform/irix.hpp:
	* src/boost/config/platform/linux.hpp:
	* src/boost/config/platform/macos.hpp:
	* src/boost/config/platform/qnxnto.hpp:
	* src/boost/config/platform/solaris.hpp:
	* src/boost/config/platform/win32.hpp:
	* src/boost/config/posix_features.hpp:
	* src/boost/config/requires_threads.hpp:
	* src/boost/config/select_compiler_config.hpp:
	* src/boost/config/select_platform_config.hpp:
	* src/boost/config/select_stdlib_config.hpp:
	* src/boost/config/stdlib/dinkumware.hpp:
	* src/boost/config/stdlib/libcomo.hpp:
	* src/boost/config/stdlib/libstdcpp3.hpp:
	* src/boost/config/stdlib/modena.hpp:
	* src/boost/config/stdlib/msl.hpp:
	* src/boost/config/stdlib/roguewave.hpp:
	* src/boost/config/stdlib/sgi.hpp:
	* src/boost/config/stdlib/stlport.hpp:
	* src/boost/config/stdlib/vacpp.hpp:
	* src/boost/config/suffix.hpp:
	* src/boost/config/user.hpp:
	* src/boost/copyright:
	* src/boost/detail/algorithm.hpp:
	* src/boost/detail/allocator_utilities.hpp:
	* src/boost/detail/atomic_count.hpp:
	* src/boost/detail/atomic_count_gcc.hpp:
	* src/boost/detail/atomic_count_pthreads.hpp:
	* src/boost/detail/atomic_count_win32.hpp:
	* src/boost/detail/bad_weak_ptr.hpp:
	* src/boost/detail/binary_search.hpp:
	* src/boost/detail/call_traits.hpp:
	* src/boost/detail/catch_exceptions.hpp:
	* src/boost/detail/compressed_pair.hpp:
	* src/boost/detail/dynamic_bitset.hpp:
	* src/boost/detail/endian.hpp:
	* src/boost/detail/indirect_traits.hpp:
	* src/boost/detail/interlocked.hpp:
	* src/boost/detail/is_function_ref_tester.hpp:
	* src/boost/detail/is_incrementable.hpp:
	* src/boost/detail/is_xxx.hpp:
	* src/boost/detail/iterator.hpp:
	* src/boost/detail/lightweight_mutex.hpp:
	* src/boost/detail/lightweight_test.hpp:
	* src/boost/detail/limits.hpp:
	* src/boost/detail/lwm_nop.hpp:
	* src/boost/detail/lwm_pthreads.hpp:
	* src/boost/detail/lwm_win32_cs.hpp:
	* src/boost/detail/named_template_params.hpp:
	* src/boost/detail/no_exceptions_support.hpp:
	* src/boost/detail/none_t.hpp:
	* src/boost/detail/numeric_traits.hpp:
	* src/boost/detail/ob_call_traits.hpp:
	* src/boost/detail/ob_compressed_pair.hpp:
	* src/boost/detail/quick_allocator.hpp:
	* src/boost/detail/reference_content.hpp:
	* src/boost/detail/select_type.hpp:
	* src/boost/detail/shared_array_nmt.hpp:
	* src/boost/detail/shared_count.hpp:
	* src/boost/detail/shared_ptr_nmt.hpp:
	* src/boost/detail/sp_counted_base.hpp:
	* src/boost/detail/sp_counted_base_cw_ppc.hpp:
	* src/boost/detail/sp_counted_base_cw_x86.hpp:
	* src/boost/detail/sp_counted_base_gcc_ia64.hpp:
	* src/boost/detail/sp_counted_base_gcc_ppc.hpp:
	* src/boost/detail/sp_counted_base_gcc_x86.hpp:
	* src/boost/detail/sp_counted_base_nt.hpp:
	* src/boost/detail/sp_counted_base_pt.hpp:
	* src/boost/detail/sp_counted_base_w32.hpp:
	* src/boost/detail/sp_counted_impl.hpp:
	* src/boost/detail/templated_streams.hpp:
	* src/boost/detail/utf8_codecvt_facet.hpp:
	* src/boost/detail/workaround.hpp:
	* src/boost/foreach.hpp:
	* src/boost/function.hpp:
	* src/boost/function/detail/function_iterate.hpp:
	* src/boost/function/detail/maybe_include.hpp:
	* src/boost/function/detail/prologue.hpp:
	* src/boost/function/function0.hpp:
	* src/boost/function/function1.hpp:
	* src/boost/function/function10.hpp:
	* src/boost/function/function2.hpp:
	* src/boost/function/function3.hpp:
	* src/boost/function/function4.hpp:
	* src/boost/function/function5.hpp:
	* src/boost/function/function6.hpp:
	* src/boost/function/function7.hpp:
	* src/boost/function/function8.hpp:
	* src/boost/function/function9.hpp:
	* src/boost/function/function_base.hpp:
	* src/boost/function/function_template.hpp:
	* src/boost/function_equal.hpp:
	* src/boost/get_pointer.hpp:
	* src/boost/implicit_cast.hpp:
	* src/boost/intrusive_ptr.hpp:
	* src/boost/iterator.hpp:
	* src/boost/iterator/counting_iterator.hpp:
	* src/boost/iterator/detail/any_conversion_eater.hpp:
	* src/boost/iterator/detail/config_def.hpp:
	* src/boost/iterator/detail/config_undef.hpp:
	* src/boost/iterator/detail/enable_if.hpp:
	* src/boost/iterator/detail/facade_iterator_category.hpp:
	* src/boost/iterator/detail/minimum_category.hpp:
	* src/boost/iterator/filter_iterator.hpp:
	* src/boost/iterator/indirect_iterator.hpp:
	* src/boost/iterator/interoperable.hpp:
	* src/boost/iterator/is_lvalue_iterator.hpp:
	* src/boost/iterator/is_readable_iterator.hpp:
	* src/boost/iterator/iterator_adaptor.hpp:
	* src/boost/iterator/iterator_archetypes.hpp:
	* src/boost/iterator/iterator_categories.hpp:
	* src/boost/iterator/iterator_concepts.hpp:
	* src/boost/iterator/iterator_facade.hpp:
	* src/boost/iterator/iterator_traits.hpp:
	* src/boost/iterator/new_iterator_tests.hpp:
	* src/boost/iterator/permutation_iterator.hpp:
	* src/boost/iterator/reverse_iterator.hpp:
	* src/boost/iterator/transform_iterator.hpp:
	* src/boost/iterator/zip_iterator.hpp:
	* src/boost/lexical_cast.hpp:
	* src/boost/mem_fn.hpp:
	* src/boost/mpl/O1_size.hpp:
	* src/boost/mpl/O1_size_fwd.hpp:
	* src/boost/mpl/accumulate.hpp:
	* src/boost/mpl/advance.hpp:
	* src/boost/mpl/advance_fwd.hpp:
	* src/boost/mpl/alias.hpp:
	* src/boost/mpl/always.hpp:
	* src/boost/mpl/and.hpp:
	* src/boost/mpl/apply.hpp:
	* src/boost/mpl/apply_fwd.hpp:
	* src/boost/mpl/apply_wrap.hpp:
	* src/boost/mpl/arg.hpp:
	* src/boost/mpl/arg_fwd.hpp:
	* src/boost/mpl/arithmetic.hpp:
	* src/boost/mpl/as_sequence.hpp:
	* src/boost/mpl/assert.hpp:
	* src/boost/mpl/at.hpp:
	* src/boost/mpl/at_fwd.hpp:
	* src/boost/mpl/aux_/O1_size_impl.hpp:
	* src/boost/mpl/aux_/adl_barrier.hpp:
	* src/boost/mpl/aux_/advance_backward.hpp:
	* src/boost/mpl/aux_/advance_forward.hpp:
	* src/boost/mpl/aux_/apply_1st.hpp:
	* src/boost/mpl/aux_/arg_typedef.hpp:
	* src/boost/mpl/aux_/arithmetic_op.hpp:
	* src/boost/mpl/aux_/arity.hpp:
	* src/boost/mpl/aux_/arity_spec.hpp:
	* src/boost/mpl/aux_/at_impl.hpp:
	* src/boost/mpl/aux_/back_impl.hpp:
	* src/boost/mpl/aux_/basic_bind.hpp:
	* src/boost/mpl/aux_/begin_end_impl.hpp:
	* src/boost/mpl/aux_/clear_impl.hpp:
	* src/boost/mpl/aux_/common_name_wknd.hpp:
	* src/boost/mpl/aux_/comparison_op.hpp:
	* src/boost/mpl/aux_/config/adl.hpp:
	* src/boost/mpl/aux_/config/arrays.hpp:
	* src/boost/mpl/aux_/config/bind.hpp:
	* src/boost/mpl/aux_/config/compiler.hpp:
	* src/boost/mpl/aux_/config/ctps.hpp:
	* src/boost/mpl/aux_/config/dependent_nttp.hpp:
	* src/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp:
	* src/boost/mpl/aux_/config/dtp.hpp:
	* src/boost/mpl/aux_/config/eti.hpp:
	* src/boost/mpl/aux_/config/forwarding.hpp:
	* src/boost/mpl/aux_/config/gcc.hpp:
	* src/boost/mpl/aux_/config/has_apply.hpp:
	* src/boost/mpl/aux_/config/has_xxx.hpp:
	* src/boost/mpl/aux_/config/integral.hpp:
	* src/boost/mpl/aux_/config/intel.hpp:
	* src/boost/mpl/aux_/config/lambda.hpp:
	* src/boost/mpl/aux_/config/msvc.hpp:
	* src/boost/mpl/aux_/config/msvc_typename.hpp:
	* src/boost/mpl/aux_/config/nttp.hpp:
	* src/boost/mpl/aux_/config/operators.hpp:
	* src/boost/mpl/aux_/config/overload_resolution.hpp:
	* src/boost/mpl/aux_/config/preprocessor.hpp:
	* src/boost/mpl/aux_/config/static_constant.hpp:
	* src/boost/mpl/aux_/config/ttp.hpp:
	* src/boost/mpl/aux_/config/typeof.hpp:
	* src/boost/mpl/aux_/config/use_preprocessed.hpp:
	* src/boost/mpl/aux_/config/workaround.hpp:
	* src/boost/mpl/aux_/contains_impl.hpp:
	* src/boost/mpl/aux_/count_args.hpp:
	* src/boost/mpl/aux_/count_impl.hpp:
	* src/boost/mpl/aux_/empty_impl.hpp:
	* src/boost/mpl/aux_/erase_impl.hpp:
	* src/boost/mpl/aux_/erase_key_impl.hpp:
	* src/boost/mpl/aux_/filter_iter.hpp:
	* src/boost/mpl/aux_/find_if_pred.hpp:
	* src/boost/mpl/aux_/fold_impl.hpp:
	* src/boost/mpl/aux_/fold_impl_body.hpp:
	* src/boost/mpl/aux_/fold_op.hpp:
	* src/boost/mpl/aux_/fold_pred.hpp:
	* src/boost/mpl/aux_/front_impl.hpp:
	* src/boost/mpl/aux_/full_lambda.hpp:
	* src/boost/mpl/aux_/has_apply.hpp:
	* src/boost/mpl/aux_/has_begin.hpp:
	* src/boost/mpl/aux_/has_key_impl.hpp:
	* src/boost/mpl/aux_/has_rebind.hpp:
	* src/boost/mpl/aux_/has_size.hpp:
	* src/boost/mpl/aux_/has_tag.hpp:
	* src/boost/mpl/aux_/has_type.hpp:
	* src/boost/mpl/aux_/include_preprocessed.hpp:
	* src/boost/mpl/aux_/insert_impl.hpp:
	* src/boost/mpl/aux_/insert_range_impl.hpp:
	* src/boost/mpl/aux_/inserter_algorithm.hpp:
	* src/boost/mpl/aux_/integral_wrapper.hpp:
	* src/boost/mpl/aux_/is_msvc_eti_arg.hpp:
	* src/boost/mpl/aux_/iter_apply.hpp:
	* src/boost/mpl/aux_/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/iter_push_front.hpp:
	* src/boost/mpl/aux_/joint_iter.hpp:
	* src/boost/mpl/aux_/lambda_arity_param.hpp:
	* src/boost/mpl/aux_/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/lambda_spec.hpp:
	* src/boost/mpl/aux_/lambda_support.hpp:
	* src/boost/mpl/aux_/largest_int.hpp:
	* src/boost/mpl/aux_/logical_op.hpp:
	* src/boost/mpl/aux_/msvc_dtw.hpp:
	* src/boost/mpl/aux_/msvc_eti_base.hpp:
	* src/boost/mpl/aux_/msvc_is_class.hpp:
	* src/boost/mpl/aux_/msvc_never_true.hpp:
	* src/boost/mpl/aux_/msvc_type.hpp:
	* src/boost/mpl/aux_/na.hpp:
	* src/boost/mpl/aux_/na_assert.hpp:
	* src/boost/mpl/aux_/na_fwd.hpp:
	* src/boost/mpl/aux_/na_spec.hpp:
	* src/boost/mpl/aux_/nested_type_wknd.hpp:
	* src/boost/mpl/aux_/nttp_decl.hpp:
	* src/boost/mpl/aux_/numeric_cast_utils.hpp:
	* src/boost/mpl/aux_/numeric_op.hpp:
	* src/boost/mpl/aux_/order_impl.hpp:
	* src/boost/mpl/aux_/overload_names.hpp:
	* src/boost/mpl/aux_/partition_op.hpp:
	* src/boost/mpl/aux_/pop_back_impl.hpp:
	* src/boost/mpl/aux_/pop_front_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/and.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/less.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/list.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/map.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/or.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/set.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/times.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/and.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/less.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/list.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/map.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/or.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/set.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/times.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/and.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/less.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/list.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/map.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/or.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/set.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/times.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/and.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/less.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/list.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/map.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/or.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/set.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/times.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/and.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/less.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/list.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/map.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/or.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/set.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/times.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/and.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/less.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/list.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/map.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/or.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/set.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/times.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/and.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/less.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/list.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/map.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/or.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/set.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/times.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessor/add.hpp:
	* src/boost/mpl/aux_/preprocessor/def_params_tail.hpp:
	* src/boost/mpl/aux_/preprocessor/default_params.hpp:
	* src/boost/mpl/aux_/preprocessor/enum.hpp:
	* src/boost/mpl/aux_/preprocessor/ext_params.hpp:
	* src/boost/mpl/aux_/preprocessor/filter_params.hpp:
	* src/boost/mpl/aux_/preprocessor/is_seq.hpp:
	* src/boost/mpl/aux_/preprocessor/params.hpp:
	* src/boost/mpl/aux_/preprocessor/partial_spec_params.hpp:
	* src/boost/mpl/aux_/preprocessor/range.hpp:
	* src/boost/mpl/aux_/preprocessor/repeat.hpp:
	* src/boost/mpl/aux_/preprocessor/sub.hpp:
	* src/boost/mpl/aux_/preprocessor/token_equal.hpp:
	* src/boost/mpl/aux_/preprocessor/tuple.hpp:
	* src/boost/mpl/aux_/ptr_to_ref.hpp:
	* src/boost/mpl/aux_/push_back_impl.hpp:
	* src/boost/mpl/aux_/push_front_impl.hpp:
	* src/boost/mpl/aux_/range_c/O1_size.hpp:
	* src/boost/mpl/aux_/range_c/back.hpp:
	* src/boost/mpl/aux_/range_c/empty.hpp:
	* src/boost/mpl/aux_/range_c/front.hpp:
	* src/boost/mpl/aux_/range_c/iterator.hpp:
	* src/boost/mpl/aux_/range_c/size.hpp:
	* src/boost/mpl/aux_/range_c/tag.hpp:
	* src/boost/mpl/aux_/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/reverse_fold_impl_body.hpp:
	* src/boost/mpl/aux_/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/sequence_wrapper.hpp:
	* src/boost/mpl/aux_/shift_op.hpp:
	* src/boost/mpl/aux_/single_element_iter.hpp:
	* src/boost/mpl/aux_/size_impl.hpp:
	* src/boost/mpl/aux_/sort_impl.hpp:
	* src/boost/mpl/aux_/static_cast.hpp:
	* src/boost/mpl/aux_/template_arity.hpp:
	* src/boost/mpl/aux_/template_arity_fwd.hpp:
	* src/boost/mpl/aux_/test.hpp:
	* src/boost/mpl/aux_/test/assert.hpp:
	* src/boost/mpl/aux_/test/data.hpp:
	* src/boost/mpl/aux_/test/test_case.hpp:
	* src/boost/mpl/aux_/traits_lambda_spec.hpp:
	* src/boost/mpl/aux_/transform_iter.hpp:
	* src/boost/mpl/aux_/type_wrapper.hpp:
	* src/boost/mpl/aux_/unwrap.hpp:
	* src/boost/mpl/aux_/value_wknd.hpp:
	* src/boost/mpl/aux_/yes_no.hpp:
	* src/boost/mpl/back.hpp:
	* src/boost/mpl/back_fwd.hpp:
	* src/boost/mpl/back_inserter.hpp:
	* src/boost/mpl/base.hpp:
	* src/boost/mpl/begin.hpp:
	* src/boost/mpl/begin_end.hpp:
	* src/boost/mpl/begin_end_fwd.hpp:
	* src/boost/mpl/bind.hpp:
	* src/boost/mpl/bind_fwd.hpp:
	* src/boost/mpl/bitand.hpp:
	* src/boost/mpl/bitor.hpp:
	* src/boost/mpl/bitwise.hpp:
	* src/boost/mpl/bitxor.hpp:
	* src/boost/mpl/bool.hpp:
	* src/boost/mpl/bool_fwd.hpp:
	* src/boost/mpl/clear.hpp:
	* src/boost/mpl/clear_fwd.hpp:
	* src/boost/mpl/comparison.hpp:
	* src/boost/mpl/contains.hpp:
	* src/boost/mpl/contains_fwd.hpp:
	* src/boost/mpl/copy.hpp:
	* src/boost/mpl/copy_if.hpp:
	* src/boost/mpl/count.hpp:
	* src/boost/mpl/count_fwd.hpp:
	* src/boost/mpl/count_if.hpp:
	* src/boost/mpl/deque.hpp:
	* src/boost/mpl/deref.hpp:
	* src/boost/mpl/distance.hpp:
	* src/boost/mpl/distance_fwd.hpp:
	* src/boost/mpl/divides.hpp:
	* src/boost/mpl/empty.hpp:
	* src/boost/mpl/empty_base.hpp:
	* src/boost/mpl/empty_fwd.hpp:
	* src/boost/mpl/empty_sequence.hpp:
	* src/boost/mpl/end.hpp:
	* src/boost/mpl/equal.hpp:
	* src/boost/mpl/equal_to.hpp:
	* src/boost/mpl/erase.hpp:
	* src/boost/mpl/erase_fwd.hpp:
	* src/boost/mpl/erase_key.hpp:
	* src/boost/mpl/erase_key_fwd.hpp:
	* src/boost/mpl/eval_if.hpp:
	* src/boost/mpl/filter_view.hpp:
	* src/boost/mpl/find.hpp:
	* src/boost/mpl/find_if.hpp:
	* src/boost/mpl/fold.hpp:
	* src/boost/mpl/for_each.hpp:
	* src/boost/mpl/front.hpp:
	* src/boost/mpl/front_fwd.hpp:
	* src/boost/mpl/front_inserter.hpp:
	* src/boost/mpl/greater.hpp:
	* src/boost/mpl/greater_equal.hpp:
	* src/boost/mpl/has_key.hpp:
	* src/boost/mpl/has_key_fwd.hpp:
	* src/boost/mpl/has_xxx.hpp:
	* src/boost/mpl/identity.hpp:
	* src/boost/mpl/if.hpp:
	* src/boost/mpl/index_if.hpp:
	* src/boost/mpl/index_of.hpp:
	* src/boost/mpl/inherit.hpp:
	* src/boost/mpl/inherit_linearly.hpp:
	* src/boost/mpl/insert.hpp:
	* src/boost/mpl/insert_fwd.hpp:
	* src/boost/mpl/insert_range.hpp:
	* src/boost/mpl/insert_range_fwd.hpp:
	* src/boost/mpl/inserter.hpp:
	* src/boost/mpl/int.hpp:
	* src/boost/mpl/int_fwd.hpp:
	* src/boost/mpl/integral_c.hpp:
	* src/boost/mpl/integral_c_fwd.hpp:
	* src/boost/mpl/integral_c_tag.hpp:
	* src/boost/mpl/is_placeholder.hpp:
	* src/boost/mpl/is_sequence.hpp:
	* src/boost/mpl/iter_fold.hpp:
	* src/boost/mpl/iter_fold_if.hpp:
	* src/boost/mpl/iterator_category.hpp:
	* src/boost/mpl/iterator_range.hpp:
	* src/boost/mpl/iterator_tags.hpp:
	* src/boost/mpl/joint_view.hpp:
	* src/boost/mpl/key_type.hpp:
	* src/boost/mpl/key_type_fwd.hpp:
	* src/boost/mpl/lambda.hpp:
	* src/boost/mpl/lambda_fwd.hpp:
	* src/boost/mpl/less.hpp:
	* src/boost/mpl/less_equal.hpp:
	* src/boost/mpl/limits/arity.hpp:
	* src/boost/mpl/limits/list.hpp:
	* src/boost/mpl/limits/map.hpp:
	* src/boost/mpl/limits/set.hpp:
	* src/boost/mpl/limits/unrolling.hpp:
	* src/boost/mpl/limits/vector.hpp:
	* src/boost/mpl/list.hpp:
	* src/boost/mpl/list/aux_/O1_size.hpp:
	* src/boost/mpl/list/aux_/begin_end.hpp:
	* src/boost/mpl/list/aux_/clear.hpp:
	* src/boost/mpl/list/aux_/empty.hpp:
	* src/boost/mpl/list/aux_/front.hpp:
	* src/boost/mpl/list/aux_/include_preprocessed.hpp:
	* src/boost/mpl/list/aux_/item.hpp:
	* src/boost/mpl/list/aux_/iterator.hpp:
	* src/boost/mpl/list/aux_/numbered.hpp:
	* src/boost/mpl/list/aux_/numbered_c.hpp:
	* src/boost/mpl/list/aux_/pop_front.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list10.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list10_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list20.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list20_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list30.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list30_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list40.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list40_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list50.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list50_c.hpp:
	* src/boost/mpl/list/aux_/push_back.hpp:
	* src/boost/mpl/list/aux_/push_front.hpp:
	* src/boost/mpl/list/aux_/size.hpp:
	* src/boost/mpl/list/aux_/tag.hpp:
	* src/boost/mpl/list/list0.hpp:
	* src/boost/mpl/list/list0_c.hpp:
	* src/boost/mpl/list/list10.hpp:
	* src/boost/mpl/list/list10_c.hpp:
	* src/boost/mpl/list/list20.hpp:
	* src/boost/mpl/list/list20_c.hpp:
	* src/boost/mpl/list/list30.hpp:
	* src/boost/mpl/list/list30_c.hpp:
	* src/boost/mpl/list/list40.hpp:
	* src/boost/mpl/list/list40_c.hpp:
	* src/boost/mpl/list/list50.hpp:
	* src/boost/mpl/list/list50_c.hpp:
	* src/boost/mpl/list_c.hpp:
	* src/boost/mpl/logical.hpp:
	* src/boost/mpl/long.hpp:
	* src/boost/mpl/long_fwd.hpp:
	* src/boost/mpl/lower_bound.hpp:
	* src/boost/mpl/map.hpp:
	* src/boost/mpl/map/aux_/at_impl.hpp:
	* src/boost/mpl/map/aux_/begin_end_impl.hpp:
	* src/boost/mpl/map/aux_/clear_impl.hpp:
	* src/boost/mpl/map/aux_/contains_impl.hpp:
	* src/boost/mpl/map/aux_/empty_impl.hpp:
	* src/boost/mpl/map/aux_/erase_impl.hpp:
	* src/boost/mpl/map/aux_/erase_key_impl.hpp:
	* src/boost/mpl/map/aux_/has_key_impl.hpp:
	* src/boost/mpl/map/aux_/include_preprocessed.hpp:
	* src/boost/mpl/map/aux_/insert_impl.hpp:
	* src/boost/mpl/map/aux_/item.hpp:
	* src/boost/mpl/map/aux_/iterator.hpp:
	* src/boost/mpl/map/aux_/key_type_impl.hpp:
	* src/boost/mpl/map/aux_/map0.hpp:
	* src/boost/mpl/map/aux_/numbered.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map50.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map50.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map50.hpp:
	* src/boost/mpl/map/aux_/size_impl.hpp:
	* src/boost/mpl/map/aux_/tag.hpp:
	* src/boost/mpl/map/aux_/value_type_impl.hpp:
	* src/boost/mpl/map/map0.hpp:
	* src/boost/mpl/map/map10.hpp:
	* src/boost/mpl/map/map20.hpp:
	* src/boost/mpl/map/map30.hpp:
	* src/boost/mpl/map/map40.hpp:
	* src/boost/mpl/map/map50.hpp:
	* src/boost/mpl/math/fixed_c.hpp:
	* src/boost/mpl/math/is_even.hpp:
	* src/boost/mpl/math/rational_c.hpp:
	* src/boost/mpl/max.hpp:
	* src/boost/mpl/max_element.hpp:
	* src/boost/mpl/min.hpp:
	* src/boost/mpl/min_element.hpp:
	* src/boost/mpl/min_max.hpp:
	* src/boost/mpl/minus.hpp:
	* src/boost/mpl/modulus.hpp:
	* src/boost/mpl/multiplies.hpp:
	* src/boost/mpl/multiset/aux_/count_impl.hpp:
	* src/boost/mpl/multiset/aux_/insert_impl.hpp:
	* src/boost/mpl/multiset/aux_/item.hpp:
	* src/boost/mpl/multiset/aux_/multiset0.hpp:
	* src/boost/mpl/multiset/aux_/tag.hpp:
	* src/boost/mpl/multiset/multiset0.hpp:
	* src/boost/mpl/negate.hpp:
	* src/boost/mpl/next.hpp:
	* src/boost/mpl/next_prior.hpp:
	* src/boost/mpl/not.hpp:
	* src/boost/mpl/not_equal_to.hpp:
	* src/boost/mpl/numeric_cast.hpp:
	* src/boost/mpl/or.hpp:
	* src/boost/mpl/order.hpp:
	* src/boost/mpl/order_fwd.hpp:
	* src/boost/mpl/pair.hpp:
	* src/boost/mpl/pair_view.hpp:
	* src/boost/mpl/partition.hpp:
	* src/boost/mpl/placeholders.hpp:
	* src/boost/mpl/plus.hpp:
	* src/boost/mpl/pop_back.hpp:
	* src/boost/mpl/pop_back_fwd.hpp:
	* src/boost/mpl/pop_front.hpp:
	* src/boost/mpl/pop_front_fwd.hpp:
	* src/boost/mpl/print.hpp:
	* src/boost/mpl/prior.hpp:
	* src/boost/mpl/protect.hpp:
	* src/boost/mpl/push_back.hpp:
	* src/boost/mpl/push_back_fwd.hpp:
	* src/boost/mpl/push_front.hpp:
	* src/boost/mpl/push_front_fwd.hpp:
	* src/boost/mpl/quote.hpp:
	* src/boost/mpl/range_c.hpp:
	* src/boost/mpl/remove.hpp:
	* src/boost/mpl/remove_if.hpp:
	* src/boost/mpl/replace.hpp:
	* src/boost/mpl/replace_if.hpp:
	* src/boost/mpl/reverse.hpp:
	* src/boost/mpl/reverse_fold.hpp:
	* src/boost/mpl/reverse_iter_fold.hpp:
	* src/boost/mpl/same_as.hpp:
	* src/boost/mpl/sequence_tag.hpp:
	* src/boost/mpl/sequence_tag_fwd.hpp:
	* src/boost/mpl/set.hpp:
	* src/boost/mpl/set/aux_/at_impl.hpp:
	* src/boost/mpl/set/aux_/begin_end_impl.hpp:
	* src/boost/mpl/set/aux_/clear_impl.hpp:
	* src/boost/mpl/set/aux_/empty_impl.hpp:
	* src/boost/mpl/set/aux_/erase_impl.hpp:
	* src/boost/mpl/set/aux_/erase_key_impl.hpp:
	* src/boost/mpl/set/aux_/has_key_impl.hpp:
	* src/boost/mpl/set/aux_/include_preprocessed.hpp:
	* src/boost/mpl/set/aux_/insert_impl.hpp:
	* src/boost/mpl/set/aux_/item.hpp:
	* src/boost/mpl/set/aux_/iterator.hpp:
	* src/boost/mpl/set/aux_/key_type_impl.hpp:
	* src/boost/mpl/set/aux_/numbered.hpp:
	* src/boost/mpl/set/aux_/numbered_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set10.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set10_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set20.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set20_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set30.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set30_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set40.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set40_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set50.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set50_c.hpp:
	* src/boost/mpl/set/aux_/set0.hpp:
	* src/boost/mpl/set/aux_/size_impl.hpp:
	* src/boost/mpl/set/aux_/tag.hpp:
	* src/boost/mpl/set/aux_/value_type_impl.hpp:
	* src/boost/mpl/set/set0.hpp:
	* src/boost/mpl/set/set0_c.hpp:
	* src/boost/mpl/set/set10.hpp:
	* src/boost/mpl/set/set10_c.hpp:
	* src/boost/mpl/set/set20.hpp:
	* src/boost/mpl/set/set20_c.hpp:
	* src/boost/mpl/set/set30.hpp:
	* src/boost/mpl/set/set30_c.hpp:
	* src/boost/mpl/set/set40.hpp:
	* src/boost/mpl/set/set40_c.hpp:
	* src/boost/mpl/set/set50.hpp:
	* src/boost/mpl/set/set50_c.hpp:
	* src/boost/mpl/set_c.hpp:
	* src/boost/mpl/shift_left.hpp:
	* src/boost/mpl/shift_right.hpp:
	* src/boost/mpl/single_view.hpp:
	* src/boost/mpl/size.hpp:
	* src/boost/mpl/size_fwd.hpp:
	* src/boost/mpl/size_t.hpp:
	* src/boost/mpl/size_t_fwd.hpp:
	* src/boost/mpl/sizeof.hpp:
	* src/boost/mpl/sort.hpp:
	* src/boost/mpl/stable_partition.hpp:
	* src/boost/mpl/switch.hpp:
	* src/boost/mpl/tag.hpp:
	* src/boost/mpl/times.hpp:
	* src/boost/mpl/transform.hpp:
	* src/boost/mpl/transform_view.hpp:
	* src/boost/mpl/unique.hpp:
	* src/boost/mpl/unpack_args.hpp:
	* src/boost/mpl/upper_bound.hpp:
	* src/boost/mpl/value_type.hpp:
	* src/boost/mpl/value_type_fwd.hpp:
	* src/boost/mpl/vector.hpp:
	* src/boost/mpl/vector/aux_/O1_size.hpp:
	* src/boost/mpl/vector/aux_/at.hpp:
	* src/boost/mpl/vector/aux_/back.hpp:
	* src/boost/mpl/vector/aux_/begin_end.hpp:
	* src/boost/mpl/vector/aux_/clear.hpp:
	* src/boost/mpl/vector/aux_/empty.hpp:
	* src/boost/mpl/vector/aux_/front.hpp:
	* src/boost/mpl/vector/aux_/include_preprocessed.hpp:
	* src/boost/mpl/vector/aux_/item.hpp:
	* src/boost/mpl/vector/aux_/iterator.hpp:
	* src/boost/mpl/vector/aux_/numbered.hpp:
	* src/boost/mpl/vector/aux_/numbered_c.hpp:
	* src/boost/mpl/vector/aux_/pop_back.hpp:
	* src/boost/mpl/vector/aux_/pop_front.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/push_back.hpp:
	* src/boost/mpl/vector/aux_/push_front.hpp:
	* src/boost/mpl/vector/aux_/size.hpp:
	* src/boost/mpl/vector/aux_/tag.hpp:
	* src/boost/mpl/vector/aux_/vector0.hpp:
	* src/boost/mpl/vector/vector0.hpp:
	* src/boost/mpl/vector/vector0_c.hpp:
	* src/boost/mpl/vector/vector10.hpp:
	* src/boost/mpl/vector/vector10_c.hpp:
	* src/boost/mpl/vector/vector20.hpp:
	* src/boost/mpl/vector/vector20_c.hpp:
	* src/boost/mpl/vector/vector30.hpp:
	* src/boost/mpl/vector/vector30_c.hpp:
	* src/boost/mpl/vector/vector40.hpp:
	* src/boost/mpl/vector/vector40_c.hpp:
	* src/boost/mpl/vector/vector50.hpp:
	* src/boost/mpl/vector/vector50_c.hpp:
	* src/boost/mpl/vector_c.hpp:
	* src/boost/mpl/void.hpp:
	* src/boost/mpl/void_fwd.hpp:
	* src/boost/mpl/zip_view.hpp:
	* src/boost/next_prior.hpp:
	* src/boost/noncopyable.hpp:
	* src/boost/pointer_cast.hpp:
	* src/boost/preprocessor.hpp:
	* src/boost/preprocessor/arithmetic.hpp:
	* src/boost/preprocessor/arithmetic/add.hpp:
	* src/boost/preprocessor/arithmetic/dec.hpp:
	* src/boost/preprocessor/arithmetic/detail/div_base.hpp:
	* src/boost/preprocessor/arithmetic/div.hpp:
	* src/boost/preprocessor/arithmetic/inc.hpp:
	* src/boost/preprocessor/arithmetic/mod.hpp:
	* src/boost/preprocessor/arithmetic/mul.hpp:
	* src/boost/preprocessor/arithmetic/sub.hpp:
	* src/boost/preprocessor/array.hpp:
	* src/boost/preprocessor/array/data.hpp:
	* src/boost/preprocessor/array/elem.hpp:
	* src/boost/preprocessor/array/insert.hpp:
	* src/boost/preprocessor/array/pop_back.hpp:
	* src/boost/preprocessor/array/pop_front.hpp:
	* src/boost/preprocessor/array/push_back.hpp:
	* src/boost/preprocessor/array/push_front.hpp:
	* src/boost/preprocessor/array/remove.hpp:
	* src/boost/preprocessor/array/replace.hpp:
	* src/boost/preprocessor/array/reverse.hpp:
	* src/boost/preprocessor/array/size.hpp:
	* src/boost/preprocessor/assert_msg.hpp:
	* src/boost/preprocessor/cat.hpp:
	* src/boost/preprocessor/comma.hpp:
	* src/boost/preprocessor/comma_if.hpp:
	* src/boost/preprocessor/comparison.hpp:
	* src/boost/preprocessor/comparison/equal.hpp:
	* src/boost/preprocessor/comparison/greater.hpp:
	* src/boost/preprocessor/comparison/greater_equal.hpp:
	* src/boost/preprocessor/comparison/less.hpp:
	* src/boost/preprocessor/comparison/less_equal.hpp:
	* src/boost/preprocessor/comparison/not_equal.hpp:
	* src/boost/preprocessor/config/config.hpp:
	* src/boost/preprocessor/config/limits.hpp:
	* src/boost/preprocessor/control.hpp:
	* src/boost/preprocessor/control/deduce_d.hpp:
	* src/boost/preprocessor/control/detail/dmc/while.hpp:
	* src/boost/preprocessor/control/detail/edg/while.hpp:
	* src/boost/preprocessor/control/detail/msvc/while.hpp:
	* src/boost/preprocessor/control/detail/while.hpp:
	* src/boost/preprocessor/control/expr_if.hpp:
	* src/boost/preprocessor/control/expr_iif.hpp:
	* src/boost/preprocessor/control/if.hpp:
	* src/boost/preprocessor/control/iif.hpp:
	* src/boost/preprocessor/control/while.hpp:
	* src/boost/preprocessor/debug.hpp:
	* src/boost/preprocessor/debug/assert.hpp:
	* src/boost/preprocessor/debug/error.hpp:
	* src/boost/preprocessor/debug/line.hpp:
	* src/boost/preprocessor/dec.hpp:
	* src/boost/preprocessor/detail/auto_rec.hpp:
	* src/boost/preprocessor/detail/check.hpp:
	* src/boost/preprocessor/detail/dmc/auto_rec.hpp:
	* src/boost/preprocessor/detail/is_binary.hpp:
	* src/boost/preprocessor/detail/is_nullary.hpp:
	* src/boost/preprocessor/detail/is_unary.hpp:
	* src/boost/preprocessor/detail/null.hpp:
	* src/boost/preprocessor/detail/split.hpp:
	* src/boost/preprocessor/empty.hpp:
	* src/boost/preprocessor/enum.hpp:
	* src/boost/preprocessor/enum_params.hpp:
	* src/boost/preprocessor/enum_params_with_a_default.hpp:
	* src/boost/preprocessor/enum_params_with_defaults.hpp:
	* src/boost/preprocessor/enum_shifted.hpp:
	* src/boost/preprocessor/enum_shifted_params.hpp:
	* src/boost/preprocessor/expand.hpp:
	* src/boost/preprocessor/expr_if.hpp:
	* src/boost/preprocessor/facilities.hpp:
	* src/boost/preprocessor/facilities/apply.hpp:
	* src/boost/preprocessor/facilities/empty.hpp:
	* src/boost/preprocessor/facilities/expand.hpp:
	* src/boost/preprocessor/facilities/identity.hpp:
	* src/boost/preprocessor/facilities/intercept.hpp:
	* src/boost/preprocessor/facilities/is_1.hpp:
	* src/boost/preprocessor/facilities/is_empty.hpp:
	* src/boost/preprocessor/facilities/is_empty_or_1.hpp:
	* src/boost/preprocessor/for.hpp:
	* src/boost/preprocessor/identity.hpp:
	* src/boost/preprocessor/if.hpp:
	* src/boost/preprocessor/inc.hpp:
	* src/boost/preprocessor/iterate.hpp:
	* src/boost/preprocessor/iteration.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower1.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower2.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower3.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower4.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower5.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper1.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper2.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper3.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper4.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper5.hpp:
	* src/boost/preprocessor/iteration/detail/finish.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward1.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward2.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward3.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward4.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward5.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse1.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse2.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse3.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse4.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse5.hpp:
	* src/boost/preprocessor/iteration/detail/local.hpp:
	* src/boost/preprocessor/iteration/detail/rlocal.hpp:
	* src/boost/preprocessor/iteration/detail/self.hpp:
	* src/boost/preprocessor/iteration/detail/start.hpp:
	* src/boost/preprocessor/iteration/iterate.hpp:
	* src/boost/preprocessor/iteration/local.hpp:
	* src/boost/preprocessor/iteration/self.hpp:
	* src/boost/preprocessor/library.hpp:
	* src/boost/preprocessor/limits.hpp:
	* src/boost/preprocessor/list.hpp:
	* src/boost/preprocessor/list/adt.hpp:
	* src/boost/preprocessor/list/append.hpp:
	* src/boost/preprocessor/list/at.hpp:
	* src/boost/preprocessor/list/cat.hpp:
	* src/boost/preprocessor/list/detail/dmc/fold_left.hpp:
	* src/boost/preprocessor/list/detail/edg/fold_left.hpp:
	* src/boost/preprocessor/list/detail/edg/fold_right.hpp:
	* src/boost/preprocessor/list/detail/fold_left.hpp:
	* src/boost/preprocessor/list/detail/fold_right.hpp:
	* src/boost/preprocessor/list/enum.hpp:
	* src/boost/preprocessor/list/filter.hpp:
	* src/boost/preprocessor/list/first_n.hpp:
	* src/boost/preprocessor/list/fold_left.hpp:
	* src/boost/preprocessor/list/fold_right.hpp:
	* src/boost/preprocessor/list/for_each.hpp:
	* src/boost/preprocessor/list/for_each_i.hpp:
	* src/boost/preprocessor/list/for_each_product.hpp:
	* src/boost/preprocessor/list/rest_n.hpp:
	* src/boost/preprocessor/list/reverse.hpp:
	* src/boost/preprocessor/list/size.hpp:
	* src/boost/preprocessor/list/to_tuple.hpp:
	* src/boost/preprocessor/list/transform.hpp:
	* src/boost/preprocessor/logical.hpp:
	* src/boost/preprocessor/logical/and.hpp:
	* src/boost/preprocessor/logical/bitand.hpp:
	* src/boost/preprocessor/logical/bitnor.hpp:
	* src/boost/preprocessor/logical/bitor.hpp:
	* src/boost/preprocessor/logical/bitxor.hpp:
	* src/boost/preprocessor/logical/bool.hpp:
	* src/boost/preprocessor/logical/compl.hpp:
	* src/boost/preprocessor/logical/nor.hpp:
	* src/boost/preprocessor/logical/not.hpp:
	* src/boost/preprocessor/logical/or.hpp:
	* src/boost/preprocessor/logical/xor.hpp:
	* src/boost/preprocessor/max.hpp:
	* src/boost/preprocessor/min.hpp:
	* src/boost/preprocessor/punctuation.hpp:
	* src/boost/preprocessor/punctuation/comma.hpp:
	* src/boost/preprocessor/punctuation/comma_if.hpp:
	* src/boost/preprocessor/punctuation/paren.hpp:
	* src/boost/preprocessor/punctuation/paren_if.hpp:
	* src/boost/preprocessor/repeat.hpp:
	* src/boost/preprocessor/repeat_2nd.hpp:
	* src/boost/preprocessor/repeat_3rd.hpp:
	* src/boost/preprocessor/repeat_from_to.hpp:
	* src/boost/preprocessor/repeat_from_to_2nd.hpp:
	* src/boost/preprocessor/repeat_from_to_3rd.hpp:
	* src/boost/preprocessor/repetition.hpp:
	* src/boost/preprocessor/repetition/deduce_r.hpp:
	* src/boost/preprocessor/repetition/deduce_z.hpp:
	* src/boost/preprocessor/repetition/detail/dmc/for.hpp:
	* src/boost/preprocessor/repetition/detail/edg/for.hpp:
	* src/boost/preprocessor/repetition/detail/for.hpp:
	* src/boost/preprocessor/repetition/detail/msvc/for.hpp:
	* src/boost/preprocessor/repetition/enum.hpp:
	* src/boost/preprocessor/repetition/enum_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_params.hpp:
	* src/boost/preprocessor/repetition/enum_params_with_a_default.hpp:
	* src/boost/preprocessor/repetition/enum_params_with_defaults.hpp:
	* src/boost/preprocessor/repetition/enum_shifted.hpp:
	* src/boost/preprocessor/repetition/enum_shifted_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_shifted_params.hpp:
	* src/boost/preprocessor/repetition/enum_trailing.hpp:
	* src/boost/preprocessor/repetition/enum_trailing_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_trailing_params.hpp:
	* src/boost/preprocessor/repetition/for.hpp:
	* src/boost/preprocessor/repetition/repeat.hpp:
	* src/boost/preprocessor/repetition/repeat_from_to.hpp:
	* src/boost/preprocessor/selection.hpp:
	* src/boost/preprocessor/selection/max.hpp:
	* src/boost/preprocessor/selection/min.hpp:
	* src/boost/preprocessor/seq.hpp:
	* src/boost/preprocessor/seq/cat.hpp:
	* src/boost/preprocessor/seq/detail/split.hpp:
	* src/boost/preprocessor/seq/elem.hpp:
	* src/boost/preprocessor/seq/enum.hpp:
	* src/boost/preprocessor/seq/filter.hpp:
	* src/boost/preprocessor/seq/first_n.hpp:
	* src/boost/preprocessor/seq/fold_left.hpp:
	* src/boost/preprocessor/seq/fold_right.hpp:
	* src/boost/preprocessor/seq/for_each.hpp:
	* src/boost/preprocessor/seq/for_each_i.hpp:
	* src/boost/preprocessor/seq/for_each_product.hpp:
	* src/boost/preprocessor/seq/insert.hpp:
	* src/boost/preprocessor/seq/pop_back.hpp:
	* src/boost/preprocessor/seq/pop_front.hpp:
	* src/boost/preprocessor/seq/push_back.hpp:
	* src/boost/preprocessor/seq/push_front.hpp:
	* src/boost/preprocessor/seq/remove.hpp:
	* src/boost/preprocessor/seq/replace.hpp:
	* src/boost/preprocessor/seq/rest_n.hpp:
	* src/boost/preprocessor/seq/reverse.hpp:
	* src/boost/preprocessor/seq/seq.hpp:
	* src/boost/preprocessor/seq/size.hpp:
	* src/boost/preprocessor/seq/subseq.hpp:
	* src/boost/preprocessor/seq/to_array.hpp:
	* src/boost/preprocessor/seq/to_tuple.hpp:
	* src/boost/preprocessor/seq/transform.hpp:
	* src/boost/preprocessor/slot.hpp:
	* src/boost/preprocessor/slot/counter.hpp:
	* src/boost/preprocessor/slot/detail/counter.hpp:
	* src/boost/preprocessor/slot/detail/def.hpp:
	* src/boost/preprocessor/slot/detail/shared.hpp:
	* src/boost/preprocessor/slot/detail/slot1.hpp:
	* src/boost/preprocessor/slot/detail/slot2.hpp:
	* src/boost/preprocessor/slot/detail/slot3.hpp:
	* src/boost/preprocessor/slot/detail/slot4.hpp:
	* src/boost/preprocessor/slot/detail/slot5.hpp:
	* src/boost/preprocessor/slot/slot.hpp:
	* src/boost/preprocessor/stringize.hpp:
	* src/boost/preprocessor/tuple.hpp:
	* src/boost/preprocessor/tuple/eat.hpp:
	* src/boost/preprocessor/tuple/elem.hpp:
	* src/boost/preprocessor/tuple/rem.hpp:
	* src/boost/preprocessor/tuple/reverse.hpp:
	* src/boost/preprocessor/tuple/to_list.hpp:
	* src/boost/preprocessor/tuple/to_seq.hpp:
	* src/boost/preprocessor/while.hpp:
	* src/boost/preprocessor/wstringize.hpp:
	* src/boost/range.hpp:
	* src/boost/range/begin.hpp:
	* src/boost/range/concepts.hpp:
	* src/boost/range/config.hpp:
	* src/boost/range/const_iterator.hpp:
	* src/boost/range/const_reverse_iterator.hpp:
	* src/boost/range/detail/begin.hpp:
	* src/boost/range/detail/collection_traits.hpp:
	* src/boost/range/detail/collection_traits_detail.hpp:
	* src/boost/range/detail/common.hpp:
	* src/boost/range/detail/const_iterator.hpp:
	* src/boost/range/detail/difference_type.hpp:
	* src/boost/range/detail/empty.hpp:
	* src/boost/range/detail/end.hpp:
	* src/boost/range/detail/implementation_help.hpp:
	* src/boost/range/detail/iterator.hpp:
	* src/boost/range/detail/mfc/carray.hpp:
	* src/boost/range/detail/mfc/cstring.hpp:
	* src/boost/range/detail/remove_extent.hpp:
	* src/boost/range/detail/sfinae.hpp:
	* src/boost/range/detail/size.hpp:
	* src/boost/range/detail/size_type.hpp:
	* src/boost/range/detail/sizer.hpp:
	* src/boost/range/detail/value_type.hpp:
	* src/boost/range/detail/vc6/end.hpp:
	* src/boost/range/detail/vc6/size.hpp:
	* src/boost/range/difference_type.hpp:
	* src/boost/range/empty.hpp:
	* src/boost/range/end.hpp:
	* src/boost/range/functions.hpp:
	* src/boost/range/iterator.hpp:
	* src/boost/range/iterator_range.hpp:
	* src/boost/range/metafunctions.hpp:
	* src/boost/range/rbegin.hpp:
	* src/boost/range/rend.hpp:
	* src/boost/range/result_iterator.hpp:
	* src/boost/range/reverse_iterator.hpp:
	* src/boost/range/reverse_result_iterator.hpp:
	* src/boost/range/size.hpp:
	* src/boost/range/size_type.hpp:
	* src/boost/range/sub_range.hpp:
	* src/boost/range/value_type.hpp:
	* src/boost/ref.hpp:
	* src/boost/scoped_array.hpp:
	* src/boost/scoped_ptr.hpp:
	* src/boost/shared_ptr.hpp:
	* src/boost/smart_cast.hpp:
	* src/boost/smart_ptr.hpp:
	* src/boost/static_assert.hpp:
	* src/boost/static_warning.hpp:
	* src/boost/throw_exception.hpp:
	* src/boost/type_traits.hpp:
	* src/boost/type_traits/add_const.hpp:
	* src/boost/type_traits/add_cv.hpp:
	* src/boost/type_traits/add_pointer.hpp:
	* src/boost/type_traits/add_reference.hpp:
	* src/boost/type_traits/add_volatile.hpp:
	* src/boost/type_traits/aligned_storage.hpp:
	* src/boost/type_traits/alignment_of.hpp:
	* src/boost/type_traits/alignment_traits.hpp:
	* src/boost/type_traits/arithmetic_traits.hpp:
	* src/boost/type_traits/array_traits.hpp:
	* src/boost/type_traits/broken_compiler_spec.hpp:
	* src/boost/type_traits/composite_traits.hpp:
	* src/boost/type_traits/config.hpp:
	* src/boost/type_traits/conversion_traits.hpp:
	* src/boost/type_traits/cv_traits.hpp:
	* src/boost/type_traits/decay.hpp:
	* src/boost/type_traits/detail/bool_trait_def.hpp:
	* src/boost/type_traits/detail/bool_trait_undef.hpp:
	* src/boost/type_traits/detail/cv_traits_impl.hpp:
	* src/boost/type_traits/detail/false_result.hpp:
	* src/boost/type_traits/detail/ice_and.hpp:
	* src/boost/type_traits/detail/ice_eq.hpp:
	* src/boost/type_traits/detail/ice_not.hpp:
	* src/boost/type_traits/detail/ice_or.hpp:
	* src/boost/type_traits/detail/is_function_ptr_helper.hpp:
	* src/boost/type_traits/detail/is_function_ptr_tester.hpp:
	* src/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:
	* src/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp:
	* src/boost/type_traits/detail/size_t_trait_def.hpp:
	* src/boost/type_traits/detail/size_t_trait_undef.hpp:
	* src/boost/type_traits/detail/template_arity_spec.hpp:
	* src/boost/type_traits/detail/type_trait_def.hpp:
	* src/boost/type_traits/detail/type_trait_undef.hpp:
	* src/boost/type_traits/detail/wrap.hpp:
	* src/boost/type_traits/detail/yes_no_type.hpp:
	* src/boost/type_traits/extent.hpp:
	* src/boost/type_traits/function_traits.hpp:
	* src/boost/type_traits/has_nothrow_assign.hpp:
	* src/boost/type_traits/has_nothrow_constructor.hpp:
	* src/boost/type_traits/has_nothrow_copy.hpp:
	* src/boost/type_traits/has_nothrow_destructor.hpp:
	* src/boost/type_traits/has_trivial_assign.hpp:
	* src/boost/type_traits/has_trivial_constructor.hpp:
	* src/boost/type_traits/has_trivial_copy.hpp:
	* src/boost/type_traits/has_trivial_destructor.hpp:
	* src/boost/type_traits/has_virtual_destructor.hpp:
	* src/boost/type_traits/ice.hpp:
	* src/boost/type_traits/integral_constant.hpp:
	* src/boost/type_traits/intrinsics.hpp:
	* src/boost/type_traits/is_abstract.hpp:
	* src/boost/type_traits/is_arithmetic.hpp:
	* src/boost/type_traits/is_array.hpp:
	* src/boost/type_traits/is_base_and_derived.hpp:
	* src/boost/type_traits/is_base_of.hpp:
	* src/boost/type_traits/is_class.hpp:
	* src/boost/type_traits/is_compound.hpp:
	* src/boost/type_traits/is_const.hpp:
	* src/boost/type_traits/is_convertible.hpp:
	* src/boost/type_traits/is_empty.hpp:
	* src/boost/type_traits/is_enum.hpp:
	* src/boost/type_traits/is_float.hpp:
	* src/boost/type_traits/is_floating_point.hpp:
	* src/boost/type_traits/is_function.hpp:
	* src/boost/type_traits/is_fundamental.hpp:
	* src/boost/type_traits/is_integral.hpp:
	* src/boost/type_traits/is_member_function_pointer.hpp:
	* src/boost/type_traits/is_member_object_pointer.hpp:
	* src/boost/type_traits/is_member_pointer.hpp:
	* src/boost/type_traits/is_object.hpp:
	* src/boost/type_traits/is_pod.hpp:
	* src/boost/type_traits/is_pointer.hpp:
	* src/boost/type_traits/is_polymorphic.hpp:
	* src/boost/type_traits/is_reference.hpp:
	* src/boost/type_traits/is_same.hpp:
	* src/boost/type_traits/is_scalar.hpp:
	* src/boost/type_traits/is_signed.hpp:
	* src/boost/type_traits/is_stateless.hpp:
	* src/boost/type_traits/is_union.hpp:
	* src/boost/type_traits/is_unsigned.hpp:
	* src/boost/type_traits/is_void.hpp:
	* src/boost/type_traits/is_volatile.hpp:
	* src/boost/type_traits/msvc/remove_all_extents.hpp:
	* src/boost/type_traits/msvc/remove_bounds.hpp:
	* src/boost/type_traits/msvc/remove_const.hpp:
	* src/boost/type_traits/msvc/remove_cv.hpp:
	* src/boost/type_traits/msvc/remove_extent.hpp:
	* src/boost/type_traits/msvc/remove_pointer.hpp:
	* src/boost/type_traits/msvc/remove_reference.hpp:
	* src/boost/type_traits/msvc/remove_volatile.hpp:
	* src/boost/type_traits/msvc/typeof.hpp:
	* src/boost/type_traits/object_traits.hpp:
	* src/boost/type_traits/rank.hpp:
	* src/boost/type_traits/reference_traits.hpp:
	* src/boost/type_traits/remove_all_extents.hpp:
	* src/boost/type_traits/remove_bounds.hpp:
	* src/boost/type_traits/remove_const.hpp:
	* src/boost/type_traits/remove_cv.hpp:
	* src/boost/type_traits/remove_extent.hpp:
	* src/boost/type_traits/remove_pointer.hpp:
	* src/boost/type_traits/remove_reference.hpp:
	* src/boost/type_traits/remove_volatile.hpp:
	* src/boost/type_traits/same_traits.hpp:
	* src/boost/type_traits/transform_traits.hpp:
	* src/boost/type_traits/transform_traits_spec.hpp:
	* src/boost/type_traits/type_with_alignment.hpp:
	* src/boost/utility.hpp:
	* src/boost/utility/addressof.hpp:
	* src/boost/utility/base_from_member.hpp:
	* src/boost/utility/compare_pointees.hpp:
	* src/boost/utility/detail/in_place_factory_prefix.hpp:
	* src/boost/utility/detail/in_place_factory_suffix.hpp:
	* src/boost/utility/detail/result_of_iterate.hpp:
	* src/boost/utility/enable_if.hpp:
	* src/boost/utility/in_place_factory.hpp:
	* src/boost/utility/result_of.hpp:
	* src/boost/utility/typed_in_place_factory.hpp:
	* src/boost/utility/value_init.hpp:
	* src/boost/weak_ptr.hpp:
	* src/core/boost/algorithm/string.hpp:
	* src/core/boost/algorithm/string/case_conv.hpp:
	* src/core/boost/algorithm/string/classification.hpp:
	* src/core/boost/algorithm/string/compare.hpp:
	* src/core/boost/algorithm/string/concept.hpp:
	* src/core/boost/algorithm/string/config.hpp:
	* src/core/boost/algorithm/string/constants.hpp:
	* src/core/boost/algorithm/string/detail/case_conv.hpp:
	* src/core/boost/algorithm/string/detail/classification.hpp:
	* src/core/boost/algorithm/string/detail/find_format.hpp:
	* src/core/boost/algorithm/string/detail/find_format_all.hpp:
	* src/core/boost/algorithm/string/detail/find_format_store.hpp:
	* src/core/boost/algorithm/string/detail/find_iterator.hpp:
	* src/core/boost/algorithm/string/detail/finder.hpp:
	* src/core/boost/algorithm/string/detail/finder_regex.hpp:
	* src/core/boost/algorithm/string/detail/formatter.hpp:
	* src/core/boost/algorithm/string/detail/formatter_regex.hpp:
	* src/core/boost/algorithm/string/detail/predicate.hpp:
	* src/core/boost/algorithm/string/detail/replace_storage.hpp:
	* src/core/boost/algorithm/string/detail/sequence.hpp:
	* src/core/boost/algorithm/string/detail/trim.hpp:
	* src/core/boost/algorithm/string/detail/util.hpp:
	* src/core/boost/algorithm/string/erase.hpp:
	* src/core/boost/algorithm/string/find.hpp:
	* src/core/boost/algorithm/string/find_format.hpp:
	* src/core/boost/algorithm/string/find_iterator.hpp:
	* src/core/boost/algorithm/string/finder.hpp:
	* src/core/boost/algorithm/string/formatter.hpp:
	* src/core/boost/algorithm/string/iter_find.hpp:
	* src/core/boost/algorithm/string/join.hpp:
	* src/core/boost/algorithm/string/predicate.hpp:
	* src/core/boost/algorithm/string/predicate_facade.hpp:
	* src/core/boost/algorithm/string/replace.hpp:
	* src/core/boost/algorithm/string/sequence_traits.hpp:
	* src/core/boost/algorithm/string/split.hpp:
	* src/core/boost/algorithm/string/std/list_traits.hpp:
	* src/core/boost/algorithm/string/std/rope_traits.hpp:
	* src/core/boost/algorithm/string/std/slist_traits.hpp:
	* src/core/boost/algorithm/string/std/string_traits.hpp:
	* src/core/boost/algorithm/string/std_containers_traits.hpp:
	* src/core/boost/algorithm/string/trim.hpp:
	* src/core/boost/algorithm/string/yes_no_type.hpp:
	* src/core/boost/assert.hpp:
	* src/core/boost/bind.hpp:
	* src/core/boost/bind/apply.hpp:
	* src/core/boost/bind/arg.hpp:
	* src/core/boost/bind/bind_cc.hpp:
	* src/core/boost/bind/bind_mf_cc.hpp:
	* src/core/boost/bind/bind_template.hpp:
	* src/core/boost/bind/make_adaptable.hpp:
	* src/core/boost/bind/mem_fn_cc.hpp:
	* src/core/boost/bind/mem_fn_template.hpp:
	* src/core/boost/bind/mem_fn_vw.hpp:
	* src/core/boost/bind/placeholders.hpp:
	* src/core/boost/bind/protect.hpp:
	* src/core/boost/bind/storage.hpp:
	* src/core/boost/cast.hpp:
	* src/core/boost/checked_delete.hpp:
	* src/core/boost/concept_archetype.hpp:
	* src/core/boost/concept_check.hpp:
	* src/core/boost/config.hpp:
	* src/core/boost/config/abi/borland_prefix.hpp:
	* src/core/boost/config/abi/borland_suffix.hpp:
	* src/core/boost/config/abi/msvc_prefix.hpp:
	* src/core/boost/config/abi/msvc_suffix.hpp:
	* src/core/boost/config/abi_prefix.hpp:
	* src/core/boost/config/abi_suffix.hpp:
	* src/core/boost/config/auto_link.hpp:
	* src/core/boost/config/compiler/borland.hpp:
	* src/core/boost/config/compiler/comeau.hpp:
	* src/core/boost/config/compiler/common_edg.hpp:
	* src/core/boost/config/compiler/compaq_cxx.hpp:
	* src/core/boost/config/compiler/digitalmars.hpp:
	* src/core/boost/config/compiler/gcc.hpp:
	* src/core/boost/config/compiler/gcc_xml.hpp:
	* src/core/boost/config/compiler/greenhills.hpp:
	* src/core/boost/config/compiler/hp_acc.hpp:
	* src/core/boost/config/compiler/intel.hpp:
	* src/core/boost/config/compiler/kai.hpp:
	* src/core/boost/config/compiler/metrowerks.hpp:
	* src/core/boost/config/compiler/mpw.hpp:
	* src/core/boost/config/compiler/sgi_mipspro.hpp:
	* src/core/boost/config/compiler/sunpro_cc.hpp:
	* src/core/boost/config/compiler/vacpp.hpp:
	* src/core/boost/config/compiler/visualc.hpp:
	* src/core/boost/config/no_tr1/complex.hpp:
	* src/core/boost/config/no_tr1/functional.hpp:
	* src/core/boost/config/no_tr1/memory.hpp:
	* src/core/boost/config/no_tr1/utility.hpp:
	* src/core/boost/config/platform/aix.hpp:
	* src/core/boost/config/platform/amigaos.hpp:
	* src/core/boost/config/platform/beos.hpp:
	* src/core/boost/config/platform/bsd.hpp:
	* src/core/boost/config/platform/cygwin.hpp:
	* src/core/boost/config/platform/hpux.hpp:
	* src/core/boost/config/platform/irix.hpp:
	* src/core/boost/config/platform/linux.hpp:
	* src/core/boost/config/platform/macos.hpp:
	* src/core/boost/config/platform/qnxnto.hpp:
	* src/core/boost/config/platform/solaris.hpp:
	* src/core/boost/config/platform/win32.hpp:
	* src/core/boost/config/posix_features.hpp:
	* src/core/boost/config/requires_threads.hpp:
	* src/core/boost/config/select_compiler_config.hpp:
	* src/core/boost/config/select_platform_config.hpp:
	* src/core/boost/config/select_stdlib_config.hpp:
	* src/core/boost/config/stdlib/dinkumware.hpp:
	* src/core/boost/config/stdlib/libcomo.hpp:
	* src/core/boost/config/stdlib/libstdcpp3.hpp:
	* src/core/boost/config/stdlib/modena.hpp:
	* src/core/boost/config/stdlib/msl.hpp:
	* src/core/boost/config/stdlib/roguewave.hpp:
	* src/core/boost/config/stdlib/sgi.hpp:
	* src/core/boost/config/stdlib/stlport.hpp:
	* src/core/boost/config/stdlib/vacpp.hpp:
	* src/core/boost/config/suffix.hpp:
	* src/core/boost/config/user.hpp:
	* src/core/boost/copyright:
	* src/core/boost/detail/algorithm.hpp:
	* src/core/boost/detail/allocator_utilities.hpp:
	* src/core/boost/detail/atomic_count.hpp:
	* src/core/boost/detail/atomic_count_gcc.hpp:
	* src/core/boost/detail/atomic_count_pthreads.hpp:
	* src/core/boost/detail/atomic_count_win32.hpp:
	* src/core/boost/detail/bad_weak_ptr.hpp:
	* src/core/boost/detail/binary_search.hpp:
	* src/core/boost/detail/call_traits.hpp:
	* src/core/boost/detail/catch_exceptions.hpp:
	* src/core/boost/detail/compressed_pair.hpp:
	* src/core/boost/detail/dynamic_bitset.hpp:
	* src/core/boost/detail/endian.hpp:
	* src/core/boost/detail/indirect_traits.hpp:
	* src/core/boost/detail/interlocked.hpp:
	* src/core/boost/detail/is_function_ref_tester.hpp:
	* src/core/boost/detail/is_incrementable.hpp:
	* src/core/boost/detail/is_xxx.hpp:
	* src/core/boost/detail/iterator.hpp:
	* src/core/boost/detail/lightweight_mutex.hpp:
	* src/core/boost/detail/lightweight_test.hpp:
	* src/core/boost/detail/limits.hpp:
	* src/core/boost/detail/lwm_nop.hpp:
	* src/core/boost/detail/lwm_pthreads.hpp:
	* src/core/boost/detail/lwm_win32_cs.hpp:
	* src/core/boost/detail/named_template_params.hpp:
	* src/core/boost/detail/no_exceptions_support.hpp:
	* src/core/boost/detail/none_t.hpp:
	* src/core/boost/detail/numeric_traits.hpp:
	* src/core/boost/detail/ob_call_traits.hpp:
	* src/core/boost/detail/ob_compressed_pair.hpp:
	* src/core/boost/detail/quick_allocator.hpp:
	* src/core/boost/detail/reference_content.hpp:
	* src/core/boost/detail/select_type.hpp:
	* src/core/boost/detail/shared_array_nmt.hpp:
	* src/core/boost/detail/shared_count.hpp:
	* src/core/boost/detail/shared_ptr_nmt.hpp:
	* src/core/boost/detail/sp_counted_base.hpp:
	* src/core/boost/detail/sp_counted_base_cw_ppc.hpp:
	* src/core/boost/detail/sp_counted_base_cw_x86.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_ia64.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_ppc.hpp:
	* src/core/boost/detail/sp_counted_base_gcc_x86.hpp:
	* src/core/boost/detail/sp_counted_base_nt.hpp:
	* src/core/boost/detail/sp_counted_base_pt.hpp:
	* src/core/boost/detail/sp_counted_base_w32.hpp:
	* src/core/boost/detail/sp_counted_impl.hpp:
	* src/core/boost/detail/templated_streams.hpp:
	* src/core/boost/detail/utf8_codecvt_facet.hpp:
	* src/core/boost/detail/workaround.hpp:
	* src/core/boost/foreach.hpp:
	* src/core/boost/function.hpp:
	* src/core/boost/function/detail/function_iterate.hpp:
	* src/core/boost/function/detail/maybe_include.hpp:
	* src/core/boost/function/detail/prologue.hpp:
	* src/core/boost/function/function0.hpp:
	* src/core/boost/function/function1.hpp:
	* src/core/boost/function/function10.hpp:
	* src/core/boost/function/function2.hpp:
	* src/core/boost/function/function3.hpp:
	* src/core/boost/function/function4.hpp:
	* src/core/boost/function/function5.hpp:
	* src/core/boost/function/function6.hpp:
	* src/core/boost/function/function7.hpp:
	* src/core/boost/function/function8.hpp:
	* src/core/boost/function/function9.hpp:
	* src/core/boost/function/function_base.hpp:
	* src/core/boost/function/function_template.hpp:
	* src/core/boost/function_equal.hpp:
	* src/core/boost/get_pointer.hpp:
	* src/core/boost/implicit_cast.hpp:
	* src/core/boost/intrusive_ptr.hpp:
	* src/core/boost/iterator.hpp:
	* src/core/boost/iterator/counting_iterator.hpp:
	* src/core/boost/iterator/detail/any_conversion_eater.hpp:
	* src/core/boost/iterator/detail/config_def.hpp:
	* src/core/boost/iterator/detail/config_undef.hpp:
	* src/core/boost/iterator/detail/enable_if.hpp:
	* src/core/boost/iterator/detail/facade_iterator_category.hpp:
	* src/core/boost/iterator/detail/minimum_category.hpp:
	* src/core/boost/iterator/filter_iterator.hpp:
	* src/core/boost/iterator/indirect_iterator.hpp:
	* src/core/boost/iterator/interoperable.hpp:
	* src/core/boost/iterator/is_lvalue_iterator.hpp:
	* src/core/boost/iterator/is_readable_iterator.hpp:
	* src/core/boost/iterator/iterator_adaptor.hpp:
	* src/core/boost/iterator/iterator_archetypes.hpp:
	* src/core/boost/iterator/iterator_categories.hpp:
	* src/core/boost/iterator/iterator_concepts.hpp:
	* src/core/boost/iterator/iterator_facade.hpp:
	* src/core/boost/iterator/iterator_traits.hpp:
	* src/core/boost/iterator/new_iterator_tests.hpp:
	* src/core/boost/iterator/permutation_iterator.hpp:
	* src/core/boost/iterator/reverse_iterator.hpp:
	* src/core/boost/iterator/transform_iterator.hpp:
	* src/core/boost/iterator/zip_iterator.hpp:
	* src/core/boost/lexical_cast.hpp:
	* src/core/boost/mem_fn.hpp:
	* src/core/boost/mpl/O1_size.hpp:
	* src/core/boost/mpl/O1_size_fwd.hpp:
	* src/core/boost/mpl/accumulate.hpp:
	* src/core/boost/mpl/advance.hpp:
	* src/core/boost/mpl/advance_fwd.hpp:
	* src/core/boost/mpl/alias.hpp:
	* src/core/boost/mpl/always.hpp:
	* src/core/boost/mpl/and.hpp:
	* src/core/boost/mpl/apply.hpp:
	* src/core/boost/mpl/apply_fwd.hpp:
	* src/core/boost/mpl/apply_wrap.hpp:
	* src/core/boost/mpl/arg.hpp:
	* src/core/boost/mpl/arg_fwd.hpp:
	* src/core/boost/mpl/arithmetic.hpp:
	* src/core/boost/mpl/as_sequence.hpp:
	* src/core/boost/mpl/assert.hpp:
	* src/core/boost/mpl/at.hpp:
	* src/core/boost/mpl/at_fwd.hpp:
	* src/core/boost/mpl/aux_/O1_size_impl.hpp:
	* src/core/boost/mpl/aux_/adl_barrier.hpp:
	* src/core/boost/mpl/aux_/advance_backward.hpp:
	* src/core/boost/mpl/aux_/advance_forward.hpp:
	* src/core/boost/mpl/aux_/apply_1st.hpp:
	* src/core/boost/mpl/aux_/arg_typedef.hpp:
	* src/core/boost/mpl/aux_/arithmetic_op.hpp:
	* src/core/boost/mpl/aux_/arity.hpp:
	* src/core/boost/mpl/aux_/arity_spec.hpp:
	* src/core/boost/mpl/aux_/at_impl.hpp:
	* src/core/boost/mpl/aux_/back_impl.hpp:
	* src/core/boost/mpl/aux_/basic_bind.hpp:
	* src/core/boost/mpl/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/aux_/clear_impl.hpp:
	* src/core/boost/mpl/aux_/common_name_wknd.hpp:
	* src/core/boost/mpl/aux_/comparison_op.hpp:
	* src/core/boost/mpl/aux_/config/adl.hpp:
	* src/core/boost/mpl/aux_/config/arrays.hpp:
	* src/core/boost/mpl/aux_/config/bind.hpp:
	* src/core/boost/mpl/aux_/config/compiler.hpp:
	* src/core/boost/mpl/aux_/config/ctps.hpp:
	* src/core/boost/mpl/aux_/config/dependent_nttp.hpp:
	* src/core/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp:
	* src/core/boost/mpl/aux_/config/dtp.hpp:
	* src/core/boost/mpl/aux_/config/eti.hpp:
	* src/core/boost/mpl/aux_/config/forwarding.hpp:
	* src/core/boost/mpl/aux_/config/gcc.hpp:
	* src/core/boost/mpl/aux_/config/has_apply.hpp:
	* src/core/boost/mpl/aux_/config/has_xxx.hpp:
	* src/core/boost/mpl/aux_/config/integral.hpp:
	* src/core/boost/mpl/aux_/config/intel.hpp:
	* src/core/boost/mpl/aux_/config/lambda.hpp:
	* src/core/boost/mpl/aux_/config/msvc.hpp:
	* src/core/boost/mpl/aux_/config/msvc_typename.hpp:
	* src/core/boost/mpl/aux_/config/nttp.hpp:
	* src/core/boost/mpl/aux_/config/operators.hpp:
	* src/core/boost/mpl/aux_/config/overload_resolution.hpp:
	* src/core/boost/mpl/aux_/config/preprocessor.hpp:
	* src/core/boost/mpl/aux_/config/static_constant.hpp:
	* src/core/boost/mpl/aux_/config/ttp.hpp:
	* src/core/boost/mpl/aux_/config/typeof.hpp:
	* src/core/boost/mpl/aux_/config/use_preprocessed.hpp:
	* src/core/boost/mpl/aux_/config/workaround.hpp:
	* src/core/boost/mpl/aux_/contains_impl.hpp:
	* src/core/boost/mpl/aux_/count_args.hpp:
	* src/core/boost/mpl/aux_/count_impl.hpp:
	* src/core/boost/mpl/aux_/empty_impl.hpp:
	* src/core/boost/mpl/aux_/erase_impl.hpp:
	* src/core/boost/mpl/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/aux_/filter_iter.hpp:
	* src/core/boost/mpl/aux_/find_if_pred.hpp:
	* src/core/boost/mpl/aux_/fold_impl.hpp:
	* src/core/boost/mpl/aux_/fold_impl_body.hpp:
	* src/core/boost/mpl/aux_/fold_op.hpp:
	* src/core/boost/mpl/aux_/fold_pred.hpp:
	* src/core/boost/mpl/aux_/front_impl.hpp:
	* src/core/boost/mpl/aux_/full_lambda.hpp:
	* src/core/boost/mpl/aux_/has_apply.hpp:
	* src/core/boost/mpl/aux_/has_begin.hpp:
	* src/core/boost/mpl/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/aux_/has_rebind.hpp:
	* src/core/boost/mpl/aux_/has_size.hpp:
	* src/core/boost/mpl/aux_/has_tag.hpp:
	* src/core/boost/mpl/aux_/has_type.hpp:
	* src/core/boost/mpl/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/aux_/insert_impl.hpp:
	* src/core/boost/mpl/aux_/insert_range_impl.hpp:
	* src/core/boost/mpl/aux_/inserter_algorithm.hpp:
	* src/core/boost/mpl/aux_/integral_wrapper.hpp:
	* src/core/boost/mpl/aux_/is_msvc_eti_arg.hpp:
	* src/core/boost/mpl/aux_/iter_apply.hpp:
	* src/core/boost/mpl/aux_/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/iter_push_front.hpp:
	* src/core/boost/mpl/aux_/joint_iter.hpp:
	* src/core/boost/mpl/aux_/lambda_arity_param.hpp:
	* src/core/boost/mpl/aux_/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/lambda_spec.hpp:
	* src/core/boost/mpl/aux_/lambda_support.hpp:
	* src/core/boost/mpl/aux_/largest_int.hpp:
	* src/core/boost/mpl/aux_/logical_op.hpp:
	* src/core/boost/mpl/aux_/msvc_dtw.hpp:
	* src/core/boost/mpl/aux_/msvc_eti_base.hpp:
	* src/core/boost/mpl/aux_/msvc_is_class.hpp:
	* src/core/boost/mpl/aux_/msvc_never_true.hpp:
	* src/core/boost/mpl/aux_/msvc_type.hpp:
	* src/core/boost/mpl/aux_/na.hpp:
	* src/core/boost/mpl/aux_/na_assert.hpp:
	* src/core/boost/mpl/aux_/na_fwd.hpp:
	* src/core/boost/mpl/aux_/na_spec.hpp:
	* src/core/boost/mpl/aux_/nested_type_wknd.hpp:
	* src/core/boost/mpl/aux_/nttp_decl.hpp:
	* src/core/boost/mpl/aux_/numeric_cast_utils.hpp:
	* src/core/boost/mpl/aux_/numeric_op.hpp:
	* src/core/boost/mpl/aux_/order_impl.hpp:
	* src/core/boost/mpl/aux_/overload_names.hpp:
	* src/core/boost/mpl/aux_/partition_op.hpp:
	* src/core/boost/mpl/aux_/pop_back_impl.hpp:
	* src/core/boost/mpl/aux_/pop_front_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/bcc551/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/dmc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/gcc/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc60/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/msvc70/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/mwcw/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ctps/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/no_ttp/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/advance_backward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/advance_forward.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/and.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/arg.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/basic_bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bind.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bind_fwd.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitand.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/bitxor.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/deque.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/divides.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/full_lambda.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/greater.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/greater_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/inherit.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/less.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/less_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/list.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/list_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/map.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/minus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/modulus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/not_equal_to.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/or.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/placeholders.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/plus.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/quote.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/set.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/set_c.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/shift_left.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/shift_right.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/template_arity.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/times.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/unpack_args.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/vector.hpp:
	* src/core/boost/mpl/aux_/preprocessed/plain/vector_c.hpp:
	* src/core/boost/mpl/aux_/preprocessor/add.hpp:
	* src/core/boost/mpl/aux_/preprocessor/def_params_tail.hpp:
	* src/core/boost/mpl/aux_/preprocessor/default_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/enum.hpp:
	* src/core/boost/mpl/aux_/preprocessor/ext_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/filter_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/is_seq.hpp:
	* src/core/boost/mpl/aux_/preprocessor/params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/partial_spec_params.hpp:
	* src/core/boost/mpl/aux_/preprocessor/range.hpp:
	* src/core/boost/mpl/aux_/preprocessor/repeat.hpp:
	* src/core/boost/mpl/aux_/preprocessor/sub.hpp:
	* src/core/boost/mpl/aux_/preprocessor/token_equal.hpp:
	* src/core/boost/mpl/aux_/preprocessor/tuple.hpp:
	* src/core/boost/mpl/aux_/ptr_to_ref.hpp:
	* src/core/boost/mpl/aux_/push_back_impl.hpp:
	* src/core/boost/mpl/aux_/push_front_impl.hpp:
	* src/core/boost/mpl/aux_/range_c/O1_size.hpp:
	* src/core/boost/mpl/aux_/range_c/back.hpp:
	* src/core/boost/mpl/aux_/range_c/empty.hpp:
	* src/core/boost/mpl/aux_/range_c/front.hpp:
	* src/core/boost/mpl/aux_/range_c/iterator.hpp:
	* src/core/boost/mpl/aux_/range_c/size.hpp:
	* src/core/boost/mpl/aux_/range_c/tag.hpp:
	* src/core/boost/mpl/aux_/reverse_fold_impl.hpp:
	* src/core/boost/mpl/aux_/reverse_fold_impl_body.hpp:
	* src/core/boost/mpl/aux_/reverse_iter_fold_impl.hpp:
	* src/core/boost/mpl/aux_/sequence_wrapper.hpp:
	* src/core/boost/mpl/aux_/shift_op.hpp:
	* src/core/boost/mpl/aux_/single_element_iter.hpp:
	* src/core/boost/mpl/aux_/size_impl.hpp:
	* src/core/boost/mpl/aux_/sort_impl.hpp:
	* src/core/boost/mpl/aux_/static_cast.hpp:
	* src/core/boost/mpl/aux_/template_arity.hpp:
	* src/core/boost/mpl/aux_/template_arity_fwd.hpp:
	* src/core/boost/mpl/aux_/test.hpp:
	* src/core/boost/mpl/aux_/test/assert.hpp:
	* src/core/boost/mpl/aux_/test/data.hpp:
	* src/core/boost/mpl/aux_/test/test_case.hpp:
	* src/core/boost/mpl/aux_/traits_lambda_spec.hpp:
	* src/core/boost/mpl/aux_/transform_iter.hpp:
	* src/core/boost/mpl/aux_/type_wrapper.hpp:
	* src/core/boost/mpl/aux_/unwrap.hpp:
	* src/core/boost/mpl/aux_/value_wknd.hpp:
	* src/core/boost/mpl/aux_/yes_no.hpp:
	* src/core/boost/mpl/back.hpp:
	* src/core/boost/mpl/back_fwd.hpp:
	* src/core/boost/mpl/back_inserter.hpp:
	* src/core/boost/mpl/base.hpp:
	* src/core/boost/mpl/begin.hpp:
	* src/core/boost/mpl/begin_end.hpp:
	* src/core/boost/mpl/begin_end_fwd.hpp:
	* src/core/boost/mpl/bind.hpp:
	* src/core/boost/mpl/bind_fwd.hpp:
	* src/core/boost/mpl/bitand.hpp:
	* src/core/boost/mpl/bitor.hpp:
	* src/core/boost/mpl/bitwise.hpp:
	* src/core/boost/mpl/bitxor.hpp:
	* src/core/boost/mpl/bool.hpp:
	* src/core/boost/mpl/bool_fwd.hpp:
	* src/core/boost/mpl/clear.hpp:
	* src/core/boost/mpl/clear_fwd.hpp:
	* src/core/boost/mpl/comparison.hpp:
	* src/core/boost/mpl/contains.hpp:
	* src/core/boost/mpl/contains_fwd.hpp:
	* src/core/boost/mpl/copy.hpp:
	* src/core/boost/mpl/copy_if.hpp:
	* src/core/boost/mpl/count.hpp:
	* src/core/boost/mpl/count_fwd.hpp:
	* src/core/boost/mpl/count_if.hpp:
	* src/core/boost/mpl/deque.hpp:
	* src/core/boost/mpl/deref.hpp:
	* src/core/boost/mpl/distance.hpp:
	* src/core/boost/mpl/distance_fwd.hpp:
	* src/core/boost/mpl/divides.hpp:
	* src/core/boost/mpl/empty.hpp:
	* src/core/boost/mpl/empty_base.hpp:
	* src/core/boost/mpl/empty_fwd.hpp:
	* src/core/boost/mpl/empty_sequence.hpp:
	* src/core/boost/mpl/end.hpp:
	* src/core/boost/mpl/equal.hpp:
	* src/core/boost/mpl/equal_to.hpp:
	* src/core/boost/mpl/erase.hpp:
	* src/core/boost/mpl/erase_fwd.hpp:
	* src/core/boost/mpl/erase_key.hpp:
	* src/core/boost/mpl/erase_key_fwd.hpp:
	* src/core/boost/mpl/eval_if.hpp:
	* src/core/boost/mpl/filter_view.hpp:
	* src/core/boost/mpl/find.hpp:
	* src/core/boost/mpl/find_if.hpp:
	* src/core/boost/mpl/fold.hpp:
	* src/core/boost/mpl/for_each.hpp:
	* src/core/boost/mpl/front.hpp:
	* src/core/boost/mpl/front_fwd.hpp:
	* src/core/boost/mpl/front_inserter.hpp:
	* src/core/boost/mpl/greater.hpp:
	* src/core/boost/mpl/greater_equal.hpp:
	* src/core/boost/mpl/has_key.hpp:
	* src/core/boost/mpl/has_key_fwd.hpp:
	* src/core/boost/mpl/has_xxx.hpp:
	* src/core/boost/mpl/identity.hpp:
	* src/core/boost/mpl/if.hpp:
	* src/core/boost/mpl/index_if.hpp:
	* src/core/boost/mpl/index_of.hpp:
	* src/core/boost/mpl/inherit.hpp:
	* src/core/boost/mpl/inherit_linearly.hpp:
	* src/core/boost/mpl/insert.hpp:
	* src/core/boost/mpl/insert_fwd.hpp:
	* src/core/boost/mpl/insert_range.hpp:
	* src/core/boost/mpl/insert_range_fwd.hpp:
	* src/core/boost/mpl/inserter.hpp:
	* src/core/boost/mpl/int.hpp:
	* src/core/boost/mpl/int_fwd.hpp:
	* src/core/boost/mpl/integral_c.hpp:
	* src/core/boost/mpl/integral_c_fwd.hpp:
	* src/core/boost/mpl/integral_c_tag.hpp:
	* src/core/boost/mpl/is_placeholder.hpp:
	* src/core/boost/mpl/is_sequence.hpp:
	* src/core/boost/mpl/iter_fold.hpp:
	* src/core/boost/mpl/iter_fold_if.hpp:
	* src/core/boost/mpl/iterator_category.hpp:
	* src/core/boost/mpl/iterator_range.hpp:
	* src/core/boost/mpl/iterator_tags.hpp:
	* src/core/boost/mpl/joint_view.hpp:
	* src/core/boost/mpl/key_type.hpp:
	* src/core/boost/mpl/key_type_fwd.hpp:
	* src/core/boost/mpl/lambda.hpp:
	* src/core/boost/mpl/lambda_fwd.hpp:
	* src/core/boost/mpl/less.hpp:
	* src/core/boost/mpl/less_equal.hpp:
	* src/core/boost/mpl/limits/arity.hpp:
	* src/core/boost/mpl/limits/list.hpp:
	* src/core/boost/mpl/limits/map.hpp:
	* src/core/boost/mpl/limits/set.hpp:
	* src/core/boost/mpl/limits/unrolling.hpp:
	* src/core/boost/mpl/limits/vector.hpp:
	* src/core/boost/mpl/list.hpp:
	* src/core/boost/mpl/list/aux_/O1_size.hpp:
	* src/core/boost/mpl/list/aux_/begin_end.hpp:
	* src/core/boost/mpl/list/aux_/clear.hpp:
	* src/core/boost/mpl/list/aux_/empty.hpp:
	* src/core/boost/mpl/list/aux_/front.hpp:
	* src/core/boost/mpl/list/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/list/aux_/item.hpp:
	* src/core/boost/mpl/list/aux_/iterator.hpp:
	* src/core/boost/mpl/list/aux_/numbered.hpp:
	* src/core/boost/mpl/list/aux_/numbered_c.hpp:
	* src/core/boost/mpl/list/aux_/pop_front.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list10.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list10_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list20.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list20_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list30.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list30_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list40.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list40_c.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list50.hpp:
	* src/core/boost/mpl/list/aux_/preprocessed/plain/list50_c.hpp:
	* src/core/boost/mpl/list/aux_/push_back.hpp:
	* src/core/boost/mpl/list/aux_/push_front.hpp:
	* src/core/boost/mpl/list/aux_/size.hpp:
	* src/core/boost/mpl/list/aux_/tag.hpp:
	* src/core/boost/mpl/list/list0.hpp:
	* src/core/boost/mpl/list/list0_c.hpp:
	* src/core/boost/mpl/list/list10.hpp:
	* src/core/boost/mpl/list/list10_c.hpp:
	* src/core/boost/mpl/list/list20.hpp:
	* src/core/boost/mpl/list/list20_c.hpp:
	* src/core/boost/mpl/list/list30.hpp:
	* src/core/boost/mpl/list/list30_c.hpp:
	* src/core/boost/mpl/list/list40.hpp:
	* src/core/boost/mpl/list/list40_c.hpp:
	* src/core/boost/mpl/list/list50.hpp:
	* src/core/boost/mpl/list/list50_c.hpp:
	* src/core/boost/mpl/list_c.hpp:
	* src/core/boost/mpl/logical.hpp:
	* src/core/boost/mpl/long.hpp:
	* src/core/boost/mpl/long_fwd.hpp:
	* src/core/boost/mpl/lower_bound.hpp:
	* src/core/boost/mpl/map.hpp:
	* src/core/boost/mpl/map/aux_/at_impl.hpp:
	* src/core/boost/mpl/map/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/map/aux_/clear_impl.hpp:
	* src/core/boost/mpl/map/aux_/contains_impl.hpp:
	* src/core/boost/mpl/map/aux_/empty_impl.hpp:
	* src/core/boost/mpl/map/aux_/erase_impl.hpp:
	* src/core/boost/mpl/map/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/map/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/map/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/map/aux_/insert_impl.hpp:
	* src/core/boost/mpl/map/aux_/item.hpp:
	* src/core/boost/mpl/map/aux_/iterator.hpp:
	* src/core/boost/mpl/map/aux_/key_type_impl.hpp:
	* src/core/boost/mpl/map/aux_/map0.hpp:
	* src/core/boost/mpl/map/aux_/numbered.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/no_ctps/map50.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/plain/map50.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map10.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map20.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map30.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map40.hpp:
	* src/core/boost/mpl/map/aux_/preprocessed/typeof_based/map50.hpp:
	* src/core/boost/mpl/map/aux_/size_impl.hpp:
	* src/core/boost/mpl/map/aux_/tag.hpp:
	* src/core/boost/mpl/map/aux_/value_type_impl.hpp:
	* src/core/boost/mpl/map/map0.hpp:
	* src/core/boost/mpl/map/map10.hpp:
	* src/core/boost/mpl/map/map20.hpp:
	* src/core/boost/mpl/map/map30.hpp:
	* src/core/boost/mpl/map/map40.hpp:
	* src/core/boost/mpl/map/map50.hpp:
	* src/core/boost/mpl/math/fixed_c.hpp:
	* src/core/boost/mpl/math/is_even.hpp:
	* src/core/boost/mpl/math/rational_c.hpp:
	* src/core/boost/mpl/max.hpp:
	* src/core/boost/mpl/max_element.hpp:
	* src/core/boost/mpl/min.hpp:
	* src/core/boost/mpl/min_element.hpp:
	* src/core/boost/mpl/min_max.hpp:
	* src/core/boost/mpl/minus.hpp:
	* src/core/boost/mpl/modulus.hpp:
	* src/core/boost/mpl/multiplies.hpp:
	* src/core/boost/mpl/multiset/aux_/count_impl.hpp:
	* src/core/boost/mpl/multiset/aux_/insert_impl.hpp:
	* src/core/boost/mpl/multiset/aux_/item.hpp:
	* src/core/boost/mpl/multiset/aux_/multiset0.hpp:
	* src/core/boost/mpl/multiset/aux_/tag.hpp:
	* src/core/boost/mpl/multiset/multiset0.hpp:
	* src/core/boost/mpl/negate.hpp:
	* src/core/boost/mpl/next.hpp:
	* src/core/boost/mpl/next_prior.hpp:
	* src/core/boost/mpl/not.hpp:
	* src/core/boost/mpl/not_equal_to.hpp:
	* src/core/boost/mpl/numeric_cast.hpp:
	* src/core/boost/mpl/or.hpp:
	* src/core/boost/mpl/order.hpp:
	* src/core/boost/mpl/order_fwd.hpp:
	* src/core/boost/mpl/pair.hpp:
	* src/core/boost/mpl/pair_view.hpp:
	* src/core/boost/mpl/partition.hpp:
	* src/core/boost/mpl/placeholders.hpp:
	* src/core/boost/mpl/plus.hpp:
	* src/core/boost/mpl/pop_back.hpp:
	* src/core/boost/mpl/pop_back_fwd.hpp:
	* src/core/boost/mpl/pop_front.hpp:
	* src/core/boost/mpl/pop_front_fwd.hpp:
	* src/core/boost/mpl/print.hpp:
	* src/core/boost/mpl/prior.hpp:
	* src/core/boost/mpl/protect.hpp:
	* src/core/boost/mpl/push_back.hpp:
	* src/core/boost/mpl/push_back_fwd.hpp:
	* src/core/boost/mpl/push_front.hpp:
	* src/core/boost/mpl/push_front_fwd.hpp:
	* src/core/boost/mpl/quote.hpp:
	* src/core/boost/mpl/range_c.hpp:
	* src/core/boost/mpl/remove.hpp:
	* src/core/boost/mpl/remove_if.hpp:
	* src/core/boost/mpl/replace.hpp:
	* src/core/boost/mpl/replace_if.hpp:
	* src/core/boost/mpl/reverse.hpp:
	* src/core/boost/mpl/reverse_fold.hpp:
	* src/core/boost/mpl/reverse_iter_fold.hpp:
	* src/core/boost/mpl/same_as.hpp:
	* src/core/boost/mpl/sequence_tag.hpp:
	* src/core/boost/mpl/sequence_tag_fwd.hpp:
	* src/core/boost/mpl/set.hpp:
	* src/core/boost/mpl/set/aux_/at_impl.hpp:
	* src/core/boost/mpl/set/aux_/begin_end_impl.hpp:
	* src/core/boost/mpl/set/aux_/clear_impl.hpp:
	* src/core/boost/mpl/set/aux_/empty_impl.hpp:
	* src/core/boost/mpl/set/aux_/erase_impl.hpp:
	* src/core/boost/mpl/set/aux_/erase_key_impl.hpp:
	* src/core/boost/mpl/set/aux_/has_key_impl.hpp:
	* src/core/boost/mpl/set/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/set/aux_/insert_impl.hpp:
	* src/core/boost/mpl/set/aux_/item.hpp:
	* src/core/boost/mpl/set/aux_/iterator.hpp:
	* src/core/boost/mpl/set/aux_/key_type_impl.hpp:
	* src/core/boost/mpl/set/aux_/numbered.hpp:
	* src/core/boost/mpl/set/aux_/numbered_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set10.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set10_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set20.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set20_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set30.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set30_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set40.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set40_c.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set50.hpp:
	* src/core/boost/mpl/set/aux_/preprocessed/plain/set50_c.hpp:
	* src/core/boost/mpl/set/aux_/set0.hpp:
	* src/core/boost/mpl/set/aux_/size_impl.hpp:
	* src/core/boost/mpl/set/aux_/tag.hpp:
	* src/core/boost/mpl/set/aux_/value_type_impl.hpp:
	* src/core/boost/mpl/set/set0.hpp:
	* src/core/boost/mpl/set/set0_c.hpp:
	* src/core/boost/mpl/set/set10.hpp:
	* src/core/boost/mpl/set/set10_c.hpp:
	* src/core/boost/mpl/set/set20.hpp:
	* src/core/boost/mpl/set/set20_c.hpp:
	* src/core/boost/mpl/set/set30.hpp:
	* src/core/boost/mpl/set/set30_c.hpp:
	* src/core/boost/mpl/set/set40.hpp:
	* src/core/boost/mpl/set/set40_c.hpp:
	* src/core/boost/mpl/set/set50.hpp:
	* src/core/boost/mpl/set/set50_c.hpp:
	* src/core/boost/mpl/set_c.hpp:
	* src/core/boost/mpl/shift_left.hpp:
	* src/core/boost/mpl/shift_right.hpp:
	* src/core/boost/mpl/single_view.hpp:
	* src/core/boost/mpl/size.hpp:
	* src/core/boost/mpl/size_fwd.hpp:
	* src/core/boost/mpl/size_t.hpp:
	* src/core/boost/mpl/size_t_fwd.hpp:
	* src/core/boost/mpl/sizeof.hpp:
	* src/core/boost/mpl/sort.hpp:
	* src/core/boost/mpl/stable_partition.hpp:
	* src/core/boost/mpl/switch.hpp:
	* src/core/boost/mpl/tag.hpp:
	* src/core/boost/mpl/times.hpp:
	* src/core/boost/mpl/transform.hpp:
	* src/core/boost/mpl/transform_view.hpp:
	* src/core/boost/mpl/unique.hpp:
	* src/core/boost/mpl/unpack_args.hpp:
	* src/core/boost/mpl/upper_bound.hpp:
	* src/core/boost/mpl/value_type.hpp:
	* src/core/boost/mpl/value_type_fwd.hpp:
	* src/core/boost/mpl/vector.hpp:
	* src/core/boost/mpl/vector/aux_/O1_size.hpp:
	* src/core/boost/mpl/vector/aux_/at.hpp:
	* src/core/boost/mpl/vector/aux_/back.hpp:
	* src/core/boost/mpl/vector/aux_/begin_end.hpp:
	* src/core/boost/mpl/vector/aux_/clear.hpp:
	* src/core/boost/mpl/vector/aux_/empty.hpp:
	* src/core/boost/mpl/vector/aux_/front.hpp:
	* src/core/boost/mpl/vector/aux_/include_preprocessed.hpp:
	* src/core/boost/mpl/vector/aux_/item.hpp:
	* src/core/boost/mpl/vector/aux_/iterator.hpp:
	* src/core/boost/mpl/vector/aux_/numbered.hpp:
	* src/core/boost/mpl/vector/aux_/numbered_c.hpp:
	* src/core/boost/mpl/vector/aux_/pop_back.hpp:
	* src/core/boost/mpl/vector/aux_/pop_front.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/plain/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp:
	* src/core/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp:
	* src/core/boost/mpl/vector/aux_/push_back.hpp:
	* src/core/boost/mpl/vector/aux_/push_front.hpp:
	* src/core/boost/mpl/vector/aux_/size.hpp:
	* src/core/boost/mpl/vector/aux_/tag.hpp:
	* src/core/boost/mpl/vector/aux_/vector0.hpp:
	* src/core/boost/mpl/vector/vector0.hpp:
	* src/core/boost/mpl/vector/vector0_c.hpp:
	* src/core/boost/mpl/vector/vector10.hpp:
	* src/core/boost/mpl/vector/vector10_c.hpp:
	* src/core/boost/mpl/vector/vector20.hpp:
	* src/core/boost/mpl/vector/vector20_c.hpp:
	* src/core/boost/mpl/vector/vector30.hpp:
	* src/core/boost/mpl/vector/vector30_c.hpp:
	* src/core/boost/mpl/vector/vector40.hpp:
	* src/core/boost/mpl/vector/vector40_c.hpp:
	* src/core/boost/mpl/vector/vector50.hpp:
	* src/core/boost/mpl/vector/vector50_c.hpp:
	* src/core/boost/mpl/vector_c.hpp:
	* src/core/boost/mpl/void.hpp:
	* src/core/boost/mpl/void_fwd.hpp:
	* src/core/boost/mpl/zip_view.hpp:
	* src/core/boost/next_prior.hpp:
	* src/core/boost/noncopyable.hpp:
	* src/core/boost/pointer_cast.hpp:
	* src/core/boost/preprocessor.hpp:
	* src/core/boost/preprocessor/arithmetic.hpp:
	* src/core/boost/preprocessor/arithmetic/add.hpp:
	* src/core/boost/preprocessor/arithmetic/dec.hpp:
	* src/core/boost/preprocessor/arithmetic/detail/div_base.hpp:
	* src/core/boost/preprocessor/arithmetic/div.hpp:
	* src/core/boost/preprocessor/arithmetic/inc.hpp:
	* src/core/boost/preprocessor/arithmetic/mod.hpp:
	* src/core/boost/preprocessor/arithmetic/mul.hpp:
	* src/core/boost/preprocessor/arithmetic/sub.hpp:
	* src/core/boost/preprocessor/array.hpp:
	* src/core/boost/preprocessor/array/data.hpp:
	* src/core/boost/preprocessor/array/elem.hpp:
	* src/core/boost/preprocessor/array/insert.hpp:
	* src/core/boost/preprocessor/array/pop_back.hpp:
	* src/core/boost/preprocessor/array/pop_front.hpp:
	* src/core/boost/preprocessor/array/push_back.hpp:
	* src/core/boost/preprocessor/array/push_front.hpp:
	* src/core/boost/preprocessor/array/remove.hpp:
	* src/core/boost/preprocessor/array/replace.hpp:
	* src/core/boost/preprocessor/array/reverse.hpp:
	* src/core/boost/preprocessor/array/size.hpp:
	* src/core/boost/preprocessor/assert_msg.hpp:
	* src/core/boost/preprocessor/cat.hpp:
	* src/core/boost/preprocessor/comma.hpp:
	* src/core/boost/preprocessor/comma_if.hpp:
	* src/core/boost/preprocessor/comparison.hpp:
	* src/core/boost/preprocessor/comparison/equal.hpp:
	* src/core/boost/preprocessor/comparison/greater.hpp:
	* src/core/boost/preprocessor/comparison/greater_equal.hpp:
	* src/core/boost/preprocessor/comparison/less.hpp:
	* src/core/boost/preprocessor/comparison/less_equal.hpp:
	* src/core/boost/preprocessor/comparison/not_equal.hpp:
	* src/core/boost/preprocessor/config/config.hpp:
	* src/core/boost/preprocessor/config/limits.hpp:
	* src/core/boost/preprocessor/control.hpp:
	* src/core/boost/preprocessor/control/deduce_d.hpp:
	* src/core/boost/preprocessor/control/detail/dmc/while.hpp:
	* src/core/boost/preprocessor/control/detail/edg/while.hpp:
	* src/core/boost/preprocessor/control/detail/msvc/while.hpp:
	* src/core/boost/preprocessor/control/detail/while.hpp:
	* src/core/boost/preprocessor/control/expr_if.hpp:
	* src/core/boost/preprocessor/control/expr_iif.hpp:
	* src/core/boost/preprocessor/control/if.hpp:
	* src/core/boost/preprocessor/control/iif.hpp:
	* src/core/boost/preprocessor/control/while.hpp:
	* src/core/boost/preprocessor/debug.hpp:
	* src/core/boost/preprocessor/debug/assert.hpp:
	* src/core/boost/preprocessor/debug/error.hpp:
	* src/core/boost/preprocessor/debug/line.hpp:
	* src/core/boost/preprocessor/dec.hpp:
	* src/core/boost/preprocessor/detail/auto_rec.hpp:
	* src/core/boost/preprocessor/detail/check.hpp:
	* src/core/boost/preprocessor/detail/dmc/auto_rec.hpp:
	* src/core/boost/preprocessor/detail/is_binary.hpp:
	* src/core/boost/preprocessor/detail/is_nullary.hpp:
	* src/core/boost/preprocessor/detail/is_unary.hpp:
	* src/core/boost/preprocessor/detail/null.hpp:
	* src/core/boost/preprocessor/detail/split.hpp:
	* src/core/boost/preprocessor/empty.hpp:
	* src/core/boost/preprocessor/enum.hpp:
	* src/core/boost/preprocessor/enum_params.hpp:
	* src/core/boost/preprocessor/enum_params_with_a_default.hpp:
	* src/core/boost/preprocessor/enum_params_with_defaults.hpp:
	* src/core/boost/preprocessor/enum_shifted.hpp:
	* src/core/boost/preprocessor/enum_shifted_params.hpp:
	* src/core/boost/preprocessor/expand.hpp:
	* src/core/boost/preprocessor/expr_if.hpp:
	* src/core/boost/preprocessor/facilities.hpp:
	* src/core/boost/preprocessor/facilities/apply.hpp:
	* src/core/boost/preprocessor/facilities/empty.hpp:
	* src/core/boost/preprocessor/facilities/expand.hpp:
	* src/core/boost/preprocessor/facilities/identity.hpp:
	* src/core/boost/preprocessor/facilities/intercept.hpp:
	* src/core/boost/preprocessor/facilities/is_1.hpp:
	* src/core/boost/preprocessor/facilities/is_empty.hpp:
	* src/core/boost/preprocessor/facilities/is_empty_or_1.hpp:
	* src/core/boost/preprocessor/for.hpp:
	* src/core/boost/preprocessor/identity.hpp:
	* src/core/boost/preprocessor/if.hpp:
	* src/core/boost/preprocessor/inc.hpp:
	* src/core/boost/preprocessor/iterate.hpp:
	* src/core/boost/preprocessor/iteration.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower1.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower2.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower3.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower4.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/lower5.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper1.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper2.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper3.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper4.hpp:
	* src/core/boost/preprocessor/iteration/detail/bounds/upper5.hpp:
	* src/core/boost/preprocessor/iteration/detail/finish.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward1.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward2.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward3.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward4.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/forward5.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse1.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse2.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse3.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse4.hpp:
	* src/core/boost/preprocessor/iteration/detail/iter/reverse5.hpp:
	* src/core/boost/preprocessor/iteration/detail/local.hpp:
	* src/core/boost/preprocessor/iteration/detail/rlocal.hpp:
	* src/core/boost/preprocessor/iteration/detail/self.hpp:
	* src/core/boost/preprocessor/iteration/detail/start.hpp:
	* src/core/boost/preprocessor/iteration/iterate.hpp:
	* src/core/boost/preprocessor/iteration/local.hpp:
	* src/core/boost/preprocessor/iteration/self.hpp:
	* src/core/boost/preprocessor/library.hpp:
	* src/core/boost/preprocessor/limits.hpp:
	* src/core/boost/preprocessor/list.hpp:
	* src/core/boost/preprocessor/list/adt.hpp:
	* src/core/boost/preprocessor/list/append.hpp:
	* src/core/boost/preprocessor/list/at.hpp:
	* src/core/boost/preprocessor/list/cat.hpp:
	* src/core/boost/preprocessor/list/detail/dmc/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/edg/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/edg/fold_right.hpp:
	* src/core/boost/preprocessor/list/detail/fold_left.hpp:
	* src/core/boost/preprocessor/list/detail/fold_right.hpp:
	* src/core/boost/preprocessor/list/enum.hpp:
	* src/core/boost/preprocessor/list/filter.hpp:
	* src/core/boost/preprocessor/list/first_n.hpp:
	* src/core/boost/preprocessor/list/fold_left.hpp:
	* src/core/boost/preprocessor/list/fold_right.hpp:
	* src/core/boost/preprocessor/list/for_each.hpp:
	* src/core/boost/preprocessor/list/for_each_i.hpp:
	* src/core/boost/preprocessor/list/for_each_product.hpp:
	* src/core/boost/preprocessor/list/rest_n.hpp:
	* src/core/boost/preprocessor/list/reverse.hpp:
	* src/core/boost/preprocessor/list/size.hpp:
	* src/core/boost/preprocessor/list/to_tuple.hpp:
	* src/core/boost/preprocessor/list/transform.hpp:
	* src/core/boost/preprocessor/logical.hpp:
	* src/core/boost/preprocessor/logical/and.hpp:
	* src/core/boost/preprocessor/logical/bitand.hpp:
	* src/core/boost/preprocessor/logical/bitnor.hpp:
	* src/core/boost/preprocessor/logical/bitor.hpp:
	* src/core/boost/preprocessor/logical/bitxor.hpp:
	* src/core/boost/preprocessor/logical/bool.hpp:
	* src/core/boost/preprocessor/logical/compl.hpp:
	* src/core/boost/preprocessor/logical/nor.hpp:
	* src/core/boost/preprocessor/logical/not.hpp:
	* src/core/boost/preprocessor/logical/or.hpp:
	* src/core/boost/preprocessor/logical/xor.hpp:
	* src/core/boost/preprocessor/max.hpp:
	* src/core/boost/preprocessor/min.hpp:
	* src/core/boost/preprocessor/punctuation.hpp:
	* src/core/boost/preprocessor/punctuation/comma.hpp:
	* src/core/boost/preprocessor/punctuation/comma_if.hpp:
	* src/core/boost/preprocessor/punctuation/paren.hpp:
	* src/core/boost/preprocessor/punctuation/paren_if.hpp:
	* src/core/boost/preprocessor/repeat.hpp:
	* src/core/boost/preprocessor/repeat_2nd.hpp:
	* src/core/boost/preprocessor/repeat_3rd.hpp:
	* src/core/boost/preprocessor/repeat_from_to.hpp:
	* src/core/boost/preprocessor/repeat_from_to_2nd.hpp:
	* src/core/boost/preprocessor/repeat_from_to_3rd.hpp:
	* src/core/boost/preprocessor/repetition.hpp:
	* src/core/boost/preprocessor/repetition/deduce_r.hpp:
	* src/core/boost/preprocessor/repetition/deduce_z.hpp:
	* src/core/boost/preprocessor/repetition/detail/dmc/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/edg/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/for.hpp:
	* src/core/boost/preprocessor/repetition/detail/msvc/for.hpp:
	* src/core/boost/preprocessor/repetition/enum.hpp:
	* src/core/boost/preprocessor/repetition/enum_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_params_with_a_default.hpp:
	* src/core/boost/preprocessor/repetition/enum_params_with_defaults.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_shifted_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing_binary_params.hpp:
	* src/core/boost/preprocessor/repetition/enum_trailing_params.hpp:
	* src/core/boost/preprocessor/repetition/for.hpp:
	* src/core/boost/preprocessor/repetition/repeat.hpp:
	* src/core/boost/preprocessor/repetition/repeat_from_to.hpp:
	* src/core/boost/preprocessor/selection.hpp:
	* src/core/boost/preprocessor/selection/max.hpp:
	* src/core/boost/preprocessor/selection/min.hpp:
	* src/core/boost/preprocessor/seq.hpp:
	* src/core/boost/preprocessor/seq/cat.hpp:
	* src/core/boost/preprocessor/seq/detail/split.hpp:
	* src/core/boost/preprocessor/seq/elem.hpp:
	* src/core/boost/preprocessor/seq/enum.hpp:
	* src/core/boost/preprocessor/seq/filter.hpp:
	* src/core/boost/preprocessor/seq/first_n.hpp:
	* src/core/boost/preprocessor/seq/fold_left.hpp:
	* src/core/boost/preprocessor/seq/fold_right.hpp:
	* src/core/boost/preprocessor/seq/for_each.hpp:
	* src/core/boost/preprocessor/seq/for_each_i.hpp:
	* src/core/boost/preprocessor/seq/for_each_product.hpp:
	* src/core/boost/preprocessor/seq/insert.hpp:
	* src/core/boost/preprocessor/seq/pop_back.hpp:
	* src/core/boost/preprocessor/seq/pop_front.hpp:
	* src/core/boost/preprocessor/seq/push_back.hpp:
	* src/core/boost/preprocessor/seq/push_front.hpp:
	* src/core/boost/preprocessor/seq/remove.hpp:
	* src/core/boost/preprocessor/seq/replace.hpp:
	* src/core/boost/preprocessor/seq/rest_n.hpp:
	* src/core/boost/preprocessor/seq/reverse.hpp:
	* src/core/boost/preprocessor/seq/seq.hpp:
	* src/core/boost/preprocessor/seq/size.hpp:
	* src/core/boost/preprocessor/seq/subseq.hpp:
	* src/core/boost/preprocessor/seq/to_array.hpp:
	* src/core/boost/preprocessor/seq/to_tuple.hpp:
	* src/core/boost/preprocessor/seq/transform.hpp:
	* src/core/boost/preprocessor/slot.hpp:
	* src/core/boost/preprocessor/slot/counter.hpp:
	* src/core/boost/preprocessor/slot/detail/counter.hpp:
	* src/core/boost/preprocessor/slot/detail/def.hpp:
	* src/core/boost/preprocessor/slot/detail/shared.hpp:
	* src/core/boost/preprocessor/slot/detail/slot1.hpp:
	* src/core/boost/preprocessor/slot/detail/slot2.hpp:
	* src/core/boost/preprocessor/slot/detail/slot3.hpp:
	* src/core/boost/preprocessor/slot/detail/slot4.hpp:
	* src/core/boost/preprocessor/slot/detail/slot5.hpp:
	* src/core/boost/preprocessor/slot/slot.hpp:
	* src/core/boost/preprocessor/stringize.hpp:
	* src/core/boost/preprocessor/tuple.hpp:
	* src/core/boost/preprocessor/tuple/eat.hpp:
	* src/core/boost/preprocessor/tuple/elem.hpp:
	* src/core/boost/preprocessor/tuple/rem.hpp:
	* src/core/boost/preprocessor/tuple/reverse.hpp:
	* src/core/boost/preprocessor/tuple/to_list.hpp:
	* src/core/boost/preprocessor/tuple/to_seq.hpp:
	* src/core/boost/preprocessor/while.hpp:
	* src/core/boost/preprocessor/wstringize.hpp:
	* src/core/boost/range.hpp:
	* src/core/boost/range/begin.hpp:
	* src/core/boost/range/concepts.hpp:
	* src/core/boost/range/config.hpp:
	* src/core/boost/range/const_iterator.hpp:
	* src/core/boost/range/const_reverse_iterator.hpp:
	* src/core/boost/range/detail/begin.hpp:
	* src/core/boost/range/detail/collection_traits.hpp:
	* src/core/boost/range/detail/collection_traits_detail.hpp:
	* src/core/boost/range/detail/common.hpp:
	* src/core/boost/range/detail/const_iterator.hpp:
	* src/core/boost/range/detail/difference_type.hpp:
	* src/core/boost/range/detail/empty.hpp:
	* src/core/boost/range/detail/end.hpp:
	* src/core/boost/range/detail/implementation_help.hpp:
	* src/core/boost/range/detail/iterator.hpp:
	* src/core/boost/range/detail/mfc/carray.hpp:
	* src/core/boost/range/detail/mfc/cstring.hpp:
	* src/core/boost/range/detail/remove_extent.hpp:
	* src/core/boost/range/detail/sfinae.hpp:
	* src/core/boost/range/detail/size.hpp:
	* src/core/boost/range/detail/size_type.hpp:
	* src/core/boost/range/detail/sizer.hpp:
	* src/core/boost/range/detail/value_type.hpp:
	* src/core/boost/range/detail/vc6/end.hpp:
	* src/core/boost/range/detail/vc6/size.hpp:
	* src/core/boost/range/difference_type.hpp:
	* src/core/boost/range/empty.hpp:
	* src/core/boost/range/end.hpp:
	* src/core/boost/range/functions.hpp:
	* src/core/boost/range/iterator.hpp:
	* src/core/boost/range/iterator_range.hpp:
	* src/core/boost/range/metafunctions.hpp:
	* src/core/boost/range/rbegin.hpp:
	* src/core/boost/range/rend.hpp:
	* src/core/boost/range/result_iterator.hpp:
	* src/core/boost/range/reverse_iterator.hpp:
	* src/core/boost/range/reverse_result_iterator.hpp:
	* src/core/boost/range/size.hpp:
	* src/core/boost/range/size_type.hpp:
	* src/core/boost/range/sub_range.hpp:
	* src/core/boost/range/value_type.hpp:
	* src/core/boost/ref.hpp:
	* src/core/boost/scoped_array.hpp:
	* src/core/boost/scoped_ptr.hpp:
	* src/core/boost/shared_ptr.hpp:
	* src/core/boost/smart_cast.hpp:
	* src/core/boost/smart_ptr.hpp:
	* src/core/boost/static_assert.hpp:
	* src/core/boost/static_warning.hpp:
	* src/core/boost/throw_exception.hpp:
	* src/core/boost/type_traits.hpp:
	* src/core/boost/type_traits/add_const.hpp:
	* src/core/boost/type_traits/add_cv.hpp:
	* src/core/boost/type_traits/add_pointer.hpp:
	* src/core/boost/type_traits/add_reference.hpp:
	* src/core/boost/type_traits/add_volatile.hpp:
	* src/core/boost/type_traits/aligned_storage.hpp:
	* src/core/boost/type_traits/alignment_of.hpp:
	* src/core/boost/type_traits/alignment_traits.hpp:
	* src/core/boost/type_traits/arithmetic_traits.hpp:
	* src/core/boost/type_traits/array_traits.hpp:
	* src/core/boost/type_traits/broken_compiler_spec.hpp:
	* src/core/boost/type_traits/composite_traits.hpp:
	* src/core/boost/type_traits/config.hpp:
	* src/core/boost/type_traits/conversion_traits.hpp:
	* src/core/boost/type_traits/cv_traits.hpp:
	* src/core/boost/type_traits/decay.hpp:
	* src/core/boost/type_traits/detail/bool_trait_def.hpp:
	* src/core/boost/type_traits/detail/bool_trait_undef.hpp:
	* src/core/boost/type_traits/detail/cv_traits_impl.hpp:
	* src/core/boost/type_traits/detail/false_result.hpp:
	* src/core/boost/type_traits/detail/ice_and.hpp:
	* src/core/boost/type_traits/detail/ice_eq.hpp:
	* src/core/boost/type_traits/detail/ice_not.hpp:
	* src/core/boost/type_traits/detail/ice_or.hpp:
	* src/core/boost/type_traits/detail/is_function_ptr_helper.hpp:
	* src/core/boost/type_traits/detail/is_function_ptr_tester.hpp:
	* src/core/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:
	* src/core/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp:
	* src/core/boost/type_traits/detail/size_t_trait_def.hpp:
	* src/core/boost/type_traits/detail/size_t_trait_undef.hpp:
	* src/core/boost/type_traits/detail/template_arity_spec.hpp:
	* src/core/boost/type_traits/detail/type_trait_def.hpp:
	* src/core/boost/type_traits/detail/type_trait_undef.hpp:
	* src/core/boost/type_traits/detail/wrap.hpp:
	* src/core/boost/type_traits/detail/yes_no_type.hpp:
	* src/core/boost/type_traits/extent.hpp:
	* src/core/boost/type_traits/function_traits.hpp:
	* src/core/boost/type_traits/has_nothrow_assign.hpp:
	* src/core/boost/type_traits/has_nothrow_constructor.hpp:
	* src/core/boost/type_traits/has_nothrow_copy.hpp:
	* src/core/boost/type_traits/has_nothrow_destructor.hpp:
	* src/core/boost/type_traits/has_trivial_assign.hpp:
	* src/core/boost/type_traits/has_trivial_constructor.hpp:
	* src/core/boost/type_traits/has_trivial_copy.hpp:
	* src/core/boost/type_traits/has_trivial_destructor.hpp:
	* src/core/boost/type_traits/has_virtual_destructor.hpp:
	* src/core/boost/type_traits/ice.hpp:
	* src/core/boost/type_traits/integral_constant.hpp:
	* src/core/boost/type_traits/intrinsics.hpp:
	* src/core/boost/type_traits/is_abstract.hpp:
	* src/core/boost/type_traits/is_arithmetic.hpp:
	* src/core/boost/type_traits/is_array.hpp:
	* src/core/boost/type_traits/is_base_and_derived.hpp:
	* src/core/boost/type_traits/is_base_of.hpp:
	* src/core/boost/type_traits/is_class.hpp:
	* src/core/boost/type_traits/is_compound.hpp:
	* src/core/boost/type_traits/is_const.hpp:
	* src/core/boost/type_traits/is_convertible.hpp:
	* src/core/boost/type_traits/is_empty.hpp:
	* src/core/boost/type_traits/is_enum.hpp:
	* src/core/boost/type_traits/is_float.hpp:
	* src/core/boost/type_traits/is_floating_point.hpp:
	* src/core/boost/type_traits/is_function.hpp:
	* src/core/boost/type_traits/is_fundamental.hpp:
	* src/core/boost/type_traits/is_integral.hpp:
	* src/core/boost/type_traits/is_member_function_pointer.hpp:
	* src/core/boost/type_traits/is_member_object_pointer.hpp:
	* src/core/boost/type_traits/is_member_pointer.hpp:
	* src/core/boost/type_traits/is_object.hpp:
	* src/core/boost/type_traits/is_pod.hpp:
	* src/core/boost/type_traits/is_pointer.hpp:
	* src/core/boost/type_traits/is_polymorphic.hpp:
	* src/core/boost/type_traits/is_reference.hpp:
	* src/core/boost/type_traits/is_same.hpp:
	* src/core/boost/type_traits/is_scalar.hpp:
	* src/core/boost/type_traits/is_signed.hpp:
	* src/core/boost/type_traits/is_stateless.hpp:
	* src/core/boost/type_traits/is_union.hpp:
	* src/core/boost/type_traits/is_unsigned.hpp:
	* src/core/boost/type_traits/is_void.hpp:
	* src/core/boost/type_traits/is_volatile.hpp:
	* src/core/boost/type_traits/msvc/remove_all_extents.hpp:
	* src/core/boost/type_traits/msvc/remove_bounds.hpp:
	* src/core/boost/type_traits/msvc/remove_const.hpp:
	* src/core/boost/type_traits/msvc/remove_cv.hpp:
	* src/core/boost/type_traits/msvc/remove_extent.hpp:
	* src/core/boost/type_traits/msvc/remove_pointer.hpp:
	* src/core/boost/type_traits/msvc/remove_reference.hpp:
	* src/core/boost/type_traits/msvc/remove_volatile.hpp:
	* src/core/boost/type_traits/msvc/typeof.hpp:
	* src/core/boost/type_traits/object_traits.hpp:
	* src/core/boost/type_traits/rank.hpp:
	* src/core/boost/type_traits/reference_traits.hpp:
	* src/core/boost/type_traits/remove_all_extents.hpp:
	* src/core/boost/type_traits/remove_bounds.hpp:
	* src/core/boost/type_traits/remove_const.hpp:
	* src/core/boost/type_traits/remove_cv.hpp:
	* src/core/boost/type_traits/remove_extent.hpp:
	* src/core/boost/type_traits/remove_pointer.hpp:
	* src/core/boost/type_traits/remove_reference.hpp:
	* src/core/boost/type_traits/remove_volatile.hpp:
	* src/core/boost/type_traits/same_traits.hpp:
	* src/core/boost/type_traits/transform_traits.hpp:
	* src/core/boost/type_traits/transform_traits_spec.hpp:
	* src/core/boost/type_traits/type_with_alignment.hpp:
	* src/core/boost/utility.hpp:
	* src/core/boost/utility/addressof.hpp:
	* src/core/boost/utility/base_from_member.hpp:
	* src/core/boost/utility/compare_pointees.hpp:
	* src/core/boost/utility/detail/in_place_factory_prefix.hpp:
	* src/core/boost/utility/detail/in_place_factory_suffix.hpp:
	* src/core/boost/utility/detail/result_of_iterate.hpp:
	* src/core/boost/utility/enable_if.hpp:
	* src/core/boost/utility/in_place_factory.hpp:
	* src/core/boost/utility/result_of.hpp:
	* src/core/boost/utility/typed_in_place_factory.hpp:
	* src/core/boost/utility/value_init.hpp:
	* src/core/boost/weak_ptr.hpp:

	moved boost headers to src/core because that has to be in the
	include path anyway

2008-07-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile-gen.am:
	* src/client-test-app.cpp:

	unit tests in Register.cpp files not active without
	--enable-unit-tests

2008-07-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* Doxyfile:
	* Makefile-gen.am:
	* configure-pre.in:

	added building of html source code documentation with Doxygen

2008-07-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* Doxyfile:

	unmodified Doxyfile template as created by doxygen 1.5.3

2008-07-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile-gen.am:
	* Makefile.am:
	* autogen.sh:
	* configure-post.in:
	* configure-pre.in:
	* src/Makefile-gen.am:
	* src/Makefile.am.gen:
	* src/backends/addressbook/Makefile.am:
	* src/backends/addressbook/configure-sub.in:
	* src/backends/evolution/Makefile.am:
	* src/backends/evolution/configure-sub.in:
	* src/backends/sqlite/Makefile.am:
	* src/backends/sqlite/configure-sub.in:
	* src/core/Makefile.am:

	file layout restructuring, take II

2008-07-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* autogen.sh:
	* configure-pre.in:
	* configure.in:
	* src/AddressBookConstants.cpp:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/AddressBookSourceRegister.cpp:
	* src/ConfigNode.h:
	* src/ConfigTree.h:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionContactSourceRegister.cpp:
	* src/EvolutionMemoSource.cpp:
	* src/EvolutionMemoSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/FileConfigNode.cpp:
	* src/FileConfigNode.h:
	* src/FileConfigTree.cpp:
	* src/FileConfigTree.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/Makefile.am:
	* src/Makefile.am.gen:
	* src/PrefixConfigNode.cpp:
	* src/PrefixConfigNode.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SQLiteContactSourceRegister.cpp:
	* src/SQLiteUtil.cpp:
	* src/SQLiteUtil.h:
	* src/SafeConfigNode.cpp:
	* src/SafeConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionCmdline.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:
	* src/TrackingSyncSource.cpp:
	* src/TrackingSyncSource.h:
	* src/VolatileConfigNode.h:
	* src/VolatileConfigTree.h:
	* src/backends/addressbook/AddressBookConstants.cpp:
	* src/backends/addressbook/AddressBookSource.cpp:
	* src/backends/addressbook/AddressBookSource.h:
	* src/backends/addressbook/AddressBookSourceRegister.cpp:
	* src/backends/evolution/EvolutionCalendarSource.cpp:
	* src/backends/evolution/EvolutionCalendarSource.h:
	* src/backends/evolution/EvolutionCalendarSourceRegister.cpp:
	* src/backends/evolution/EvolutionContactSource.cpp:
	* src/backends/evolution/EvolutionContactSource.h:
	* src/backends/evolution/EvolutionContactSourceRegister.cpp:
	* src/backends/evolution/EvolutionMemoSource.cpp:
	* src/backends/evolution/EvolutionMemoSource.h:
	* src/backends/evolution/e-cal-check-timezones.c:
	* src/backends/evolution/e-cal-check-timezones.h:
	* src/backends/evolution/libical/icalstrdup.c:
	* src/backends/evolution/libical/icalstrdup.h:
	* src/backends/sqlite/SQLiteContactSource.cpp:
	* src/backends/sqlite/SQLiteContactSource.h:
	* src/backends/sqlite/SQLiteContactSourceRegister.cpp:
	* src/backends/sqlite/SQLiteUtil.cpp:
	* src/backends/sqlite/SQLiteUtil.h:
	* src/core/ConfigNode.h:
	* src/core/ConfigTree.h:
	* src/core/EvolutionSmartPtr.h:
	* src/core/EvolutionSyncClient.cpp:
	* src/core/EvolutionSyncClient.h:
	* src/core/EvolutionSyncSource.cpp:
	* src/core/EvolutionSyncSource.h:
	* src/core/FileConfigNode.cpp:
	* src/core/FileConfigNode.h:
	* src/core/FileConfigTree.cpp:
	* src/core/FileConfigTree.h:
	* src/core/FilterConfigNode.cpp:
	* src/core/FilterConfigNode.h:
	* src/core/PrefixConfigNode.cpp:
	* src/core/PrefixConfigNode.h:
	* src/core/SafeConfigNode.cpp:
	* src/core/SafeConfigNode.h:
	* src/core/SyncEvolutionCmdline.cpp:
	* src/core/SyncEvolutionCmdline.h:
	* src/core/SyncEvolutionConfig.cpp:
	* src/core/SyncEvolutionConfig.h:
	* src/core/SyncEvolutionUtil.cpp:
	* src/core/SyncEvolutionUtil.h:
	* src/core/TrackingSyncSource.cpp:
	* src/core/TrackingSyncSource.h:
	* src/core/VolatileConfigNode.h:
	* src/core/VolatileConfigTree.h:
	* src/core/vocl/README:
	* src/core/vocl/VConverter.cpp:
	* src/core/vocl/VConverter.h:
	* src/core/vocl/VObject.cpp:
	* src/core/vocl/VObject.h:
	* src/core/vocl/VProperty.cpp:
	* src/core/vocl/VProperty.h:
	* src/core/vocl/posixadapter.h:
	* src/core/vocl/vcardconverter.cpp:
	* src/e-cal-check-timezones.c:
	* src/e-cal-check-timezones.h:
	* src/libical/icalstrdup.c:
	* src/libical/icalstrdup.h:
	* src/vocl/README:
	* src/vocl/VConverter.cpp:
	* src/vocl/VConverter.h:
	* src/vocl/VObject.cpp:
	* src/vocl/VObject.h:
	* src/vocl/VProperty.cpp:
	* src/vocl/VProperty.h:
	* src/vocl/posixadapter.h:
	* src/vocl/vcardconverter.cpp:

	major restructuring of the file layout and autotools build

2008-07-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	print summary of enabled backends

2008-07-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:

	another rename sync4j->funambol

2008-07-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:

	adapted to renaming of libsync4j -> libfunambol; also renamed
	variables and configure options, but old options kept as aliases

2008-07-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added further explanations to --source-property

2008-07-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:
	* src/EvolutionContactSource.cpp:

	disabled special support for X-OSSO-CONTACT-STATE because the
	property no longer is returned properly by libebook (SF #1947050)

2008-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	fixed --refresh-from-server typo

2008-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added BINSUFFIX for Mac OS X

2008-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* src/Makefile.am:

	added files required for 'make deb' to distribution

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* debian/changelog:

	# updated

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	added comment regarding myFUNAMBOL sc-pim- prefix to deviceId

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:

	fixed creating and testing of default configs

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/AddressBookSourceRegister.cpp:

	Mac OS X client now uses the new TrackingSyncSource

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	simplified compiling for ppc/386 on Mac OS X

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	simplified compiling for ppc/386 on Mac OS X

2008-07-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.h:
	* src/TrackingSyncSource.h:

	turned fileSuffix() into a const function

2008-07-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	use sc-pim- prefix for device ID

2008-07-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/FileConfigNode.cpp:
	* src/FileConfigTree.cpp:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/PrefixConfigNode.cpp:
	* src/SafeConfigNode.cpp:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:
	* src/TrackingSyncSource.cpp:

	reduced explicit usage of iterators (mostly with BOOST_FOREACH)

2008-07-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/TrackingSyncSource.h:

	cleaned up EvolutionSyncSource interface+implementation

2008-07-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:
	* test/sys.supp:

	added plenty of suppressions for problems only found when running
	code linked against 2.22.x

2008-07-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added the possibility to run a setup script as part of each test

2008-07-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionUtil.cpp:

	added missing header file

2008-07-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionUtil.cpp:

	better random seed (avoids identical clientId when configs are
	created rapidly one after the other)

2008-07-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionUtil.h:

	code cleanup (boost::join, list sort)

2008-07-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/PrefixConfigNode.cpp:
	* src/SafeConfigNode.cpp:

	code cleanup (map access)

2008-07-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.h:

	code cleanup

2008-07-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionUtil.h:

	simplified ConfigFilter: now uses keys as they are, but with
	case-insensitive compare

2008-07-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TrackingSyncSource.h:

	LUID may not change during update

2008-07-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	fixed mem leak when listing databases

2008-07-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/shlibs.local:

	reverted to 0.7 packaging

2008-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* configure.in:

	updated version, changelog, NEWS for 0.8 beta 1

2008-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/shlibs.local:

	SF #1993109: for Evolution 2.6 use .deb dependencies which work
	with Ubuntu 6.06 LTS

2008-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	SF #1991286: when creating config for the first time, only enable
	sync sources which can be synchronized

2008-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fixed problem with loading calendar backend dynamically on Maemo
	(depends on TrackingSyncSource being in the main binary)

2008-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	avoid useless 'list: unable to access calendars: failure' error
	message

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added MemoToo

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:

	remember failure when iterating over items

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:
	* src/vocl/posixadapter.h:

	adapted to new C++ client library posixadapter.h

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	return code of removeAllItems() is error code, not SyncML status

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:

	clarified return code of inherited removeAllItems() method

2008-06-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/posixadapter.h:

	fixed compile errors due to wchar redefines

2008-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:

	added memotoo to expected list of templates, fixed Funambol
	syncURL

2008-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:

	removed extra sorting, std::set is already guaranteed to return
	entries in ascending order

2008-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	fixed wrong URI in ScheduleWorld template

2008-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	MemoToo sends vcards with just \n line termination, handle that
	when extracting FN

2008-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:

	fixed wrong syncURL in ScheduleWorld template

2008-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added --prebuilt: testing with precompiled SyncEvolution

2008-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	MemoToo prefers vCard 2.1 over 3.0

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	rename SyncEvolution's copy of the libecal timezone functions

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* configure.in:
	* etc/.cvsignore:
	* etc/Makefile.am:
	* etc/source-config.txt:
	* etc/syncml-config.txt:

	removed obsolete example config files

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	adapted to the official include flags (posix before common)

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionMemoSource.cpp:

	added synchronization of Evolution memo summary

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/SyncEvolutionCmdline.cpp:

	removed --properties option: not implemented yet

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	added MemoToo server template

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	fixed typo (evolution-todo -> evolution-tasks)

2008-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/Makefile.am:

	made detached recurrence handling more resilient

2008-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	regression in 0.8 alpha 1: setting sync mode during status query
	or sync affected *all* sources, even the disabled ones

2008-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/e-cal-check-timezones.c:
	* src/e-cal-check-timezones.h:

	addressed Chenthill's code review comments #49 and #50

2008-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	scheduleworld config template: calendar was using 'event2'
	instead of the correct 'cal2' URI

2008-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncSource.h:

	fixed segfaults for certain data

2008-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	fixed compile error

2008-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	removed/replaced 'calendar' string from message in libecal
	backend because it is also used for memos and tasks

2008-06-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:

	fixed modifying parent/child (=detached) calendar items

2008-06-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TrackingSyncSource.cpp:

	avoid redundant conversion to C string

2008-06-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	removeAllItems() must mark source as modified
	(EvolutionContactSource depends on it)

2008-06-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	implemented SyncSource::removeAllItems()

2008-05-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/e-cal-check-timezones.c:
	* src/e-cal-check-timezones.h:

	e_cal_match_tzid() is now public: required for mapping TZIDs of
	existing events

2008-05-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/e-cal-check-timezones.c:

	use icaltimezone_get_builtin_timezone_from_tzid()

2008-05-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/e-cal-check-timezones.c:

	try to strip trailing sequence number when mapping TZIDs

2008-05-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/e-cal-check-timezones.c:

	add system time zones to VCALENDAR if they are getting used
	because of mapping (keeps VCALENDAR consistent)

2008-05-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/e-cal-check-timezones.c:
	* src/e-cal-check-timezones.h:

	optionally patch components stored in a GList (required by
	evolution-exchange)

2008-05-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/libical/icalstrdup.c:

	fixed spelling mistake

2008-05-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSmartPtr.h:

	must define HANDLE_LIBICAL_MEMORY to avoid compiler warning

2008-05-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/EvolutionCalendarSource.cpp:
	* src/Makefile.am:
	* src/e-cal-check-timezones.c:
	* src/libical/icalstrdup.c:
	* src/libical/icalstrdup.h:

	GNOME Bugzilla #516408: always free ical strings, duplicate when
	necessary

2008-05-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	also test SyncEvolution unit tests in addition to testing
	framework tests

2008-05-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:

	suppressed all known leaks with trunk from April 1st

2008-04-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	Maemo no longer uses patched libdbus

2008-04-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* authors.xml:

	account -> user mapping for svn2cl

2008-04-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	SF #1947050: added sanity checks around string access of
	X-OSSO-CONTACT-STATE

2008-04-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:

	# updated

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/Makefile.am:
	* src/e-cal-check-timezones.c:
	* src/e-cal-check-timezones.h:
	* src/e_cal_check_timezones.c:
	* src/e_cal_check_timezones.h:

	finished proposal for inclusion of e_cal_check_timezones() into
	Evolution

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# updated

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* svn2cl.sh:

	svn checkout must be up-to-date for svn2cl to produce complete
	results

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* HACKING:
	* svn2cl.sh:

	generate ChangeLog from Subversion log

2008-04-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionUtil.cpp:
	* src/client-test-app.cpp:

	adding SyncEvolution test target in all cases, take II

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSourceRegister.cpp:
	* src/e_cal_check_timezones.c:
	* src/e_cal_check_timezones.h:

	avoid timezone collisions by renaming the new VTIMEZONE before
	importing

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/e_cal_check_timezones.c:
	* src/e_cal_check_timezones.h:

	map TZIDs to system timezones, if possible

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	avoid redundant underscore

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	added testing of opening default database

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionUtil.cpp:

	always provide SyncEvolution test class, even if it is empty:
	avoids the need to distinguish between builds when testing it

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	unit tests were unintentionally enabled when only integration
	tests should have been on

2008-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added comment about pre-releases

2008-04-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	added SSL options also to regression testing

2008-04-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* configure.in:

	bumped version to alpha, made sure that .deb package version is
	larger than last release but smaller than final one

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TrackingSyncSource.h:

	clarified insertItem

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/PrefixConfigNode.cpp:
	* src/PrefixConfigNode.h:
	* src/TrackingSyncSource.cpp:

	added prefix to change tracking node: that way have multiple name
	spaces in the same config node, in case we need it later on

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/FilterConfigNode.cpp:
	* src/SafeConfigNode.cpp:

	fixed typo in error message (missing 'not')

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/ConfigNode.h:
	* src/FileConfigNode.cpp:
	* src/FileConfigNode.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/SafeConfigNode.cpp:
	* src/SafeConfigNode.h:
	* src/SyncEvolutionConfig.cpp:
	* src/TrackingSyncSource.cpp:

	avoid expensive copying of property map

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	updated --help text

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionMemoSource.cpp:

	make sure that the icomp UID is set before calling the update
	method (EDS crashes otherwise)

2008-04-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.h:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.h:
	* src/EvolutionMemoSource.h:
	* src/TrackingSyncSource.h:

	the useless clone() method is no longer needed because SyncSource
	no longer inherits from ArrayElement

2008-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	implemented support for detached recurrences

2008-04-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:
	* src/client-test-app.cpp:

	adapted to new removeAllItems() prototype

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	added missing initialization of sources during --status
	processing

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionMemoSource.cpp:
	* src/EvolutionMemoSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/TrackingSyncSource.cpp:
	* src/TrackingSyncSource.h:

	make results from insertItem explicit by putting them all in one
	struct

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	'test' is a meta target

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionMemoSource.cpp:
	* src/EvolutionMemoSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/TrackingSyncSource.cpp:
	* src/TrackingSyncSource.h:
	* src/client-test-app.cpp:

	EvolutionCalendarSyncSource now uses change tracking based on
	modification time stamp.

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	adapted to the extended printLine() method

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSmartPtr.h:

	added template class for calling free() on arbitrary pointer

2008-04-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/SafeConfigNode.cpp:
	* src/SafeConfigNode.h:

	added wrapper around config node: accepts arbitrary key/value
	strings

2008-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	use  instead of make

2008-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	added missing VolatileConfigTree.h to dist

2008-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:

	added dependencies on self-compiled client library (client-test
	and synceveoluition were not always recompiled)

2008-04-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	check config before open() and beginSync() to detect errors when
	it is still safe (change tracking not modified yet; exceptions
	handled gracefully

2008-04-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/VolatileConfigTree.h:

	allow temporary configuration in memory which is not tied to a
	persistent configuration

2008-04-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	return code of sync got lost

2008-04-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionSyncClient.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	added several options for SSL connections

2008-04-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	- all passwords can be specified as env variables (${foo}) or
	read from stdin (-) - fixed config access in sync sources (broke
	during rewrite)

2008-04-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	added missing newline in error message

2008-03-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/SyncEvolutionCmdline.cpp:

	--properties not implemented yet

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/ConfigNode.h:
	* src/FileConfigNode.cpp:
	* src/FileConfigNode.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	default values are commmented out in .ini files; some important
	ones are always set normally

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	simplified configuration

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:

	cleaned up comments on properties

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:

	deviceId is now a pseudo UUID in new configurations

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	added testing of --configure on old-style config

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	added testing of source listing and migration, minor fixes

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:

	added testing of configuring existing config; minor fixes (case
	sensitivity in filter, modifying only selected sources)

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	testing of/fixed creating config with sources specified; improved
	white space handling in parameters

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionUtil.h:

	added testing of --print-config, fixed some of the error handling

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/boost/detail/algorithm.hpp:
	* src/boost/detail/allocator_utilities.hpp:
	* src/boost/detail/atomic_count.hpp:
	* src/boost/detail/atomic_count_gcc.hpp:
	* src/boost/detail/atomic_count_pthreads.hpp:
	* src/boost/detail/atomic_count_win32.hpp:
	* src/boost/detail/binary_search.hpp:
	* src/boost/detail/call_traits.hpp:
	* src/boost/detail/catch_exceptions.hpp:
	* src/boost/detail/compressed_pair.hpp:
	* src/boost/detail/dynamic_bitset.hpp:
	* src/boost/detail/endian.hpp:
	* src/boost/detail/indirect_traits.hpp:
	* src/boost/detail/interlocked.hpp:
	* src/boost/detail/is_function_ref_tester.hpp:
	* src/boost/detail/is_incrementable.hpp:
	* src/boost/detail/is_xxx.hpp:
	* src/boost/detail/iterator.hpp:
	* src/boost/detail/lightweight_mutex.hpp:
	* src/boost/detail/lightweight_test.hpp:
	* src/boost/detail/limits.hpp:
	* src/boost/detail/lwm_nop.hpp:
	* src/boost/detail/lwm_pthreads.hpp:
	* src/boost/detail/lwm_win32_cs.hpp:
	* src/boost/detail/named_template_params.hpp:
	* src/boost/detail/no_exceptions_support.hpp:
	* src/boost/detail/none_t.hpp:
	* src/boost/detail/numeric_traits.hpp:
	* src/boost/detail/ob_call_traits.hpp:
	* src/boost/detail/ob_compressed_pair.hpp:
	* src/boost/detail/quick_allocator.hpp:
	* src/boost/detail/reference_content.hpp:
	* src/boost/detail/select_type.hpp:
	* src/boost/detail/shared_array_nmt.hpp:
	* src/boost/detail/shared_ptr_nmt.hpp:
	* src/boost/detail/templated_streams.hpp:
	* src/boost/detail/utf8_codecvt_facet.hpp:
	* src/boost/foreach.hpp:

	added more Boost header files (required by algorithm::string)

2008-03-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionCmdline.h:

	added testing of --sync property storing

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	test additional aspects of --template and --print-servers

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	added --template testing

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	fixed default Funambol config (vCard 2.1, memo sync/URI mixup)

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.h:

	added missing 'syncevolution' subdir when XDG_CONFIG_HOME is set

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/SQLiteContactSource.cpp:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/boost/algorithm/string.hpp:
	* src/boost/algorithm/string/case_conv.hpp:
	* src/boost/algorithm/string/classification.hpp:
	* src/boost/algorithm/string/compare.hpp:
	* src/boost/algorithm/string/concept.hpp:
	* src/boost/algorithm/string/config.hpp:
	* src/boost/algorithm/string/constants.hpp:
	* src/boost/algorithm/string/detail/case_conv.hpp:
	* src/boost/algorithm/string/detail/classification.hpp:
	* src/boost/algorithm/string/detail/find_format.hpp:
	* src/boost/algorithm/string/detail/find_format_all.hpp:
	* src/boost/algorithm/string/detail/find_format_store.hpp:
	* src/boost/algorithm/string/detail/find_iterator.hpp:
	* src/boost/algorithm/string/detail/finder.hpp:
	* src/boost/algorithm/string/detail/finder_regex.hpp:
	* src/boost/algorithm/string/detail/formatter.hpp:
	* src/boost/algorithm/string/detail/formatter_regex.hpp:
	* src/boost/algorithm/string/detail/predicate.hpp:
	* src/boost/algorithm/string/detail/replace_storage.hpp:
	* src/boost/algorithm/string/detail/sequence.hpp:
	* src/boost/algorithm/string/detail/trim.hpp:
	* src/boost/algorithm/string/detail/util.hpp:
	* src/boost/algorithm/string/erase.hpp:
	* src/boost/algorithm/string/find.hpp:
	* src/boost/algorithm/string/find_format.hpp:
	* src/boost/algorithm/string/find_iterator.hpp:
	* src/boost/algorithm/string/finder.hpp:
	* src/boost/algorithm/string/formatter.hpp:
	* src/boost/algorithm/string/iter_find.hpp:
	* src/boost/algorithm/string/join.hpp:
	* src/boost/algorithm/string/predicate.hpp:
	* src/boost/algorithm/string/predicate_facade.hpp:
	* src/boost/algorithm/string/replace.hpp:
	* src/boost/algorithm/string/sequence_traits.hpp:
	* src/boost/algorithm/string/split.hpp:
	* src/boost/algorithm/string/std/list_traits.hpp:
	* src/boost/algorithm/string/std/rope_traits.hpp:
	* src/boost/algorithm/string/std/slist_traits.hpp:
	* src/boost/algorithm/string/std/string_traits.hpp:
	* src/boost/algorithm/string/std_containers_traits.hpp:
	* src/boost/algorithm/string/trim.hpp:
	* src/boost/algorithm/string/yes_no_type.hpp:
	* src/boost/bind.hpp:
	* src/boost/bind/apply.hpp:
	* src/boost/bind/arg.hpp:
	* src/boost/bind/bind_cc.hpp:
	* src/boost/bind/bind_mf_cc.hpp:
	* src/boost/bind/bind_template.hpp:
	* src/boost/bind/make_adaptable.hpp:
	* src/boost/bind/mem_fn_cc.hpp:
	* src/boost/bind/mem_fn_template.hpp:
	* src/boost/bind/mem_fn_vw.hpp:
	* src/boost/bind/placeholders.hpp:
	* src/boost/bind/protect.hpp:
	* src/boost/bind/storage.hpp:
	* src/boost/cast.hpp:
	* src/boost/concept_archetype.hpp:
	* src/boost/concept_check.hpp:
	* src/boost/function.hpp:
	* src/boost/function/detail/function_iterate.hpp:
	* src/boost/function/detail/maybe_include.hpp:
	* src/boost/function/detail/prologue.hpp:
	* src/boost/function/function0.hpp:
	* src/boost/function/function1.hpp:
	* src/boost/function/function10.hpp:
	* src/boost/function/function2.hpp:
	* src/boost/function/function3.hpp:
	* src/boost/function/function4.hpp:
	* src/boost/function/function5.hpp:
	* src/boost/function/function6.hpp:
	* src/boost/function/function7.hpp:
	* src/boost/function/function8.hpp:
	* src/boost/function/function9.hpp:
	* src/boost/function/function_base.hpp:
	* src/boost/function/function_template.hpp:
	* src/boost/function_equal.hpp:
	* src/boost/get_pointer.hpp:
	* src/boost/implicit_cast.hpp:
	* src/boost/iterator.hpp:
	* src/boost/iterator/counting_iterator.hpp:
	* src/boost/iterator/detail/any_conversion_eater.hpp:
	* src/boost/iterator/detail/config_def.hpp:
	* src/boost/iterator/detail/config_undef.hpp:
	* src/boost/iterator/detail/enable_if.hpp:
	* src/boost/iterator/detail/facade_iterator_category.hpp:
	* src/boost/iterator/detail/minimum_category.hpp:
	* src/boost/iterator/filter_iterator.hpp:
	* src/boost/iterator/indirect_iterator.hpp:
	* src/boost/iterator/interoperable.hpp:
	* src/boost/iterator/is_lvalue_iterator.hpp:
	* src/boost/iterator/is_readable_iterator.hpp:
	* src/boost/iterator/iterator_adaptor.hpp:
	* src/boost/iterator/iterator_archetypes.hpp:
	* src/boost/iterator/iterator_categories.hpp:
	* src/boost/iterator/iterator_concepts.hpp:
	* src/boost/iterator/iterator_facade.hpp:
	* src/boost/iterator/iterator_traits.hpp:
	* src/boost/iterator/new_iterator_tests.hpp:
	* src/boost/iterator/permutation_iterator.hpp:
	* src/boost/iterator/reverse_iterator.hpp:
	* src/boost/iterator/transform_iterator.hpp:
	* src/boost/iterator/zip_iterator.hpp:
	* src/boost/lexical_cast.hpp:
	* src/boost/mem_fn.hpp:
	* src/boost/mpl/O1_size.hpp:
	* src/boost/mpl/O1_size_fwd.hpp:
	* src/boost/mpl/accumulate.hpp:
	* src/boost/mpl/advance.hpp:
	* src/boost/mpl/advance_fwd.hpp:
	* src/boost/mpl/alias.hpp:
	* src/boost/mpl/always.hpp:
	* src/boost/mpl/and.hpp:
	* src/boost/mpl/apply.hpp:
	* src/boost/mpl/apply_fwd.hpp:
	* src/boost/mpl/apply_wrap.hpp:
	* src/boost/mpl/arg.hpp:
	* src/boost/mpl/arg_fwd.hpp:
	* src/boost/mpl/arithmetic.hpp:
	* src/boost/mpl/as_sequence.hpp:
	* src/boost/mpl/assert.hpp:
	* src/boost/mpl/at.hpp:
	* src/boost/mpl/at_fwd.hpp:
	* src/boost/mpl/aux_/O1_size_impl.hpp:
	* src/boost/mpl/aux_/adl_barrier.hpp:
	* src/boost/mpl/aux_/advance_backward.hpp:
	* src/boost/mpl/aux_/advance_forward.hpp:
	* src/boost/mpl/aux_/apply_1st.hpp:
	* src/boost/mpl/aux_/arg_typedef.hpp:
	* src/boost/mpl/aux_/arithmetic_op.hpp:
	* src/boost/mpl/aux_/arity.hpp:
	* src/boost/mpl/aux_/arity_spec.hpp:
	* src/boost/mpl/aux_/at_impl.hpp:
	* src/boost/mpl/aux_/back_impl.hpp:
	* src/boost/mpl/aux_/basic_bind.hpp:
	* src/boost/mpl/aux_/begin_end_impl.hpp:
	* src/boost/mpl/aux_/clear_impl.hpp:
	* src/boost/mpl/aux_/common_name_wknd.hpp:
	* src/boost/mpl/aux_/comparison_op.hpp:
	* src/boost/mpl/aux_/config/adl.hpp:
	* src/boost/mpl/aux_/config/arrays.hpp:
	* src/boost/mpl/aux_/config/bind.hpp:
	* src/boost/mpl/aux_/config/compiler.hpp:
	* src/boost/mpl/aux_/config/ctps.hpp:
	* src/boost/mpl/aux_/config/dependent_nttp.hpp:
	* src/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp:
	* src/boost/mpl/aux_/config/dtp.hpp:
	* src/boost/mpl/aux_/config/eti.hpp:
	* src/boost/mpl/aux_/config/forwarding.hpp:
	* src/boost/mpl/aux_/config/gcc.hpp:
	* src/boost/mpl/aux_/config/has_apply.hpp:
	* src/boost/mpl/aux_/config/has_xxx.hpp:
	* src/boost/mpl/aux_/config/integral.hpp:
	* src/boost/mpl/aux_/config/intel.hpp:
	* src/boost/mpl/aux_/config/lambda.hpp:
	* src/boost/mpl/aux_/config/msvc.hpp:
	* src/boost/mpl/aux_/config/msvc_typename.hpp:
	* src/boost/mpl/aux_/config/nttp.hpp:
	* src/boost/mpl/aux_/config/operators.hpp:
	* src/boost/mpl/aux_/config/overload_resolution.hpp:
	* src/boost/mpl/aux_/config/preprocessor.hpp:
	* src/boost/mpl/aux_/config/static_constant.hpp:
	* src/boost/mpl/aux_/config/ttp.hpp:
	* src/boost/mpl/aux_/config/typeof.hpp:
	* src/boost/mpl/aux_/config/use_preprocessed.hpp:
	* src/boost/mpl/aux_/config/workaround.hpp:
	* src/boost/mpl/aux_/contains_impl.hpp:
	* src/boost/mpl/aux_/count_args.hpp:
	* src/boost/mpl/aux_/count_impl.hpp:
	* src/boost/mpl/aux_/empty_impl.hpp:
	* src/boost/mpl/aux_/erase_impl.hpp:
	* src/boost/mpl/aux_/erase_key_impl.hpp:
	* src/boost/mpl/aux_/filter_iter.hpp:
	* src/boost/mpl/aux_/find_if_pred.hpp:
	* src/boost/mpl/aux_/fold_impl.hpp:
	* src/boost/mpl/aux_/fold_impl_body.hpp:
	* src/boost/mpl/aux_/fold_op.hpp:
	* src/boost/mpl/aux_/fold_pred.hpp:
	* src/boost/mpl/aux_/front_impl.hpp:
	* src/boost/mpl/aux_/full_lambda.hpp:
	* src/boost/mpl/aux_/has_apply.hpp:
	* src/boost/mpl/aux_/has_begin.hpp:
	* src/boost/mpl/aux_/has_key_impl.hpp:
	* src/boost/mpl/aux_/has_rebind.hpp:
	* src/boost/mpl/aux_/has_size.hpp:
	* src/boost/mpl/aux_/has_tag.hpp:
	* src/boost/mpl/aux_/has_type.hpp:
	* src/boost/mpl/aux_/include_preprocessed.hpp:
	* src/boost/mpl/aux_/insert_impl.hpp:
	* src/boost/mpl/aux_/insert_range_impl.hpp:
	* src/boost/mpl/aux_/inserter_algorithm.hpp:
	* src/boost/mpl/aux_/integral_wrapper.hpp:
	* src/boost/mpl/aux_/is_msvc_eti_arg.hpp:
	* src/boost/mpl/aux_/iter_apply.hpp:
	* src/boost/mpl/aux_/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/iter_push_front.hpp:
	* src/boost/mpl/aux_/joint_iter.hpp:
	* src/boost/mpl/aux_/lambda_arity_param.hpp:
	* src/boost/mpl/aux_/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/lambda_spec.hpp:
	* src/boost/mpl/aux_/lambda_support.hpp:
	* src/boost/mpl/aux_/largest_int.hpp:
	* src/boost/mpl/aux_/logical_op.hpp:
	* src/boost/mpl/aux_/msvc_dtw.hpp:
	* src/boost/mpl/aux_/msvc_eti_base.hpp:
	* src/boost/mpl/aux_/msvc_is_class.hpp:
	* src/boost/mpl/aux_/msvc_never_true.hpp:
	* src/boost/mpl/aux_/msvc_type.hpp:
	* src/boost/mpl/aux_/na.hpp:
	* src/boost/mpl/aux_/na_assert.hpp:
	* src/boost/mpl/aux_/na_fwd.hpp:
	* src/boost/mpl/aux_/na_spec.hpp:
	* src/boost/mpl/aux_/nested_type_wknd.hpp:
	* src/boost/mpl/aux_/nttp_decl.hpp:
	* src/boost/mpl/aux_/numeric_cast_utils.hpp:
	* src/boost/mpl/aux_/numeric_op.hpp:
	* src/boost/mpl/aux_/order_impl.hpp:
	* src/boost/mpl/aux_/overload_names.hpp:
	* src/boost/mpl/aux_/partition_op.hpp:
	* src/boost/mpl/aux_/pop_back_impl.hpp:
	* src/boost/mpl/aux_/pop_front_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/and.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/less.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/list.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/map.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/or.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/set.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/times.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/bcc551/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/dmc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/and.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/less.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/list.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/map.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/or.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/set.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/times.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/gcc/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/and.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/less.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/list.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/map.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/or.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/set.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/times.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc60/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/and.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/less.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/list.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/map.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/or.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/set.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/times.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/msvc70/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/and.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/less.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/list.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/map.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/or.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/set.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/times.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/mwcw/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/and.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/less.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/list.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/map.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/or.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/set.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/times.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ctps/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/and.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/less.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/list.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/map.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/or.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/set.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/times.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/no_ttp/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/advance_backward.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/advance_forward.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/and.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/arg.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/basic_bind.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bind.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bind_fwd.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitand.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitor.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/bitxor.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/deque.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/divides.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/full_lambda.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/greater.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/greater_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/inherit.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/less.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/less_equal.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/list.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/list_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/map.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/minus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/modulus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/not_equal_to.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/or.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/placeholders.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/plus.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/quote.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/set.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/set_c.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/shift_left.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/shift_right.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/template_arity.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/times.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/unpack_args.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/vector.hpp:
	* src/boost/mpl/aux_/preprocessed/plain/vector_c.hpp:
	* src/boost/mpl/aux_/preprocessor/add.hpp:
	* src/boost/mpl/aux_/preprocessor/def_params_tail.hpp:
	* src/boost/mpl/aux_/preprocessor/default_params.hpp:
	* src/boost/mpl/aux_/preprocessor/enum.hpp:
	* src/boost/mpl/aux_/preprocessor/ext_params.hpp:
	* src/boost/mpl/aux_/preprocessor/filter_params.hpp:
	* src/boost/mpl/aux_/preprocessor/is_seq.hpp:
	* src/boost/mpl/aux_/preprocessor/params.hpp:
	* src/boost/mpl/aux_/preprocessor/partial_spec_params.hpp:
	* src/boost/mpl/aux_/preprocessor/range.hpp:
	* src/boost/mpl/aux_/preprocessor/repeat.hpp:
	* src/boost/mpl/aux_/preprocessor/sub.hpp:
	* src/boost/mpl/aux_/preprocessor/token_equal.hpp:
	* src/boost/mpl/aux_/preprocessor/tuple.hpp:
	* src/boost/mpl/aux_/ptr_to_ref.hpp:
	* src/boost/mpl/aux_/push_back_impl.hpp:
	* src/boost/mpl/aux_/push_front_impl.hpp:
	* src/boost/mpl/aux_/range_c/O1_size.hpp:
	* src/boost/mpl/aux_/range_c/back.hpp:
	* src/boost/mpl/aux_/range_c/empty.hpp:
	* src/boost/mpl/aux_/range_c/front.hpp:
	* src/boost/mpl/aux_/range_c/iterator.hpp:
	* src/boost/mpl/aux_/range_c/size.hpp:
	* src/boost/mpl/aux_/range_c/tag.hpp:
	* src/boost/mpl/aux_/reverse_fold_impl.hpp:
	* src/boost/mpl/aux_/reverse_fold_impl_body.hpp:
	* src/boost/mpl/aux_/reverse_iter_fold_impl.hpp:
	* src/boost/mpl/aux_/sequence_wrapper.hpp:
	* src/boost/mpl/aux_/shift_op.hpp:
	* src/boost/mpl/aux_/single_element_iter.hpp:
	* src/boost/mpl/aux_/size_impl.hpp:
	* src/boost/mpl/aux_/sort_impl.hpp:
	* src/boost/mpl/aux_/static_cast.hpp:
	* src/boost/mpl/aux_/template_arity.hpp:
	* src/boost/mpl/aux_/template_arity_fwd.hpp:
	* src/boost/mpl/aux_/test.hpp:
	* src/boost/mpl/aux_/test/assert.hpp:
	* src/boost/mpl/aux_/test/data.hpp:
	* src/boost/mpl/aux_/test/test_case.hpp:
	* src/boost/mpl/aux_/traits_lambda_spec.hpp:
	* src/boost/mpl/aux_/transform_iter.hpp:
	* src/boost/mpl/aux_/type_wrapper.hpp:
	* src/boost/mpl/aux_/unwrap.hpp:
	* src/boost/mpl/aux_/value_wknd.hpp:
	* src/boost/mpl/aux_/yes_no.hpp:
	* src/boost/mpl/back.hpp:
	* src/boost/mpl/back_fwd.hpp:
	* src/boost/mpl/back_inserter.hpp:
	* src/boost/mpl/base.hpp:
	* src/boost/mpl/begin.hpp:
	* src/boost/mpl/begin_end.hpp:
	* src/boost/mpl/begin_end_fwd.hpp:
	* src/boost/mpl/bind.hpp:
	* src/boost/mpl/bind_fwd.hpp:
	* src/boost/mpl/bitand.hpp:
	* src/boost/mpl/bitor.hpp:
	* src/boost/mpl/bitwise.hpp:
	* src/boost/mpl/bitxor.hpp:
	* src/boost/mpl/bool.hpp:
	* src/boost/mpl/bool_fwd.hpp:
	* src/boost/mpl/clear.hpp:
	* src/boost/mpl/clear_fwd.hpp:
	* src/boost/mpl/comparison.hpp:
	* src/boost/mpl/contains.hpp:
	* src/boost/mpl/contains_fwd.hpp:
	* src/boost/mpl/copy.hpp:
	* src/boost/mpl/copy_if.hpp:
	* src/boost/mpl/count.hpp:
	* src/boost/mpl/count_fwd.hpp:
	* src/boost/mpl/count_if.hpp:
	* src/boost/mpl/deque.hpp:
	* src/boost/mpl/deref.hpp:
	* src/boost/mpl/distance.hpp:
	* src/boost/mpl/distance_fwd.hpp:
	* src/boost/mpl/divides.hpp:
	* src/boost/mpl/empty.hpp:
	* src/boost/mpl/empty_base.hpp:
	* src/boost/mpl/empty_fwd.hpp:
	* src/boost/mpl/empty_sequence.hpp:
	* src/boost/mpl/end.hpp:
	* src/boost/mpl/equal.hpp:
	* src/boost/mpl/equal_to.hpp:
	* src/boost/mpl/erase.hpp:
	* src/boost/mpl/erase_fwd.hpp:
	* src/boost/mpl/erase_key.hpp:
	* src/boost/mpl/erase_key_fwd.hpp:
	* src/boost/mpl/eval_if.hpp:
	* src/boost/mpl/filter_view.hpp:
	* src/boost/mpl/find.hpp:
	* src/boost/mpl/find_if.hpp:
	* src/boost/mpl/fold.hpp:
	* src/boost/mpl/for_each.hpp:
	* src/boost/mpl/front.hpp:
	* src/boost/mpl/front_fwd.hpp:
	* src/boost/mpl/front_inserter.hpp:
	* src/boost/mpl/greater.hpp:
	* src/boost/mpl/greater_equal.hpp:
	* src/boost/mpl/has_key.hpp:
	* src/boost/mpl/has_key_fwd.hpp:
	* src/boost/mpl/has_xxx.hpp:
	* src/boost/mpl/identity.hpp:
	* src/boost/mpl/if.hpp:
	* src/boost/mpl/index_if.hpp:
	* src/boost/mpl/index_of.hpp:
	* src/boost/mpl/inherit.hpp:
	* src/boost/mpl/inherit_linearly.hpp:
	* src/boost/mpl/insert.hpp:
	* src/boost/mpl/insert_fwd.hpp:
	* src/boost/mpl/insert_range.hpp:
	* src/boost/mpl/insert_range_fwd.hpp:
	* src/boost/mpl/inserter.hpp:
	* src/boost/mpl/int.hpp:
	* src/boost/mpl/int_fwd.hpp:
	* src/boost/mpl/integral_c.hpp:
	* src/boost/mpl/integral_c_fwd.hpp:
	* src/boost/mpl/integral_c_tag.hpp:
	* src/boost/mpl/is_placeholder.hpp:
	* src/boost/mpl/is_sequence.hpp:
	* src/boost/mpl/iter_fold.hpp:
	* src/boost/mpl/iter_fold_if.hpp:
	* src/boost/mpl/iterator_category.hpp:
	* src/boost/mpl/iterator_range.hpp:
	* src/boost/mpl/iterator_tags.hpp:
	* src/boost/mpl/joint_view.hpp:
	* src/boost/mpl/key_type.hpp:
	* src/boost/mpl/key_type_fwd.hpp:
	* src/boost/mpl/lambda.hpp:
	* src/boost/mpl/lambda_fwd.hpp:
	* src/boost/mpl/less.hpp:
	* src/boost/mpl/less_equal.hpp:
	* src/boost/mpl/limits/arity.hpp:
	* src/boost/mpl/limits/list.hpp:
	* src/boost/mpl/limits/map.hpp:
	* src/boost/mpl/limits/set.hpp:
	* src/boost/mpl/limits/unrolling.hpp:
	* src/boost/mpl/limits/vector.hpp:
	* src/boost/mpl/list.hpp:
	* src/boost/mpl/list/aux_/O1_size.hpp:
	* src/boost/mpl/list/aux_/begin_end.hpp:
	* src/boost/mpl/list/aux_/clear.hpp:
	* src/boost/mpl/list/aux_/empty.hpp:
	* src/boost/mpl/list/aux_/front.hpp:
	* src/boost/mpl/list/aux_/include_preprocessed.hpp:
	* src/boost/mpl/list/aux_/item.hpp:
	* src/boost/mpl/list/aux_/iterator.hpp:
	* src/boost/mpl/list/aux_/numbered.hpp:
	* src/boost/mpl/list/aux_/numbered_c.hpp:
	* src/boost/mpl/list/aux_/pop_front.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list10.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list10_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list20.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list20_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list30.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list30_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list40.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list40_c.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list50.hpp:
	* src/boost/mpl/list/aux_/preprocessed/plain/list50_c.hpp:
	* src/boost/mpl/list/aux_/push_back.hpp:
	* src/boost/mpl/list/aux_/push_front.hpp:
	* src/boost/mpl/list/aux_/size.hpp:
	* src/boost/mpl/list/aux_/tag.hpp:
	* src/boost/mpl/list/list0.hpp:
	* src/boost/mpl/list/list0_c.hpp:
	* src/boost/mpl/list/list10.hpp:
	* src/boost/mpl/list/list10_c.hpp:
	* src/boost/mpl/list/list20.hpp:
	* src/boost/mpl/list/list20_c.hpp:
	* src/boost/mpl/list/list30.hpp:
	* src/boost/mpl/list/list30_c.hpp:
	* src/boost/mpl/list/list40.hpp:
	* src/boost/mpl/list/list40_c.hpp:
	* src/boost/mpl/list/list50.hpp:
	* src/boost/mpl/list/list50_c.hpp:
	* src/boost/mpl/list_c.hpp:
	* src/boost/mpl/logical.hpp:
	* src/boost/mpl/long.hpp:
	* src/boost/mpl/long_fwd.hpp:
	* src/boost/mpl/lower_bound.hpp:
	* src/boost/mpl/map.hpp:
	* src/boost/mpl/map/aux_/at_impl.hpp:
	* src/boost/mpl/map/aux_/begin_end_impl.hpp:
	* src/boost/mpl/map/aux_/clear_impl.hpp:
	* src/boost/mpl/map/aux_/contains_impl.hpp:
	* src/boost/mpl/map/aux_/empty_impl.hpp:
	* src/boost/mpl/map/aux_/erase_impl.hpp:
	* src/boost/mpl/map/aux_/erase_key_impl.hpp:
	* src/boost/mpl/map/aux_/has_key_impl.hpp:
	* src/boost/mpl/map/aux_/include_preprocessed.hpp:
	* src/boost/mpl/map/aux_/insert_impl.hpp:
	* src/boost/mpl/map/aux_/item.hpp:
	* src/boost/mpl/map/aux_/iterator.hpp:
	* src/boost/mpl/map/aux_/key_type_impl.hpp:
	* src/boost/mpl/map/aux_/map0.hpp:
	* src/boost/mpl/map/aux_/numbered.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/no_ctps/map50.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/plain/map50.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map10.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map20.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map30.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map40.hpp:
	* src/boost/mpl/map/aux_/preprocessed/typeof_based/map50.hpp:
	* src/boost/mpl/map/aux_/size_impl.hpp:
	* src/boost/mpl/map/aux_/tag.hpp:
	* src/boost/mpl/map/aux_/value_type_impl.hpp:
	* src/boost/mpl/map/map0.hpp:
	* src/boost/mpl/map/map10.hpp:
	* src/boost/mpl/map/map20.hpp:
	* src/boost/mpl/map/map30.hpp:
	* src/boost/mpl/map/map40.hpp:
	* src/boost/mpl/map/map50.hpp:
	* src/boost/mpl/math/fixed_c.hpp:
	* src/boost/mpl/math/is_even.hpp:
	* src/boost/mpl/math/rational_c.hpp:
	* src/boost/mpl/max.hpp:
	* src/boost/mpl/max_element.hpp:
	* src/boost/mpl/min.hpp:
	* src/boost/mpl/min_element.hpp:
	* src/boost/mpl/min_max.hpp:
	* src/boost/mpl/minus.hpp:
	* src/boost/mpl/modulus.hpp:
	* src/boost/mpl/multiplies.hpp:
	* src/boost/mpl/multiset/aux_/count_impl.hpp:
	* src/boost/mpl/multiset/aux_/insert_impl.hpp:
	* src/boost/mpl/multiset/aux_/item.hpp:
	* src/boost/mpl/multiset/aux_/multiset0.hpp:
	* src/boost/mpl/multiset/aux_/tag.hpp:
	* src/boost/mpl/multiset/multiset0.hpp:
	* src/boost/mpl/negate.hpp:
	* src/boost/mpl/next.hpp:
	* src/boost/mpl/next_prior.hpp:
	* src/boost/mpl/not.hpp:
	* src/boost/mpl/not_equal_to.hpp:
	* src/boost/mpl/numeric_cast.hpp:
	* src/boost/mpl/or.hpp:
	* src/boost/mpl/order.hpp:
	* src/boost/mpl/order_fwd.hpp:
	* src/boost/mpl/pair.hpp:
	* src/boost/mpl/pair_view.hpp:
	* src/boost/mpl/partition.hpp:
	* src/boost/mpl/placeholders.hpp:
	* src/boost/mpl/plus.hpp:
	* src/boost/mpl/pop_back.hpp:
	* src/boost/mpl/pop_back_fwd.hpp:
	* src/boost/mpl/pop_front.hpp:
	* src/boost/mpl/pop_front_fwd.hpp:
	* src/boost/mpl/print.hpp:
	* src/boost/mpl/prior.hpp:
	* src/boost/mpl/protect.hpp:
	* src/boost/mpl/push_back.hpp:
	* src/boost/mpl/push_back_fwd.hpp:
	* src/boost/mpl/push_front.hpp:
	* src/boost/mpl/push_front_fwd.hpp:
	* src/boost/mpl/quote.hpp:
	* src/boost/mpl/range_c.hpp:
	* src/boost/mpl/remove.hpp:
	* src/boost/mpl/remove_if.hpp:
	* src/boost/mpl/replace.hpp:
	* src/boost/mpl/replace_if.hpp:
	* src/boost/mpl/reverse.hpp:
	* src/boost/mpl/reverse_fold.hpp:
	* src/boost/mpl/reverse_iter_fold.hpp:
	* src/boost/mpl/same_as.hpp:
	* src/boost/mpl/sequence_tag.hpp:
	* src/boost/mpl/sequence_tag_fwd.hpp:
	* src/boost/mpl/set.hpp:
	* src/boost/mpl/set/aux_/at_impl.hpp:
	* src/boost/mpl/set/aux_/begin_end_impl.hpp:
	* src/boost/mpl/set/aux_/clear_impl.hpp:
	* src/boost/mpl/set/aux_/empty_impl.hpp:
	* src/boost/mpl/set/aux_/erase_impl.hpp:
	* src/boost/mpl/set/aux_/erase_key_impl.hpp:
	* src/boost/mpl/set/aux_/has_key_impl.hpp:
	* src/boost/mpl/set/aux_/include_preprocessed.hpp:
	* src/boost/mpl/set/aux_/insert_impl.hpp:
	* src/boost/mpl/set/aux_/item.hpp:
	* src/boost/mpl/set/aux_/iterator.hpp:
	* src/boost/mpl/set/aux_/key_type_impl.hpp:
	* src/boost/mpl/set/aux_/numbered.hpp:
	* src/boost/mpl/set/aux_/numbered_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set10.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set10_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set20.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set20_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set30.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set30_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set40.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set40_c.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set50.hpp:
	* src/boost/mpl/set/aux_/preprocessed/plain/set50_c.hpp:
	* src/boost/mpl/set/aux_/set0.hpp:
	* src/boost/mpl/set/aux_/size_impl.hpp:
	* src/boost/mpl/set/aux_/tag.hpp:
	* src/boost/mpl/set/aux_/value_type_impl.hpp:
	* src/boost/mpl/set/set0.hpp:
	* src/boost/mpl/set/set0_c.hpp:
	* src/boost/mpl/set/set10.hpp:
	* src/boost/mpl/set/set10_c.hpp:
	* src/boost/mpl/set/set20.hpp:
	* src/boost/mpl/set/set20_c.hpp:
	* src/boost/mpl/set/set30.hpp:
	* src/boost/mpl/set/set30_c.hpp:
	* src/boost/mpl/set/set40.hpp:
	* src/boost/mpl/set/set40_c.hpp:
	* src/boost/mpl/set/set50.hpp:
	* src/boost/mpl/set/set50_c.hpp:
	* src/boost/mpl/set_c.hpp:
	* src/boost/mpl/shift_left.hpp:
	* src/boost/mpl/shift_right.hpp:
	* src/boost/mpl/single_view.hpp:
	* src/boost/mpl/size.hpp:
	* src/boost/mpl/size_fwd.hpp:
	* src/boost/mpl/size_t.hpp:
	* src/boost/mpl/size_t_fwd.hpp:
	* src/boost/mpl/sizeof.hpp:
	* src/boost/mpl/sort.hpp:
	* src/boost/mpl/stable_partition.hpp:
	* src/boost/mpl/switch.hpp:
	* src/boost/mpl/tag.hpp:
	* src/boost/mpl/times.hpp:
	* src/boost/mpl/transform.hpp:
	* src/boost/mpl/transform_view.hpp:
	* src/boost/mpl/unique.hpp:
	* src/boost/mpl/unpack_args.hpp:
	* src/boost/mpl/upper_bound.hpp:
	* src/boost/mpl/value_type.hpp:
	* src/boost/mpl/value_type_fwd.hpp:
	* src/boost/mpl/vector.hpp:
	* src/boost/mpl/vector/aux_/O1_size.hpp:
	* src/boost/mpl/vector/aux_/at.hpp:
	* src/boost/mpl/vector/aux_/back.hpp:
	* src/boost/mpl/vector/aux_/begin_end.hpp:
	* src/boost/mpl/vector/aux_/clear.hpp:
	* src/boost/mpl/vector/aux_/empty.hpp:
	* src/boost/mpl/vector/aux_/front.hpp:
	* src/boost/mpl/vector/aux_/include_preprocessed.hpp:
	* src/boost/mpl/vector/aux_/item.hpp:
	* src/boost/mpl/vector/aux_/iterator.hpp:
	* src/boost/mpl/vector/aux_/numbered.hpp:
	* src/boost/mpl/vector/aux_/numbered_c.hpp:
	* src/boost/mpl/vector/aux_/pop_back.hpp:
	* src/boost/mpl/vector/aux_/pop_front.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/no_ctps/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/plain/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp:
	* src/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp:
	* src/boost/mpl/vector/aux_/push_back.hpp:
	* src/boost/mpl/vector/aux_/push_front.hpp:
	* src/boost/mpl/vector/aux_/size.hpp:
	* src/boost/mpl/vector/aux_/tag.hpp:
	* src/boost/mpl/vector/aux_/vector0.hpp:
	* src/boost/mpl/vector/vector0.hpp:
	* src/boost/mpl/vector/vector0_c.hpp:
	* src/boost/mpl/vector/vector10.hpp:
	* src/boost/mpl/vector/vector10_c.hpp:
	* src/boost/mpl/vector/vector20.hpp:
	* src/boost/mpl/vector/vector20_c.hpp:
	* src/boost/mpl/vector/vector30.hpp:
	* src/boost/mpl/vector/vector30_c.hpp:
	* src/boost/mpl/vector/vector40.hpp:
	* src/boost/mpl/vector/vector40_c.hpp:
	* src/boost/mpl/vector/vector50.hpp:
	* src/boost/mpl/vector/vector50_c.hpp:
	* src/boost/mpl/vector_c.hpp:
	* src/boost/mpl/void.hpp:
	* src/boost/mpl/void_fwd.hpp:
	* src/boost/mpl/zip_view.hpp:
	* src/boost/next_prior.hpp:
	* src/boost/noncopyable.hpp:
	* src/boost/pointer_cast.hpp:
	* src/boost/preprocessor.hpp:
	* src/boost/preprocessor/arithmetic.hpp:
	* src/boost/preprocessor/arithmetic/add.hpp:
	* src/boost/preprocessor/arithmetic/dec.hpp:
	* src/boost/preprocessor/arithmetic/detail/div_base.hpp:
	* src/boost/preprocessor/arithmetic/div.hpp:
	* src/boost/preprocessor/arithmetic/inc.hpp:
	* src/boost/preprocessor/arithmetic/mod.hpp:
	* src/boost/preprocessor/arithmetic/mul.hpp:
	* src/boost/preprocessor/arithmetic/sub.hpp:
	* src/boost/preprocessor/array.hpp:
	* src/boost/preprocessor/array/data.hpp:
	* src/boost/preprocessor/array/elem.hpp:
	* src/boost/preprocessor/array/insert.hpp:
	* src/boost/preprocessor/array/pop_back.hpp:
	* src/boost/preprocessor/array/pop_front.hpp:
	* src/boost/preprocessor/array/push_back.hpp:
	* src/boost/preprocessor/array/push_front.hpp:
	* src/boost/preprocessor/array/remove.hpp:
	* src/boost/preprocessor/array/replace.hpp:
	* src/boost/preprocessor/array/reverse.hpp:
	* src/boost/preprocessor/array/size.hpp:
	* src/boost/preprocessor/assert_msg.hpp:
	* src/boost/preprocessor/cat.hpp:
	* src/boost/preprocessor/comma.hpp:
	* src/boost/preprocessor/comma_if.hpp:
	* src/boost/preprocessor/comparison.hpp:
	* src/boost/preprocessor/comparison/equal.hpp:
	* src/boost/preprocessor/comparison/greater.hpp:
	* src/boost/preprocessor/comparison/greater_equal.hpp:
	* src/boost/preprocessor/comparison/less.hpp:
	* src/boost/preprocessor/comparison/less_equal.hpp:
	* src/boost/preprocessor/comparison/not_equal.hpp:
	* src/boost/preprocessor/config/config.hpp:
	* src/boost/preprocessor/config/limits.hpp:
	* src/boost/preprocessor/control.hpp:
	* src/boost/preprocessor/control/deduce_d.hpp:
	* src/boost/preprocessor/control/detail/dmc/while.hpp:
	* src/boost/preprocessor/control/detail/edg/while.hpp:
	* src/boost/preprocessor/control/detail/msvc/while.hpp:
	* src/boost/preprocessor/control/detail/while.hpp:
	* src/boost/preprocessor/control/expr_if.hpp:
	* src/boost/preprocessor/control/expr_iif.hpp:
	* src/boost/preprocessor/control/if.hpp:
	* src/boost/preprocessor/control/iif.hpp:
	* src/boost/preprocessor/control/while.hpp:
	* src/boost/preprocessor/debug.hpp:
	* src/boost/preprocessor/debug/assert.hpp:
	* src/boost/preprocessor/debug/error.hpp:
	* src/boost/preprocessor/debug/line.hpp:
	* src/boost/preprocessor/dec.hpp:
	* src/boost/preprocessor/detail/auto_rec.hpp:
	* src/boost/preprocessor/detail/check.hpp:
	* src/boost/preprocessor/detail/dmc/auto_rec.hpp:
	* src/boost/preprocessor/detail/is_binary.hpp:
	* src/boost/preprocessor/detail/is_nullary.hpp:
	* src/boost/preprocessor/detail/is_unary.hpp:
	* src/boost/preprocessor/detail/null.hpp:
	* src/boost/preprocessor/detail/split.hpp:
	* src/boost/preprocessor/empty.hpp:
	* src/boost/preprocessor/enum.hpp:
	* src/boost/preprocessor/enum_params.hpp:
	* src/boost/preprocessor/enum_params_with_a_default.hpp:
	* src/boost/preprocessor/enum_params_with_defaults.hpp:
	* src/boost/preprocessor/enum_shifted.hpp:
	* src/boost/preprocessor/enum_shifted_params.hpp:
	* src/boost/preprocessor/expand.hpp:
	* src/boost/preprocessor/expr_if.hpp:
	* src/boost/preprocessor/facilities.hpp:
	* src/boost/preprocessor/facilities/apply.hpp:
	* src/boost/preprocessor/facilities/empty.hpp:
	* src/boost/preprocessor/facilities/expand.hpp:
	* src/boost/preprocessor/facilities/identity.hpp:
	* src/boost/preprocessor/facilities/intercept.hpp:
	* src/boost/preprocessor/facilities/is_1.hpp:
	* src/boost/preprocessor/facilities/is_empty.hpp:
	* src/boost/preprocessor/facilities/is_empty_or_1.hpp:
	* src/boost/preprocessor/for.hpp:
	* src/boost/preprocessor/identity.hpp:
	* src/boost/preprocessor/if.hpp:
	* src/boost/preprocessor/inc.hpp:
	* src/boost/preprocessor/iterate.hpp:
	* src/boost/preprocessor/iteration.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower1.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower2.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower3.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower4.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/lower5.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper1.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper2.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper3.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper4.hpp:
	* src/boost/preprocessor/iteration/detail/bounds/upper5.hpp:
	* src/boost/preprocessor/iteration/detail/finish.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward1.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward2.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward3.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward4.hpp:
	* src/boost/preprocessor/iteration/detail/iter/forward5.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse1.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse2.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse3.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse4.hpp:
	* src/boost/preprocessor/iteration/detail/iter/reverse5.hpp:
	* src/boost/preprocessor/iteration/detail/local.hpp:
	* src/boost/preprocessor/iteration/detail/rlocal.hpp:
	* src/boost/preprocessor/iteration/detail/self.hpp:
	* src/boost/preprocessor/iteration/detail/start.hpp:
	* src/boost/preprocessor/iteration/iterate.hpp:
	* src/boost/preprocessor/iteration/local.hpp:
	* src/boost/preprocessor/iteration/self.hpp:
	* src/boost/preprocessor/library.hpp:
	* src/boost/preprocessor/limits.hpp:
	* src/boost/preprocessor/list.hpp:
	* src/boost/preprocessor/list/adt.hpp:
	* src/boost/preprocessor/list/append.hpp:
	* src/boost/preprocessor/list/at.hpp:
	* src/boost/preprocessor/list/cat.hpp:
	* src/boost/preprocessor/list/detail/dmc/fold_left.hpp:
	* src/boost/preprocessor/list/detail/edg/fold_left.hpp:
	* src/boost/preprocessor/list/detail/edg/fold_right.hpp:
	* src/boost/preprocessor/list/detail/fold_left.hpp:
	* src/boost/preprocessor/list/detail/fold_right.hpp:
	* src/boost/preprocessor/list/enum.hpp:
	* src/boost/preprocessor/list/filter.hpp:
	* src/boost/preprocessor/list/first_n.hpp:
	* src/boost/preprocessor/list/fold_left.hpp:
	* src/boost/preprocessor/list/fold_right.hpp:
	* src/boost/preprocessor/list/for_each.hpp:
	* src/boost/preprocessor/list/for_each_i.hpp:
	* src/boost/preprocessor/list/for_each_product.hpp:
	* src/boost/preprocessor/list/rest_n.hpp:
	* src/boost/preprocessor/list/reverse.hpp:
	* src/boost/preprocessor/list/size.hpp:
	* src/boost/preprocessor/list/to_tuple.hpp:
	* src/boost/preprocessor/list/transform.hpp:
	* src/boost/preprocessor/logical.hpp:
	* src/boost/preprocessor/logical/and.hpp:
	* src/boost/preprocessor/logical/bitand.hpp:
	* src/boost/preprocessor/logical/bitnor.hpp:
	* src/boost/preprocessor/logical/bitor.hpp:
	* src/boost/preprocessor/logical/bitxor.hpp:
	* src/boost/preprocessor/logical/bool.hpp:
	* src/boost/preprocessor/logical/compl.hpp:
	* src/boost/preprocessor/logical/nor.hpp:
	* src/boost/preprocessor/logical/not.hpp:
	* src/boost/preprocessor/logical/or.hpp:
	* src/boost/preprocessor/logical/xor.hpp:
	* src/boost/preprocessor/max.hpp:
	* src/boost/preprocessor/min.hpp:
	* src/boost/preprocessor/punctuation.hpp:
	* src/boost/preprocessor/punctuation/comma.hpp:
	* src/boost/preprocessor/punctuation/comma_if.hpp:
	* src/boost/preprocessor/punctuation/paren.hpp:
	* src/boost/preprocessor/punctuation/paren_if.hpp:
	* src/boost/preprocessor/repeat.hpp:
	* src/boost/preprocessor/repeat_2nd.hpp:
	* src/boost/preprocessor/repeat_3rd.hpp:
	* src/boost/preprocessor/repeat_from_to.hpp:
	* src/boost/preprocessor/repeat_from_to_2nd.hpp:
	* src/boost/preprocessor/repeat_from_to_3rd.hpp:
	* src/boost/preprocessor/repetition.hpp:
	* src/boost/preprocessor/repetition/deduce_r.hpp:
	* src/boost/preprocessor/repetition/deduce_z.hpp:
	* src/boost/preprocessor/repetition/detail/dmc/for.hpp:
	* src/boost/preprocessor/repetition/detail/edg/for.hpp:
	* src/boost/preprocessor/repetition/detail/for.hpp:
	* src/boost/preprocessor/repetition/detail/msvc/for.hpp:
	* src/boost/preprocessor/repetition/enum.hpp:
	* src/boost/preprocessor/repetition/enum_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_params.hpp:
	* src/boost/preprocessor/repetition/enum_params_with_a_default.hpp:
	* src/boost/preprocessor/repetition/enum_params_with_defaults.hpp:
	* src/boost/preprocessor/repetition/enum_shifted.hpp:
	* src/boost/preprocessor/repetition/enum_shifted_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_shifted_params.hpp:
	* src/boost/preprocessor/repetition/enum_trailing.hpp:
	* src/boost/preprocessor/repetition/enum_trailing_binary_params.hpp:
	* src/boost/preprocessor/repetition/enum_trailing_params.hpp:
	* src/boost/preprocessor/repetition/for.hpp:
	* src/boost/preprocessor/repetition/repeat.hpp:
	* src/boost/preprocessor/repetition/repeat_from_to.hpp:
	* src/boost/preprocessor/selection.hpp:
	* src/boost/preprocessor/selection/max.hpp:
	* src/boost/preprocessor/selection/min.hpp:
	* src/boost/preprocessor/seq.hpp:
	* src/boost/preprocessor/seq/cat.hpp:
	* src/boost/preprocessor/seq/detail/split.hpp:
	* src/boost/preprocessor/seq/elem.hpp:
	* src/boost/preprocessor/seq/enum.hpp:
	* src/boost/preprocessor/seq/filter.hpp:
	* src/boost/preprocessor/seq/first_n.hpp:
	* src/boost/preprocessor/seq/fold_left.hpp:
	* src/boost/preprocessor/seq/fold_right.hpp:
	* src/boost/preprocessor/seq/for_each.hpp:
	* src/boost/preprocessor/seq/for_each_i.hpp:
	* src/boost/preprocessor/seq/for_each_product.hpp:
	* src/boost/preprocessor/seq/insert.hpp:
	* src/boost/preprocessor/seq/pop_back.hpp:
	* src/boost/preprocessor/seq/pop_front.hpp:
	* src/boost/preprocessor/seq/push_back.hpp:
	* src/boost/preprocessor/seq/push_front.hpp:
	* src/boost/preprocessor/seq/remove.hpp:
	* src/boost/preprocessor/seq/replace.hpp:
	* src/boost/preprocessor/seq/rest_n.hpp:
	* src/boost/preprocessor/seq/reverse.hpp:
	* src/boost/preprocessor/seq/seq.hpp:
	* src/boost/preprocessor/seq/size.hpp:
	* src/boost/preprocessor/seq/subseq.hpp:
	* src/boost/preprocessor/seq/to_array.hpp:
	* src/boost/preprocessor/seq/to_tuple.hpp:
	* src/boost/preprocessor/seq/transform.hpp:
	* src/boost/preprocessor/slot.hpp:
	* src/boost/preprocessor/slot/counter.hpp:
	* src/boost/preprocessor/slot/detail/counter.hpp:
	* src/boost/preprocessor/slot/detail/def.hpp:
	* src/boost/preprocessor/slot/detail/shared.hpp:
	* src/boost/preprocessor/slot/detail/slot1.hpp:
	* src/boost/preprocessor/slot/detail/slot2.hpp:
	* src/boost/preprocessor/slot/detail/slot3.hpp:
	* src/boost/preprocessor/slot/detail/slot4.hpp:
	* src/boost/preprocessor/slot/detail/slot5.hpp:
	* src/boost/preprocessor/slot/slot.hpp:
	* src/boost/preprocessor/stringize.hpp:
	* src/boost/preprocessor/tuple.hpp:
	* src/boost/preprocessor/tuple/eat.hpp:
	* src/boost/preprocessor/tuple/elem.hpp:
	* src/boost/preprocessor/tuple/rem.hpp:
	* src/boost/preprocessor/tuple/reverse.hpp:
	* src/boost/preprocessor/tuple/to_list.hpp:
	* src/boost/preprocessor/tuple/to_seq.hpp:
	* src/boost/preprocessor/while.hpp:
	* src/boost/preprocessor/wstringize.hpp:
	* src/boost/range.hpp:
	* src/boost/range/begin.hpp:
	* src/boost/range/concepts.hpp:
	* src/boost/range/config.hpp:
	* src/boost/range/const_iterator.hpp:
	* src/boost/range/const_reverse_iterator.hpp:
	* src/boost/range/detail/begin.hpp:
	* src/boost/range/detail/collection_traits.hpp:
	* src/boost/range/detail/collection_traits_detail.hpp:
	* src/boost/range/detail/common.hpp:
	* src/boost/range/detail/const_iterator.hpp:
	* src/boost/range/detail/difference_type.hpp:
	* src/boost/range/detail/empty.hpp:
	* src/boost/range/detail/end.hpp:
	* src/boost/range/detail/implementation_help.hpp:
	* src/boost/range/detail/iterator.hpp:
	* src/boost/range/detail/mfc/carray.hpp:
	* src/boost/range/detail/mfc/cstring.hpp:
	* src/boost/range/detail/remove_extent.hpp:
	* src/boost/range/detail/sfinae.hpp:
	* src/boost/range/detail/size.hpp:
	* src/boost/range/detail/size_type.hpp:
	* src/boost/range/detail/sizer.hpp:
	* src/boost/range/detail/value_type.hpp:
	* src/boost/range/detail/vc6/end.hpp:
	* src/boost/range/detail/vc6/size.hpp:
	* src/boost/range/difference_type.hpp:
	* src/boost/range/empty.hpp:
	* src/boost/range/end.hpp:
	* src/boost/range/functions.hpp:
	* src/boost/range/iterator.hpp:
	* src/boost/range/iterator_range.hpp:
	* src/boost/range/metafunctions.hpp:
	* src/boost/range/rbegin.hpp:
	* src/boost/range/rend.hpp:
	* src/boost/range/result_iterator.hpp:
	* src/boost/range/reverse_iterator.hpp:
	* src/boost/range/reverse_result_iterator.hpp:
	* src/boost/range/size.hpp:
	* src/boost/range/size_type.hpp:
	* src/boost/range/sub_range.hpp:
	* src/boost/range/value_type.hpp:
	* src/boost/ref.hpp:
	* src/boost/smart_cast.hpp:
	* src/boost/static_assert.hpp:
	* src/boost/static_warning.hpp:
	* src/boost/type_traits.hpp:
	* src/boost/type_traits/add_const.hpp:
	* src/boost/type_traits/add_cv.hpp:
	* src/boost/type_traits/add_pointer.hpp:
	* src/boost/type_traits/add_reference.hpp:
	* src/boost/type_traits/add_volatile.hpp:
	* src/boost/type_traits/aligned_storage.hpp:
	* src/boost/type_traits/alignment_of.hpp:
	* src/boost/type_traits/alignment_traits.hpp:
	* src/boost/type_traits/arithmetic_traits.hpp:
	* src/boost/type_traits/array_traits.hpp:
	* src/boost/type_traits/broken_compiler_spec.hpp:
	* src/boost/type_traits/composite_traits.hpp:
	* src/boost/type_traits/config.hpp:
	* src/boost/type_traits/conversion_traits.hpp:
	* src/boost/type_traits/cv_traits.hpp:
	* src/boost/type_traits/decay.hpp:
	* src/boost/type_traits/detail/bool_trait_def.hpp:
	* src/boost/type_traits/detail/bool_trait_undef.hpp:
	* src/boost/type_traits/detail/cv_traits_impl.hpp:
	* src/boost/type_traits/detail/false_result.hpp:
	* src/boost/type_traits/detail/ice_and.hpp:
	* src/boost/type_traits/detail/ice_eq.hpp:
	* src/boost/type_traits/detail/ice_not.hpp:
	* src/boost/type_traits/detail/ice_or.hpp:
	* src/boost/type_traits/detail/is_function_ptr_helper.hpp:
	* src/boost/type_traits/detail/is_function_ptr_tester.hpp:
	* src/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp:
	* src/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp:
	* src/boost/type_traits/detail/size_t_trait_def.hpp:
	* src/boost/type_traits/detail/size_t_trait_undef.hpp:
	* src/boost/type_traits/detail/template_arity_spec.hpp:
	* src/boost/type_traits/detail/type_trait_def.hpp:
	* src/boost/type_traits/detail/type_trait_undef.hpp:
	* src/boost/type_traits/detail/wrap.hpp:
	* src/boost/type_traits/detail/yes_no_type.hpp:
	* src/boost/type_traits/extent.hpp:
	* src/boost/type_traits/function_traits.hpp:
	* src/boost/type_traits/has_nothrow_assign.hpp:
	* src/boost/type_traits/has_nothrow_constructor.hpp:
	* src/boost/type_traits/has_nothrow_copy.hpp:
	* src/boost/type_traits/has_nothrow_destructor.hpp:
	* src/boost/type_traits/has_trivial_assign.hpp:
	* src/boost/type_traits/has_trivial_constructor.hpp:
	* src/boost/type_traits/has_trivial_copy.hpp:
	* src/boost/type_traits/has_trivial_destructor.hpp:
	* src/boost/type_traits/has_virtual_destructor.hpp:
	* src/boost/type_traits/ice.hpp:
	* src/boost/type_traits/integral_constant.hpp:
	* src/boost/type_traits/intrinsics.hpp:
	* src/boost/type_traits/is_abstract.hpp:
	* src/boost/type_traits/is_arithmetic.hpp:
	* src/boost/type_traits/is_array.hpp:
	* src/boost/type_traits/is_base_and_derived.hpp:
	* src/boost/type_traits/is_base_of.hpp:
	* src/boost/type_traits/is_class.hpp:
	* src/boost/type_traits/is_compound.hpp:
	* src/boost/type_traits/is_const.hpp:
	* src/boost/type_traits/is_convertible.hpp:
	* src/boost/type_traits/is_empty.hpp:
	* src/boost/type_traits/is_enum.hpp:
	* src/boost/type_traits/is_float.hpp:
	* src/boost/type_traits/is_floating_point.hpp:
	* src/boost/type_traits/is_function.hpp:
	* src/boost/type_traits/is_fundamental.hpp:
	* src/boost/type_traits/is_integral.hpp:
	* src/boost/type_traits/is_member_function_pointer.hpp:
	* src/boost/type_traits/is_member_object_pointer.hpp:
	* src/boost/type_traits/is_member_pointer.hpp:
	* src/boost/type_traits/is_object.hpp:
	* src/boost/type_traits/is_pod.hpp:
	* src/boost/type_traits/is_pointer.hpp:
	* src/boost/type_traits/is_polymorphic.hpp:
	* src/boost/type_traits/is_reference.hpp:
	* src/boost/type_traits/is_same.hpp:
	* src/boost/type_traits/is_scalar.hpp:
	* src/boost/type_traits/is_signed.hpp:
	* src/boost/type_traits/is_stateless.hpp:
	* src/boost/type_traits/is_union.hpp:
	* src/boost/type_traits/is_unsigned.hpp:
	* src/boost/type_traits/is_void.hpp:
	* src/boost/type_traits/is_volatile.hpp:
	* src/boost/type_traits/msvc/remove_all_extents.hpp:
	* src/boost/type_traits/msvc/remove_bounds.hpp:
	* src/boost/type_traits/msvc/remove_const.hpp:
	* src/boost/type_traits/msvc/remove_cv.hpp:
	* src/boost/type_traits/msvc/remove_extent.hpp:
	* src/boost/type_traits/msvc/remove_pointer.hpp:
	* src/boost/type_traits/msvc/remove_reference.hpp:
	* src/boost/type_traits/msvc/remove_volatile.hpp:
	* src/boost/type_traits/msvc/typeof.hpp:
	* src/boost/type_traits/object_traits.hpp:
	* src/boost/type_traits/rank.hpp:
	* src/boost/type_traits/reference_traits.hpp:
	* src/boost/type_traits/remove_all_extents.hpp:
	* src/boost/type_traits/remove_bounds.hpp:
	* src/boost/type_traits/remove_const.hpp:
	* src/boost/type_traits/remove_cv.hpp:
	* src/boost/type_traits/remove_extent.hpp:
	* src/boost/type_traits/remove_pointer.hpp:
	* src/boost/type_traits/remove_reference.hpp:
	* src/boost/type_traits/remove_volatile.hpp:
	* src/boost/type_traits/same_traits.hpp:
	* src/boost/type_traits/transform_traits.hpp:
	* src/boost/type_traits/transform_traits_spec.hpp:
	* src/boost/type_traits/type_with_alignment.hpp:
	* src/boost/utility.hpp:
	* src/boost/utility/addressof.hpp:
	* src/boost/utility/base_from_member.hpp:
	* src/boost/utility/compare_pointees.hpp:
	* src/boost/utility/detail/in_place_factory_prefix.hpp:
	* src/boost/utility/detail/in_place_factory_suffix.hpp:
	* src/boost/utility/detail/result_of_iterate.hpp:
	* src/boost/utility/enable_if.hpp:
	* src/boost/utility/in_place_factory.hpp:
	* src/boost/utility/result_of.hpp:
	* src/boost/utility/typed_in_place_factory.hpp:
	* src/boost/utility/value_init.hpp:

	using boost::algorithm::string is okay from now on

2008-03-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionCmdline.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:
	* src/client-test-app.cpp:

	added testing of config creation, fixed setting of default values

2008-03-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	infrastructure for config tree testing: scanFiles/createFiles

2008-03-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/FileConfigNode.cpp:
	* src/FileConfigTree.cpp:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:

	moved utility code into separate file: directory iteration, rm
	-r, mkdir -p

2008-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSourceRegister.cpp:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSourceRegister.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/Makefile.am:
	* src/SQLiteContactSourceRegister.cpp:
	* src/SyncEvolutionUtil.cpp:
	* src/SyncEvolutionUtil.h:
	* src/client-test-app.cpp:

	cleaned up test registration

2008-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/evo.supp:

	recreated Evolution suppressions after fixing some leaks caused
	by SyncEvolution

2008-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSourceRegister.cpp:
	* src/SyncEvolutionConfig.cpp:

	fixed instantiating EvolutionSyncSource under unique name

2008-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteUtil.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/TrackingSyncSource.cpp:
	* src/client-test-app.cpp:
	* src/vocl/VConverter.cpp:
	* src/vocl/VObject.cpp:
	* src/vocl/VProperty.cpp:

	fixed compiler warnings and unit test of EvolutionContactSource

2008-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure.in:
	* src/Makefile.am:

	added SYNCEVOLUTION_CXXFLAGS: use it to set flags for
	SyncEvolution source files

2008-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	re-added "testclean" target: removes files created during testing

2008-03-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fix for the cleanup fix: client-api.build must be removed by
	distclean, not clean

2008-03-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fixed dist + distcheck

2008-03-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/ConfigTree.h:
	* src/FileConfigTree.cpp:
	* src/FileConfigTree.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	cleaned up change tracking node handling, added copying of it
	during migration

2008-03-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/ConfigNode.h:
	* src/FileConfigNode.cpp:
	* src/FileConfigNode.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:

	cleaned up const/non-const methods, added filtering of const
	nodes

2008-03-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	adapted to new normalized name for disabled sync mode

2008-03-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	accept 'bin' as alias for 'b64'

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/ConfigTree.h:
	* src/FileConfigTree.cpp:
	* src/FileConfigTree.h:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionCmdline.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:

	implemented --migrate and --configure

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	avoid printing empty comments in --print-config

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/FileConfigTree.cpp:
	* src/SQLiteContactSourceRegister.cpp:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/SyncEvolutionUtil.h:

	implemented server config templates (scheduleworld, funambol,
	synthesis) and printing of them

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionCmdline.cpp:

	minor fixes for command line handling

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/ConfigNode.h:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionContactSourceRegister.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/FileConfigNode.h:
	* src/FilterConfigNode.h:
	* src/Makefile.am:
	* src/SQLiteContactSourceRegister.cpp:
	* src/SyncEvolutionCmdline.cpp:
	* src/SyncEvolutionCmdline.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/SyncEvolutionUtil.h:
	* src/VolatileConfigNode.h:

	next step in the configuration rewrite

2008-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:

	SQLiteContactSource now mentions the file:/// access to databases

2008-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/FileConfigNode.cpp:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/SyncEvolutionCmdline.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/syncevolution.cpp:

	first part of the new command line handling

2008-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/AddressBookSource.cpp:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteUtil.cpp:
	* src/SQLiteUtil.h:
	* src/TrackingSyncSource.cpp:
	* test/evo.supp:

	fixed some memory leaks for results of
	e_book_get_contacts/changes and
	e_cal_get_object_list_as_comp/e_cal_get_changes

2008-03-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/client.supp:
	* test/evo.supp:
	* test/sys.supp:

	valgrind suppression rules

2008-03-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	fixed rebuild of Evolution trunk: install stamp must be removed,
	otherwise it won't reinstall

2008-03-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSourceRegister.cpp:

	support text/x-vcalendar to be backwards compatible way with old
	configs

2008-03-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:

	added text/x-vcalendar alias

2008-03-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:

	clarified which data has to be set in createItem()

2008-03-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSourceRegister.cpp:
	* src/SyncEvolutionConfig.cpp:

	fixed memo type property

2008-03-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/AddressBookConstants.cpp:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/AddressBookSourceRegister.cpp:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSourceRegister.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSourceRegister.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSourceRegister.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/client-test-app.cpp:

	- implemented value aliases for the configuration - rewrote
	interpretation of "type" property: is now a combination of
	backend and mime type - improved registration of sync sources
	(RegisterSyncSource)

2008-03-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/FileConfigNode.cpp:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/client-test-app.cpp:

	implemented default values and creating config, cleaned up some
	properties

2008-03-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	added comment about setting sync mode

2008-03-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/client-test-app.cpp:

	replaced direct setting of properties with set methods

2008-03-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionMemoSource.h:

	adapted to new prototype of virtual mime type functions

2008-03-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	set DEVICE_TYPE: this is used as part of the DevInf to
	distinguish different SyncEvolution platforms

2008-03-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/boost/assert.hpp:
	* src/boost/checked_delete.hpp:
	* src/boost/config.hpp:
	* src/boost/config/abi/borland_prefix.hpp:
	* src/boost/config/abi/borland_suffix.hpp:
	* src/boost/config/abi/msvc_prefix.hpp:
	* src/boost/config/abi/msvc_suffix.hpp:
	* src/boost/config/abi_prefix.hpp:
	* src/boost/config/abi_suffix.hpp:
	* src/boost/config/auto_link.hpp:
	* src/boost/config/compiler/borland.hpp:
	* src/boost/config/compiler/comeau.hpp:
	* src/boost/config/compiler/common_edg.hpp:
	* src/boost/config/compiler/compaq_cxx.hpp:
	* src/boost/config/compiler/digitalmars.hpp:
	* src/boost/config/compiler/gcc.hpp:
	* src/boost/config/compiler/gcc_xml.hpp:
	* src/boost/config/compiler/greenhills.hpp:
	* src/boost/config/compiler/hp_acc.hpp:
	* src/boost/config/compiler/intel.hpp:
	* src/boost/config/compiler/kai.hpp:
	* src/boost/config/compiler/metrowerks.hpp:
	* src/boost/config/compiler/mpw.hpp:
	* src/boost/config/compiler/sgi_mipspro.hpp:
	* src/boost/config/compiler/sunpro_cc.hpp:
	* src/boost/config/compiler/vacpp.hpp:
	* src/boost/config/compiler/visualc.hpp:
	* src/boost/config/no_tr1/complex.hpp:
	* src/boost/config/no_tr1/functional.hpp:
	* src/boost/config/no_tr1/memory.hpp:
	* src/boost/config/no_tr1/utility.hpp:
	* src/boost/config/platform/aix.hpp:
	* src/boost/config/platform/amigaos.hpp:
	* src/boost/config/platform/beos.hpp:
	* src/boost/config/platform/bsd.hpp:
	* src/boost/config/platform/cygwin.hpp:
	* src/boost/config/platform/hpux.hpp:
	* src/boost/config/platform/irix.hpp:
	* src/boost/config/platform/linux.hpp:
	* src/boost/config/platform/macos.hpp:
	* src/boost/config/platform/qnxnto.hpp:
	* src/boost/config/platform/solaris.hpp:
	* src/boost/config/platform/win32.hpp:
	* src/boost/config/posix_features.hpp:
	* src/boost/config/requires_threads.hpp:
	* src/boost/config/select_compiler_config.hpp:
	* src/boost/config/select_platform_config.hpp:
	* src/boost/config/select_stdlib_config.hpp:
	* src/boost/config/stdlib/dinkumware.hpp:
	* src/boost/config/stdlib/libcomo.hpp:
	* src/boost/config/stdlib/libstdcpp3.hpp:
	* src/boost/config/stdlib/modena.hpp:
	* src/boost/config/stdlib/msl.hpp:
	* src/boost/config/stdlib/roguewave.hpp:
	* src/boost/config/stdlib/sgi.hpp:
	* src/boost/config/stdlib/stlport.hpp:
	* src/boost/config/stdlib/vacpp.hpp:
	* src/boost/config/suffix.hpp:
	* src/boost/config/user.hpp:
	* src/boost/copyright:
	* src/boost/detail/bad_weak_ptr.hpp:
	* src/boost/detail/shared_count.hpp:
	* src/boost/detail/sp_counted_base.hpp:
	* src/boost/detail/sp_counted_base_cw_ppc.hpp:
	* src/boost/detail/sp_counted_base_cw_x86.hpp:
	* src/boost/detail/sp_counted_base_gcc_ia64.hpp:
	* src/boost/detail/sp_counted_base_gcc_ppc.hpp:
	* src/boost/detail/sp_counted_base_gcc_x86.hpp:
	* src/boost/detail/sp_counted_base_nt.hpp:
	* src/boost/detail/sp_counted_base_pt.hpp:
	* src/boost/detail/sp_counted_base_w32.hpp:
	* src/boost/detail/sp_counted_impl.hpp:
	* src/boost/detail/workaround.hpp:
	* src/boost/intrusive_ptr.hpp:
	* src/boost/scoped_array.hpp:
	* src/boost/scoped_ptr.hpp:
	* src/boost/shared_ptr.hpp:
	* src/boost/smart_ptr.hpp:
	* src/boost/throw_exception.hpp:
	* src/boost/weak_ptr.hpp:

	imported libboost-dev 1.34.1-2ubuntu1.1 headers to avoid build
	dependency on Boost

2008-03-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/ConfigNode.h:
	* src/ConfigTree.h:
	* src/DeviceManagementNode.cpp:
	* src/DeviceManagementNode.h:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionClientConfig.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionMemoSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/FileConfigNode.cpp:
	* src/FileConfigNode.h:
	* src/FileConfigTree.cpp:
	* src/FileConfigTree.h:
	* src/FilterConfigNode.cpp:
	* src/FilterConfigNode.h:
	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SyncEvolutionConfig.cpp:
	* src/SyncEvolutionConfig.h:
	* src/TrackingSyncSource.cpp:
	* src/TrackingSyncSource.h:
	* src/VolatileConfigNode.h:
	* src/client-test-app.cpp:
	* src/syncevolution.cpp:

	- introduced new SyncEvolution config handling - cleaned up
	passing of SyncSource creation parameters - reads old configs and
	should also work with new layout (not tested yet)

2008-03-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/TestEvolution.cpp:

	removed obsolete TestEvolution (was moved into client library)

2008-02-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	fixed iteration over address book authentication methods in error
	case

2008-02-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:

	revised error handling: lastError* variables are now hidden, use
	new methods

2008-02-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	SF #1893582: compiler error due to missing include <memory>

2008-02-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	check out SyncEvolution from Subversion

2008-02-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added building of Evolution trunk

2008-02-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionClientConfig.h:

	client library no longer uses BOOL=int, instead use real bool

2008-02-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TrackingSyncSource.cpp:

	always rebuild local tracking status during slow and refresh
	syncs

2008-02-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	change tracking for Client::Source must distinguish between
	database and source accessing it

2008-02-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SQLiteContactSource.h:

	typo: mime-type must not include version (only matters for
	Synthesis at the moment)

2008-02-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SQLiteUtil.cpp:
	* src/SQLiteUtil.h:
	* src/client-test-app.cpp:

	turned SQLiteContactSource into a better example sync source

2008-02-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:
	* debian/rules:

	avoid docpurge by installing example configs into
	/usr/lib/syncevolution/doc

2008-02-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	beware of the need to update 'stable' and 'chinook' repositories
	when releasing for Maemo

2008-02-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:
	* src/vocl/VObject.h:

	added another const qualifier

2008-02-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SQLiteContactSource.cpp:

	- log extracting items at debug level - fixed parsing of N
	property: it mixed up first and middle name

2008-01-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:

	# updated

2008-01-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/dbus-wrapper.cpp:
	* debian/rules:

	replaced linking against modified libdbus with a wrapper for the
	relevant dbus function

2008-01-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:
	* debian/rules:

	- patch libtool so that -Wl is inserted at the beginning of the
	command line   used to build modules - added -Wl,--as-needed to
	LDFLAGS during compilation

2008-01-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SQLiteUtil.cpp:
	* src/SQLiteUtil.h:
	* src/TrackingSyncSource.cpp:
	* src/TrackingSyncSource.h:
	* src/client-test-app.cpp:

	implemented full change tracking in demo SQLiteContactSource with
	new TrackingSyncSource base class

2008-01-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSmartPtr.h:

	added transferring pointer and its ownership from one smart
	pointer to another

2008-01-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionMemoSource.cpp:
	* src/EvolutionMemoSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncSource.h:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/TestEvolution.cpp:

	removed SyncState parameter out of all createItem()
	implementations into the caller; requires smartptr release()

2008-01-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure.in:
	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SQLiteSyncSource.cpp:
	* src/SQLiteSyncSource.h:
	* src/SQLiteUtil.cpp:
	* src/SQLiteUtil.h:

	Replaced "is a" SQLiteSyncSource with "has a" SQLiteUtil instance
	in SQLiteContactSource. This is a first step towards deriving
	SQLiteContactSource from a sync source base class which does
	change tracking.

2008-01-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.h:

	with the 'abstract config' patch applied SyncManagerConfig.h must
	be included explicitly

2008-01-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/syncevolution.cpp:

	Use the new singleton implementation for logging, if available.
	LOG_HAVE_SET_LOGGER and LOG_HAVE_DEVELOPER preprocessor symbols
	in the new Log.h header file are checked to detect that.

2007-12-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* debian/changelog:

	need an epoch to make .deb versions larger than in the -pre .debs

2007-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* configure.in:
	* debian/changelog:

	# SyncEvolution 0.7

2007-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* README:
	* etc/source-config.txt:
	* test/runtests.py:

	fixed building of .deb (docdir and description) - the new
	checkinstall --docdir=: syntax is used to avoid adding the name
	twice - description-pak was not created and thus missing from
	package

2007-12-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	disabled the background glib event loop again because it caused
	segfaults

2007-12-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	myFUNAMBOL does not like empty types in the capability, so always
	send a valid (even if wrong) type

2007-12-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionMemoSource.cpp:

	text/plain requires \r\n line breaks: - send in that format now -
	accept both \r\n and \n line breaks for incoming memos

2007-12-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	fixed typo in getting started section

2007-12-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added list of debug packages

2007-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	dump core if test fails instead of simply exiting

2007-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added the possibility to run under valgrind

2007-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	avoid including invalid information about inactive sources in
	DevInf by clearing it

2007-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionMemoSource.h:

	need to set mime type, required for correct DevInf (expected by
	Synthesis server)

2007-11-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	bugfix: vCard 3.0 with mixed case were not converted properly to
	vCard 2.1 by SyncEvolution (must convert to upper case because
	vCard 2.1 only allows that), leading to problems with mapping
	phone numbers in the Funambol server. Diagnosed and reported by
	Paul McDermott, thanks a lot!

2007-11-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	- changed configure/build so that it also builds .deb (default
	prefix + DESTDIR for install) - updated config for servers

2007-11-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	avoid delivering SIGALRM to background thread - glib/ebook crash
	when that happens

2007-11-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	avoid lengthy objdump -l -C output in error handler, exit to
	prevent repeated segfault invocation

2007-11-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	added better error message when 'syncevolution' is started with
	non-existant sources as parameter

2007-11-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/client-test-app.cpp:

	Added stack dumping in case of SIGABRT, SIGSEGV, SIGILL. Both
	valgrind and glibc backtrace() are used: the former automatically
	looks up source code, the later can handle stack back traces out
	of a signal handler. objdump is called so that the addresses
	printed by backtrace() can be associated with source code.

2007-11-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	last minute fix for iPhone 0.7 pre2: removed debug output

2007-11-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	clarified post-sync comparison by adding 'Changes applied to
	client during synchronization'

2007-11-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version

2007-11-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* debian/changelog:

	# updated

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	Evolution 2.12 generates contacts with e.g. TYPE=VOICE,WORK. This
	needs to be split into TYPE=VOICE;TYPE=WORK when converting to
	2.1, otherwise myFUNAMBOL drops the phone numbers with the (in
	2.1) incorrect TYPE

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/syncevolution.cpp:

	- revised an updated usage instructions (myFUNAMBOL instead of
	Funambol) - added dumping of local changes before sync (works
	best with logdir) - added command line options:

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	separated compile and release instructions

2007-11-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/source-config.txt:

	let the default source configs access the default Evolution
	databases: less work for users to configure it

2007-11-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	fixed iPhone photo import/export: that API wasn't as expected and
	therefore was called incorrectly. Importing photos crashed,
	exporting them may have failed randomly and/or picked the wrong
	size of the photo.

2007-11-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/vocl/VObject.cpp:
	* src/vocl/VObject.h:

	when configured to use ScheduleWorld card3 URI, then switch to
	sending vCard 3.0 (easier to parse by SW); always dump contacts
	as vCard 3.0 (avoids quoted-printable in synccompare output)

2007-11-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VProperty.cpp:

	bug fix: TYPE with multiple comma-separated values (vCard 3.0,
	e.g. TYPE=WORK,VOICE) was not decoded as intended => downloading
	into iPhone from SW card3 URI did not set type correctly

2007-11-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	dump user name, date and SyncEvolution at beginning of debug log

2007-11-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/syncml-config.txt:

	Replaced guest/guest credentials with "your SyncML server account
	name" and "your SyncML server password" to make it clear that
	something must be entered there. Some servers also really have
	"guest/guest" demo accounts.

2007-11-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:

	Detect unexpected crashes of the Evolution Data Server. A
	workaround for the fact that the synchronous EDS API calls block
	infinitely in that case. - drive default glib event look in
	background thread - listen for "backend-died" signals - if
	triggered, print a message ("Evolution Data Server has died
	unexpectedly,	database no longer available.") and abort the
	process (other error handling is   impossible) - for contacts
	instead of "database" "contacts" is printed

2007-11-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	adapted calendar event insert/update to Evolution 2.12: the UID
	needs to be restored, otherwise the Evolution backend crashes
	(GNOME issue #488881)

2007-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	fixed compile errors on Mac OS X

2007-10-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* src/shlibs.local:

	added package release number and dependency calculation for local
	Evolution libs without installed .debs

2007-10-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/Makefile.am:

	ClientTest.cpp and synccompare.pl are back in C++ library

2007-10-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	synccompare.pl wasn't found in client library because search rule
	had the wrong directory

2007-10-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	workaround for dependency on size_t in client library Log.h:
	include stddef.h first

2007-10-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:
	* src/vocl/VProperty.cpp:

	adapted to ArrayList::remove() -> removeElementAt() renaming

2007-10-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/DeviceManagementNode.cpp:

	same patch as in client library: chop trailing white spaces

2007-10-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:
	* test/synccompare.pl:

	# pushed sources back into SyncML client library

2007-10-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:

	# added remark about updated upstream

2007-10-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:

	# updated packaging: added provides/conflicts

2007-10-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# extended description of logging

2007-10-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* configure.in:
	* test/Makefile.am:

	# fixed distcheck problem

2007-10-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* description:

	# updated

2007-10-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:

	added packaging via checkinstall as deb (working) and rpm
	(somehow not working)

2007-10-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# version bump

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	#updated

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	- consistently ignore all empty strings when reading vcard -
	interpret date time stamps relative to current system time zone
	(like GUI does)

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	improved error handling: catch errors during post-processing and
	continue

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/source-config.txt:

	SF #1764123: SyncCap is not generated unless syncModes are
	configured: added a comment to example config

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	added a table which summarizes the changes made on client and
	server

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	replaced ambiguous 'Modifications:' with 'Changes applied during
	synchronization:'

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/syncml-config.txt:

	use myFUNAMBOL instead of localhost for funambol demo config

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	avoid setting empty strings: the iPhone GUI adds redundant space
	around the empty property (e.g. middle name)

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	perl is not installed as /usr/bin/perl on iPhone: let
	/usr/bin/env find it

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:

	use vCard 2.1 instead of 3.0 for iPhone: avoids parsing problems
	in myFUNAMBOL

2007-10-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	reset version to alpha (less than pre)

2007-10-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	updated package commands for Debian 4.0

2007-10-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/synccompare.pl:

	ScheduleWorld no longer drops department/office

2007-10-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	fixed segfault due to unintentional infinite recursion in new
	throwError() call

2007-10-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	SF #1796086: also added all the other predefined TYPE values from
	vCard 2.1/3.0

2007-10-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/ClientTest.cpp:

	temporary fork of 1.25: handle testComplexUpdate where some (but
	not all) sources have a complex update item

2007-10-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	fixed compile error with enabled modules (missing comma)

2007-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:

	added workaround for missing exception handling on iPhone
	(http://code.google.com/p/iphone-dev/issues/detail?id=48)

2007-10-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* SyncEvolution.plist.in:
	* configure.in:

	added iPhone Installer.app packaging

2007-10-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added compile/packaging information

2007-10-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/EvolutionSyncClient.cpp:

	problem with C++ output stream
	(http://code.google.com/p/iphone-dev/issues/detail?id=48): throws
	exception although everything is fine - disabled exceptions in
	one case and replaced with ANSI C calls in another

2007-10-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	removed debug output which was added to track down crashes and
	now is no longer useful

2007-10-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:

	added comments, some cleanups

2007-10-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:

	workarounds for ABMutableMultiValueRef on iPhone: - cannot be
	released - cannot be turned into a string

2007-10-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure.in:
	* src/AddressBookConstants.cpp:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:

	port to iPhone: lots of hacks and debug output, none of the
	multiprops supported yet (use unknown format in API)

2007-10-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	disable buffering to stdout/stderr: ensures that printf output
	appears immediately without explicit fflush()

2007-10-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	SF #1796086: sync with EGW: lost or messed up telephones -
	SyncEvolution incorrectly added TYPE=OTHER to phone numbers sent
	with e.g. CELL instead of TYPE=CELL

2007-09-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:

	# updated

2007-09-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/changelog:
	* debian/control:

	SF #1781652: Nokia 770/800: uninstallable package fixed by
	setting category

2007-09-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	removed patching of CATEGORIES (recent client library has the
	fix) added possibility to update/commit test suite files in
	SyncEvolution test dir, then later move them back to client
	library

2007-09-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookConstants.cpp:
	* src/Makefile.am:

	workaround if address book library misses constants

2007-09-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	fixed compile errors

2007-08-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version

2007-08-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	fixed SF 1767329: example configs were in share/share directory

2007-08-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/DeviceManagementNode.h:
	* src/SQLiteSyncSource.cpp:

	fixed compile error

2007-08-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/client-test-app.cpp:

	unsuccessful attempt to work around the 'one address book per
	user' limitation in order to get automated sync testing working

2007-08-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	less verbose INFO logging: extracting items is now logged as
	DEBUG

2007-08-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/Makefile.am:
	* src/vocl/VProperty.cpp:
	* test/synccompare.pl:

	added custom vcard 3.0 <-> AddressBook conversion: needed to make
	vcard representation close to what SyncML servers understand

2007-08-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/DeviceManagementNode.cpp:
	* src/DeviceManagementNode.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/client-test-app.cpp:
	* src/syncevolution.cpp:

	finished change tracking, update and delete - still needs
	improved import/export with own functions because Address Book
	vcard parser merges X- properties into NOTE and cannot update
	contact

2007-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/AddressBookSource.cpp:
	* src/AddressBookSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncSource.cpp:
	* src/Makefile.am:
	* src/client-test-app.cpp:

	added initial support for Mac OS X address book: no change
	tracking, no updating

2007-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# version bump

2007-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/SQLiteSyncSource.cpp:

	fixed incorrect extraction of text columns from SQLite

2007-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/SQLiteContactSource.cpp:
	* src/SQLiteContactSource.h:
	* src/SQLiteSyncSource.cpp:
	* src/SQLiteSyncSource.h:
	* src/client-test-app.cpp:
	* src/syncevolution.cpp:
	* src/vocl/VObject.cpp:
	* src/vocl/VObject.h:

	added a sync source which stores contacts in a SQLite database

2007-07-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:
	* debian/changelog:

	# mention fixed example configs

2007-07-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/source-config.txt:

	fixed name of example source configs (broke during the changes
	for 0.6 pre)

2007-07-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	# ignore known problems

2007-07-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	# updated to new test system, added some command line parameters

2007-07-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* HACKING:
	* NEWS:
	* configure.in:
	* debian/changelog:

	# release 0.6

2007-06-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/client-test-app.cpp:

	Maemo address book delete support works now: one has to search
	for X-OSSO-CONTACT-STATE:DELETED manually

2007-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/client-test-app.cpp:

	- added test for X-OSSO-CONTACT-STATE:DELETED handling - contacts
	marked for deletion are now deleted by SyncEvolution (but code
	fails test...) - made it possible to run client-test with
	EDS-DBus

2007-06-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	when using older test data fix the broken CATEGORIES

2007-06-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	fixed invalid path names

2007-06-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	workaround for Evolution bug in the calendar import/export:
	Evolution uses \, as separator for CATEGORIES, but the standard
	specifies a plain comma. The effect was that multiple categories
	were treated as one category with commas by ScheduleWorld. Events
	imported into Evolution were stored incorrectly and the GUI only
	used the last category.

2007-06-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	updated testing instructions

2007-04-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# updated version of C++ client library

2007-04-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# entry for 0.6 pre2

2007-04-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2007-04-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	# minor edits

2007-04-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:

	fixed error handling: a failed source was not forced into a slow
	sync, one failed source prevented saving configs of not-failed
	ones

2007-04-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* README:
	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* etc/localhost_1/spds/syncml/config.txt:
	* etc/source-config.txt:
	* etc/syncml-config.txt:
	* src/EvolutionSyncClient.cpp:

	- improved logging: log file and backup can be avoided with
	logdir=none,   loglevel is configurable - fixed off-by-one
	counting of months in backup directory names - only one example
	configuration per server, users typically do not   need the _1/2
	suffices and the testing system no longer has to be   configured
	manually either - documented the switch from the original
	SyncEvolution testing to its   successor, the generic Funambol
	C++ client testing framework

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	fixed compile problem on Debian 3.1/older gcc

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionMemoSource.cpp:
	* src/EvolutionMemoSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/Makefile.am:
	* src/client-test-app.cpp:

	added synchronization of Memos as plain text

2007-04-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added note about building Maemo package with fakeroot

2007-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/rules:

	avoid unwanted dependencies caused by optional modules

2007-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* debian/changelog:

	bumped to 0.6 pre2

2007-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	minor changes about ifdef ENABLE, added comment avoid vcard21,
	FIXED itodo20 type

2007-04-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	always set encoding, we might have to overwrite an encoding set
	earlier

2007-04-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	type OTHER was converted to PARCEL when sending to server, but
	PARCEL was then not converted back to OTHER, but rather into HOME

2007-04-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	- source type was not set in new configs as intended - fixed
	confusion with source index vs. type (broke testing of e.g.
	ical20)

2007-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	avoid not freeing error/overwriting error when trying again

2007-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	fixed incorrect mapping from selected source to type

2007-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	always summarize ERROR/INFO messages at the end, even if sync
	didn't start - there might be errors which prevent starting it

2007-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	need to declare new files so that it gets included in
	distribution

2007-04-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fixed distribution after taking several files from C++ client
	library

2007-04-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	added CLIENT_TEST_EVOLUTION_PREFIX which overrides the
	evolutionsource setting in test configs; default
	SyncEvolution_Test_

2007-04-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	avoid e_cal_new_system_memos(), it breaks compilation with older
	Evolution

2007-04-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/client-test-app.cpp:

	added the possibility to create databases if evolutionsource is
	set to a file:// uri

2007-04-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	explicit dependency on modules is needed for client-test

2007-03-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Algorithm/Artistic:
	* src/Algorithm/Diff.pm:
	* src/Algorithm/README:
	* src/Algorithm/copyright:
	* src/EvolutionClientConfig.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/Makefile.am:
	* src/client-test-app.cpp:

	synccompare and test suite are now taken from C++ client library

2007-03-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* HACKING:
	* NEWS:
	* README:
	* debian/changelog:
	* debian/control:

	various release preparations

2007-03-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	streamlined dependencies and their checking

2007-03-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:

	do not remove src/client-api unless it was copied by configure

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# version bump

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* configure.in:
	* debian/rules:
	* src/Makefile.am:

	- fixed building synccompare for Maemo - added/fixed rules to
	build for Maemo - add new Algorithm::Diff files to source
	distribution

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	fixed uninitialized memory read under Maemo

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	Algorithm::Diff: check whether files really have changed

2007-03-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Algorithm/Artistic:
	* src/Algorithm/Diff.pm:
	* src/Algorithm/README:
	* src/Algorithm/copyright:
	* src/Makefile.am:
	* src/normalize_vcard.pl:

	- use Algorithm::Diff instead of external diff tool in
	synccompare;   Algorithm::Diff is embedded in synccompare to keep
	it self-contained - tput must be called without redirection of
	stderr, otherwise it did   not find the current number of columns

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	additional error check

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	dlopen(RTLD_GLOBAL) fixes obscure libebook failures on Maemo;
	dlopen() errors can occur due to missing modules, only print as
	debug to avoid failure message after sync

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	also need to uninstall doc files, distcheck complains otherwise

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/testVCard.vcf:
	* src/vocl/VObject.cpp:

	workaround for Funambol 3.0 trailing = parser bug

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/syncml/config.txt:

	enable large object support and max message limit by default

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* dbus-timeout.patch:
	* src/Makefile.am:
	* src/syncevolution.cpp:

	added configurable hacks for Maemo (--enable-maemo): - set the
	(non-standard!) DBUS_DEFAULT_TIMEOUT; see dbus-timeout.patch -
	wrap e_book_from_string() to fix invalid parameter - don't use
	UTF-8 encoding in Perl script

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	BusyBox's mktemp on Maemo requires parameter

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	new internal docdir was not actually used

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/compat:
	* debian/control:

	Maemo only has debhelper 4

2007-03-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	fixed compile error without calendar support

2007-03-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	added error checking for broken events which cannot be converted
	to iCal, e.g. because of a missing timezone definition (SF
	#1685637)

2007-03-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:

	Errors while writing the initial datatbase dumps was not handled
	properly and led to a direct dump of the error exception. Now the
	error is logged first and the '.after' dump is skipped.

2007-03-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	fixed compatibility problem with older automake/autoconf which
	does not have docdir yet

2007-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	install into $(docdir), not etc; also use "funambol_*" instead of
	"localhost_"

2007-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/README.Debian:

	no special comment for Debian needed

2007-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* debian/README.Debian:
	* debian/changelog:
	* debian/compat:
	* debian/control:
	* debian/copyright:
	* debian/docs:
	* debian/rules:

	added packaging for Debian

2007-03-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/syncevolution.cpp:

	--enable-ecal/ebook are only enabled by default if the libs are
	present --enable-shared will build backends as modules which are
	loaded dynamically if possible (off by default)

2007-02-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/async.patch:

	patch switches to async version of the Evolution API

2007-01-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	fixed free/delete [] mismatch

2007-01-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fixed distdir target that broke in yesterday's commit

2007-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:

	added --enable-static-cxx to link libstdc++ statically

2007-01-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	fixed problem of deleting read-only install directories

2007-01-20  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	memo config now also included for localhost, but disabled by
	default

2007-01-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added cross-compilation

2007-01-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	pass cross-compilation options through to configure of client
	library

2007-01-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/testMemo.ics:

	added testing of memos

2007-01-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/syncevolution.cpp:

	added support for synchronizing Evolution memos in iCalendar 2.0
	VJOURNAL format

2007-01-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	bumped version, clean up copy of client library sources some more

2007-01-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	fixed problem with 'make dist'

2007-01-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	avoid adding the non-standard TYPE=OTHER, better use HOME instead
	(that's also the default in the Synthesis server)

2007-01-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	autoconf checks must not be inside conditional code (fixes
	'conditional AMDEP was never defined' error)

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	adapted to update test API

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	ignore changes in autotools generated files

2006-12-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	fixed missing return code

2006-12-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* COPYING:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:
	* src/TestMain.cpp:
	* src/client-test-app.cpp:
	* src/syncevolution.cpp:

	copyright transfer to Funambol

2006-12-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	adapted to new C++ client library test suite interface, finished
	configuration for calendars and tasks

2006-12-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	ignore differences caused by exporting vCard with ADR;TYPE=PARCEL
	instead of ADR;TYPE=OTHER

2006-12-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	support testing with two clients

2006-12-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/client-test-app.cpp:

	adapted contacts to full set of local tests

2006-12-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	avoid tput error when no valid terminal is set

2006-12-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:
	* src/client-test-app.cpp:

	use the new C++ client library testing framework

2006-11-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/vocl/VProperty.cpp:

	adapted to const qualifier changes in client library and fixed
	minor memory leak

2006-11-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:

	# updates for 0.5 release

2006-11-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added building of release packages, adapted to some more known
	server limitations

2006-11-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	renamed testRefreshSync to testRefreshFromServerSync and added
	testRefreshFromClient

2006-11-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	ignore known limitations of Synthesis server

2006-11-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* configure.in:

	0.5 release

2006-11-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-11-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.h:

	messages about local changes are now logged as DEBUG and not INFO
	because they were confusing for users; now they are not visible
	in the final report

2006-11-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* etc/localhost_1/spds/syncml/config.txt:
	* src/EvolutionSyncSource.cpp:
	* src/TestEvolution.cpp:

	added support and testing of one-way-from-client/server

2006-11-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	TaskSync tests for large object support failed because the test
	item didn't have the expected DESCRIPTION to stuff the item's
	size

2006-11-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* src/TestMain.cpp:

	allow running multiple tests by specifying them on the command
	line

2006-11-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	added warning about setting evolutionuser/password when not
	needed -> causes backend to hang

2006-11-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	PHOTO/NOTE update for EGroupware and Funambol portal

2006-11-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	use simpler data for update test, moved complex contact update
	into testComplexUpdate

2006-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	avoid that patterns accidentally run over line ends, added
	special cases for Funambol and EGroupware server

2006-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	allow to build arbitrary combinations of client library and
	SyncEvolution

2006-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	<<system>> and <<default>> can be used to reference the system
	and the default address books, respectively

2006-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	cppunit-config was not called when compiling C++ code, therefore
	it was only found if in the default search path

2006-11-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	made test coverage configurable

2006-10-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	added testLargeObjectBin, changed calendar UID so that without
	support for special characters in the key the sync fails

2006-10-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	VerDTD must be configured, otherwise Funambol 3.0a (but not
	3.0b5) fails during the second sync

2006-10-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	documentation got the direction in refresh-from-client/server
	wrong

2006-10-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	filter out private information from logs, added --tag parameter

2006-10-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	setting config is no longer necessary

2006-10-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	disabled testLargeObjectEncoded again, it requires a suitable
	server

2006-10-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	enabled encoded LargeObject support test

2006-10-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	adapted to new API

2006-10-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	ignore some known Synthesis data conversions

2006-09-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	force server to split large items when LargeObject support is
	enabled

2006-09-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:
	* src/syncevolution.cpp:

	adapted to additional SyncSourceConfig parameter in SyncSource
	constructor, added testing of LargeObject support

2006-09-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	make names unique again

2006-09-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.h:

	adapted to C++ client API change: supported datatypes now in
	config

2006-09-16  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version to 0.5-CVS

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	removed default values, added egroupware testing, improved log
	file copying

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	created entry for 0.3 -> 0.4 changes

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-09-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped to 0.4

2006-09-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	avoid refresh-from-server sync whenever possible because
	eGroupware server does not support it

2006-09-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	DTSTAMP may vary

2006-09-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	minor updates for 0.4

2006-09-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	do not treat requests to delete non-existant items as error,
	instead log the event (grep for DEBUG and non-existant) and
	proceed - this is currently necessary with ScheduleWorld server

2006-09-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	added missing space to error messages

2006-09-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	do not overwrite the UID in an addItem operation even if we fall
	back to an update

2006-09-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/TestEvolution.cpp:

	split TYPE parameter with commas into different parameters to
	help Evolution parse it (the overview display didn't handle this,
	the editor did)

2006-09-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	added TEST_EVOLUTION_ALARM to have some means of aborting when a
	test takes too long

2006-09-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	deviceId property was renamed -> restored compatibility with old
	configs

2006-09-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	added one-way from server/client

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:

	# updated

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# set version to CVS again

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.h:

	adapted to official DevInf API with one patch: config passed to
	SyncClient::conf()

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	beware to not overwrite valid UID with empty one (some tests
	broke due to this recent change)

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	excluded automatically generated files from client-api-diff

2006-09-07  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	newline was missing after successfully completed test

2006-08-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	SF issue 1511951: support copying changes back from EGroupware
	server by not expecting the UID of calendar items to be
	unmodified

2006-08-31  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	merged listeners so that failure message is generated in just one
	place

2006-08-30  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	print failure summary to cerr, like the rest of the messages

2006-08-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	add number to preserve ordering of actions

2006-08-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	added --skip option, made reporting a bit nicer

2006-08-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	added support for ignoring the failure of certain tests by
	listing them in TEST_EVOLUTION_FAILURES

2006-08-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* test/runtests.py:

	executes CVS checkout, compilation and testing automatically

2006-08-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# version bump

2006-08-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-08-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# polished news a bit for 0.4 pre2

2006-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	new server is www.estamos.de

2006-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	better error message when Evolution development files are missing

2006-08-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:

	moved reading of changes into helper function so that it can be
	used in the pre- and post-processing

2006-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/EvolutionSyncSource.cpp:
	* src/TestEvolution.cpp:

	ensure that after refresh-from-client items are not sent again

2006-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:

	changed list into a set to be more resilient against getting UIDs
	multiple times

2006-08-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* README:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.h:

	implemented Evolution authentication

2006-08-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/normalize_vcard.pl:

	normalizing ORG must not extend into other properties

2006-08-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/syncevolution.cpp:

	- rename qptr to eptr to avoid name clash with sstring - moved
	unref() into global name space so that more unref() functions  
	can be added (otherwise local methods shadow the global
	functions) - use eptr for SourceList (wasn't destructed in case
	of error otherwise and	 logging in 0.4 pre continued to go to
	file) - check for server configuration and abort in prepare if
	none given with   a suitable error message

2006-08-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/vocl/VObject.cpp:

	avoid CHARSET=UTF-8 without quoted-printable encoding

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# version is back to 0.4-cvs

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# added next release and comments about two fixes

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	added some more test cases for special characters

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.h:

	send configured vCard format as part of DevInf (Synthesis server
	gets confused otherwise)

2006-08-13  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:

	do not send CHARSET for vCard 3.0, not needed and illegal

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# bumped version

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:

	always treat single ; as normal character in single-value
	properties

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* configure.in:
	* src/Makefile.am:
	* src/syncevolution.cpp:

	now compiles on Maemo

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	added note about .patches

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	C++ client library may or may not already contain the files
	generated by the autotools

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	since adding the sync-mode-name.patch more comprehensible names
	are supported

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* src/EvolutionCalendarSource.cpp:
	* src/TestEvolution.cpp:

	workaround for incomplete result of e_cal_get_changes()

2006-08-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* README:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:
	* src/syncevolution.cpp:

	- adapted to new SyncClient API: configuration tree handling is
	now part   of the library - do not reset anchors after failure:
	allows to proceed with two-way sync

2006-07-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.h:

	ensure that deleted items have a sane datatype (in particular
	avoid text/x-todo)

2006-07-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	fixed compiler warning

2006-07-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.h:

	added inclusion of config.h (needed since adding
	ENABLE_ECAL/EBOOK) added meta information callbacks

2006-07-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncSource.cpp:
	* src/syncevolution.cpp:

	added --disable-ecal/ebook for installations without the required
	libs

2006-07-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.h:

	implemented more of the new meta info calls

2006-07-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# updated

2006-07-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/syncml/config.txt:

	firstTimeSyncMode is not used

2006-07-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	bumped version

2006-07-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:

	use the new SyncClient API to set a default 'SyncEvolution x.y'
	as HTTP user agent

2006-07-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:
	* src/vocl/VObject.cpp:

	changed vCard 2.1 parser to make it compatible with servers which
	send a verbatim semicolon as part of properties where the
	semicolon has no special meaning

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	must always pass vCard through decoding/encoding to ensure that
	CHARSET is added as needed

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	due to cut-and-paste error the ContactStress test was executed
	instead of Calendar/TaskStress

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	ignore some more irrelevant differences with Synthesis server

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VConverter.cpp:
	* src/vocl/VConverter.h:

	fixed decoding of quoted-printable soft line breaks, fixed
	unfolding of vCard 2.1

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:

	must add CHARSET=UTF-8 if non-ASCII character is found because
	default charset is not well-defined

2006-07-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	added folding and XML entities test cases

2006-07-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	emphasized the need to chose the right uri/type combination, in
	particular with ScheduleWorld

2006-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* etc/localhost_1/spds/syncml/config.txt:

	added support for setting HTTP user agent

2006-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	special characters in test cases were not escaped properly

2006-07-02  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	testMerge() dumps the result of conflict resolution, but no
	longer makes any assumptions about it

2006-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:
	* NEWS:

	# update

2006-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	moved some content to new home page, added link to it

2006-06-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	listing Evolution databases showed calendars twice instead of
	task lists

2006-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	changed comments about Evolution versions affected by known
	problems

2006-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	minor clarifications

2006-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/syncml/config.txt:

	workaround for problems during slow-sync if items are split
	between different messages

2006-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	clarified unknown name text

2006-06-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/normalize_vcard.pl:

	added special handling of TEL;TYPE=PREF,VOICE

2006-06-22  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	added *Stress::testManyItems

2006-06-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	always use two digits in file name

2006-06-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	never executed delete since adding workaround (wrong brackets)

2006-06-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	remove redundant VALUE=DATE-TIME

2006-06-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	added test case with BYSETPOS=-1

2006-06-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	added more special characters - double quotation marks currently
	not tested because of Evolution's invalid encoding of them

2006-06-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	documented need to enter new address book to avoid 'EBookStatus
	returned 19'

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:
	* src/testTask.ics:

	relax comparison of RRULE BYDAY, modified task test case to
	always use its own VTIMEZONE

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	added test case with empty EMAIL: property

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	added safety check to avoid segfaults if server sends no data for
	item

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	some more comments about compiling on Debian Sarge

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	added Test.h to distribution

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	added testTask.ics

2006-06-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* etc/localhost_1/spds/syncml/config.txt:

	clarified documentation and adapted to current status of
	SyncEvolution, ScheduleWorld and Funambol

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:

	also add NEWS and COPYING to distribution

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	comments on 0.3

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	bumped version to 0.3

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	some more proof-reading - terms are still not used consistently

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/syncevolution.cpp:

	made output a bit nicer

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/vocl/vcardconverter.cpp:

	also imported the vcardconverter program from the Funambol CVS

2006-06-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/vocl/VObject.cpp:

	readded the removal of CHARSET

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	importing new timezones before their events works better (e.g.
	with Evolution 2.4)

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added remark about Evolution 2.0.4 GUI problem with new VTIMEZONE
	defs

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	use a TZID that no-one else knows

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	testImport should leave the items imported - moved import/delete
	into its own test

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:

	fixed several compiler warnings

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	allow sync.scheduleworld.com to replace TZIDs

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSmartPtr.h:

	explicitly reference class member (required by g++ 4.1, but not
	g++ 3.3.5)

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/Makefile.am:
	* src/vocl/README:
	* src/vocl/VConverter.cpp:
	* src/vocl/VConverter.h:
	* src/vocl/VObject.cpp:
	* src/vocl/VObject.h:
	* src/vocl/VProperty.cpp:
	* src/vocl/VProperty.h:
	* src/vocl/posixadapter.h:

	added a copy of the relevant VOCL classes to be independent of
	incompatible changes upstream

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-06-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:

	added sanity checks for using the results of Evolution's change
	tracking: invalid UIDs have been observed

2006-06-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncSource.cpp:

	fixed memory leaks

2006-06-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	remove unwanted files in case someone has compiled in the sync4j
	src dir

2006-06-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	avoid trailing space at end of NOTE, might not be preserved

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	fixed type for scheduleworld

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	STATUS expected by libical

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	split testDeleteAll into two tests, one for each method

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:

	added support for custom timezones

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testTask.ics:

	removed libical error message

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	fixed invalid CREATED/LAST-MODIFIED, must be in UTC - broken by
	importing/exporting again, though

2006-06-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/syncevolution.cpp:

	avoid copying incomplete type in catch

2006-06-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/normalize_vcard.pl:

	ignore known problems with contact properties in scheduleworld

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	got rid of the remaining files with :: in the name

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	added test for add-update-download sequence

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	adapted to syncing with sync.scheduleworld.com

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	added mapping for ADR;TYPE=OTHER for scheduleworld

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/localhost_1/spds/syncml/config.txt:

	updated references to sync.scheduleworld.com

2006-06-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/sources/addressbook_1/config.txt:

	comments explain how to obtain valid Evolution sources

2006-05-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionSyncSource.cpp:

	better error logging

2006-05-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	fixed typo

2006-05-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	adapted to scheduleworld.com

2006-05-29  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	use simpler diff output and transform into side-by-side oneself
	(simpler code, less fragile, handles UTF-8)

2006-05-28  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Test.h:
	* src/TestEvolution.cpp:
	* src/TestMain.cpp:

	avoid filenames with colons in the name

2006-05-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	adapt automatically to console size if tput is available

2006-05-27  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/normalize_vcard.pl:

	made the diff output nicer: full items shown, separated by lines

2006-05-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	massage the full diff output so that it is easier to read and
	contains exactly the full vcard/vcalendar for each change

2006-05-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	added indention for nested BEGIN/END blocks in iCalendar

2006-05-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:
	* src/syncevolution.cpp:

	cleaned up error reporting and exception handling

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	cleaned up error handling and logging, in particular when using
	multiple sources at once

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	avoid copying temporary C++ API files

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	added buffer overflow test case

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/TestEvolution.cpp:

	added test for slow-sync and added handling of the
	STC_ALREADY_EXISTS encountered then; twinning is currently broken
	in Funambol 3.0 beta 3, see #305357

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added remark that text has to be exchanged as UTF-8

2006-05-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testVCard.vcf:

	added test case with explicit CHARSET="UTF-8" to test how the
	updated client library deals with it

2006-05-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:

	utility was renamed

2006-05-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# added logs

2006-05-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	# added prerelease note about scheduleworld

2006-05-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:

	# bumped version

2006-05-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	fixed new[]/free() mismatch

2006-05-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:

	generate iCalendar items with VTIMEZONE definitions

2006-05-01  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added scheduleworld as preferred server

2006-04-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncSource.cpp:

	added possibility to choose between sending vCard 2.1 and 3.0

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	syncing multiple databases at the same time now worked okay

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	avoid the problematic timezones in the basic tests

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	write the required PRODID and VERSION for iCalendar entries

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	avoid eating the trailing newline after PHOTO

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* etc/Makefile.am:
	* etc/localhost_1/spds/syncml/config.txt:
	* src/TestEvolution.cpp:
	* src/normalize_vcard.pl:

	added support for testing against www.scheduleworld.com

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	fixed the fix of EMAIL normalization...

2006-04-24  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	hide differences due to different PHOTO parameters, fixed
	EMAIL;INTERNET;OTHER

2006-04-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/Makefile.am:

	avoid problems with ChangeSourceUriSynclet by using sc-pim-ppc
	for second client

2006-04-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	avoid problems with ChangeSourceUriSynclet by using sc-pim-ppc
	for second client

2006-04-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	also treat INTERNET as TYPE

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/testTask.ics:

	added testing of tasks

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	test names have changed

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added warnings about known-problems

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/testCalendar.ics:

	temporarily removed some problematic characters (forge tracker
	#304786)

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/TestMain.cpp:

	- renamed normalize script to synccompare because it now applies
	to both calendar, tasks and contacts - temporary files in test
	suite now start with the name of the test they belong to

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/testCalendar.ics:
	* src/testTask.ics:

	- renamed "test" program to "TestEvolution" - copy original test
	cases to fit the name expected by TestEvolution and to have  
	them in the build directory - handle merge with existing item in
	addItem(): return special status

2006-04-17  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	now also handles calendar comparison

2006-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.h:

	added some support for inserting already existing item

2006-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	instantiate test for calendar

2006-04-14  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionCalendarSource.cpp:

	added some support for inserting already existing item

2006-04-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-04-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	refactored code so that test suites can be built from the base
	template TestEvolution class: currently defined are ContactSource
	(local tests) and ContactSync (synchronization with server),
	tests work exactly as before

2006-04-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	text/x-vcard is more suitable for vcard 2.1

2006-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	made sleep configurable (off by default), synchronize only one
	source

2006-04-09  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* configure.in:
	* etc/Makefile.am:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/EvolutionCalendarSource.cpp:
	* src/EvolutionCalendarSource.h:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/syncevolution.cpp:

	- added support for calendars and tasks: not yet tested
	automatically	but manual tests show that it works in principle,
	albeit with some   loss of attributes in the server for calendars
	(time zone) - removed "disabled" configuration option, use "sync
	= none" instead - added selection of databases to synchronize via
	additional command   line parameters

2006-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* configure.in:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:
	* src/syncevolution.cpp:

	adapted to head revision of Sync4j C++ client library

2006-04-06  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/Makefile.am:

	testVCard.vcf was missing in source distribution

2006-03-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/sync4j-client-api-sdkcpp_3_0_6a.diff:

	fix for #304805: testing return code of SyncClient::beginSync()

2006-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:
	* README:
	* configure.in:
	* etc/localhost_1/spds/syncml/config.txt:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/syncevolution.cpp:

	- implemented automatic backups, logging and database comparison
	- prepared 0.2 release

2006-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	set TYPE=OTHER also for EMAIL if no other type found

2006-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	ignore some more irrelevant vcard differences (TYPE=PREF, extra
	separators)

2006-03-19  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/sync4j-client-api-sdkcpp_3_0_6a.diff:
	* src/testVCard.vcf:

	when using quoted-printable, also encode non-ASCII for
	consistency

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure.in:
	* src/Makefile.am:

	make full copy of client lib C++ sources, added
	src/client-api-diff target to compare against original sources

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/sync4j-client-api-sdkcpp_3_0_6a.diff:

	changes for SyncEvolution not in Funambol CVS since sdkcpp_3_0_6a

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestMain.cpp:

	reset stdout/stderr before printing final result

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	# reflect current status

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* NEWS:

	# initial release

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:

	ensure that unique properties occur not more than once

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	test adding multiple business phone numbers

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/.cvsignore:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/testVCard.vcf:

	test for copying via server now transmits testVCard.vcf and also
	compares against it

2006-03-18  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/normalize_vcard.pl:

	format normalized vcards with 60 columns for easier side-by-side
	diff

2006-03-15  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/normalize_vcard.pl:

	normalize_vcard can now also compare two files automatically;
	it's also installed without .pl suffix

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* configure.in:

	update README and version in preparation for release

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:

	added workarounds for FBURL/CALURI and ADR without TYPE

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* configure.in:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/TestEvolution.cpp:
	* src/normalize_vcard.pl:

	replaced verification with vcard comparion via normalize_vcard.pl

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	# updated

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* Makefile.am:
	* autogen.sh:
	* etc/Makefile.am:
	* src/Makefile.am:

	fixed maintainer-cleanup

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:

	removed pregenerated autotools files from CVS - use autogen.sh

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* HACKING:
	* Makefile.in:
	* config.guess:
	* config.h.in:
	* config.sub:
	* configure:
	* depcomp:
	* etc/.cvsignore:
	* etc/Makefile.in:
	* install-sh:
	* ltmain.sh:
	* missing:
	* mkinstalldirs:
	* src/.cvsignore:
	* src/Makefile.in:

	removed pregenerated autotools files from CVS - use autogen.sh

2006-03-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* HACKING:
	* Makefile.am:
	* Makefile.in:
	* README:
	* configure:
	* configure.in:
	* etc/Makefile.in:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/Makefile.in:

	integrated compilation of Sync4j C++ client library +
	distribution of its source

2006-03-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* COPYING:
	* HACKING:
	* Makefile.am:
	* Makefile.in:
	* README:
	* aclocal.m4:
	* autogen.sh:
	* configure:
	* configure.in:
	* etc/Makefile.am:
	* etc/Makefile.in:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/Makefile.in:
	* src/TestEvolution.cpp:
	* src/normalize_vcard.pl:
	* src/sync4jevolution.cpp:
	* src/syncevolution.cpp:
	* test/normalize_vcard.pl:

	preparations for a release as 'SyncEvolution'

2006-03-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	*** empty log message ***

2006-03-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	restrict the usage of the problematic CALURI/FBURL to a few
	specific test cases

2006-02-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	check some more vcard fields (however, different order of entries
	still breaks comparison)

2006-02-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* configure:
	* configure.in:

	try most recent Evolution versions first, because shared objects
	are not upward-compatible

2006-02-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* ChangeLog:

	started to use emac's vc-update-change-log to update the
	ChangeLog

2006-02-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/TestEvolution.cpp:

	added support for the new refresh-client/server sync modes

2006-02-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added known problems and support section, updated compiling

2006-01-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	added POHLY-SYNC4JEVOLUTION-CHECKED

2006-01-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	removed redundant code

2006-01-23  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/TestEvolution.cpp:

	added conflict handling

2006-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* src/TestMain.cpp:

	allow running just one test

2006-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/TestEvolution.cpp:

	list the major features explicitly and improved tests to actually
	check copying/updating

2006-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:

	mention setup of unit testing

2006-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:

	update to reflect current status

2006-01-21  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/TestEvolution.cpp:

	minor changes to make it easier to debug

2006-01-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/TestEvolution.cpp:

	added test cases for vcard conversion use VOCL classes to fix
	vcard encoding

2005-12-12  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	a deleted item without data returns getDataSize() -1

2005-12-11  Patrick Ohly  <patrick.ohly@gmx.de>

	* HACKING:
	* src/.cvsignore:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/TestEvolution.cpp:

	added unit testing for syncing, needs some support in core
	classes (overriding sync mode, full lists)

2005-12-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncSource.h:

	implemented distinction between different sync modes: 'refresh'
	requires deleting items, scanning is different for full and
	partial sync

2005-12-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* Makefile.am:
	* Makefile.in:
	* README:
	* aclocal.m4:
	* configure:
	* configure.in:
	* etc/.cvsignore:
	* etc/Makefile.am:
	* etc/Makefile.in:
	* etc/localhost_1/spds/sources/addressbook_1/config.txt:
	* etc/localhost_1/spds/syncml/config.txt:
	* src/Makefile.in:
	* test/normalize_vcard.pl:

	added testing of syncing

2005-12-10  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionSyncSource.h:

	added some more debug logging

2005-12-04  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:

	more convervative logging

2005-12-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncClient.cpp:
	* src/sync4jevolution.cpp:

	fixed/extended error detection at the end of the sync

2005-12-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:

	added logging of contact vcards added hack to make Evolution's
	vcard V3.0 compatible with Sync4j 2.3b3 (needs to be remove or
	made configurable)

2005-12-03  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:

	strip special characters, Evolution gets confused by them

2005-11-26  Patrick Ohly  <patrick.ohly@gmx.de>

	* README:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSyncClient.cpp:
	* src/EvolutionSyncClient.h:
	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:
	* src/Makefile.am:
	* src/Makefile.in:
	* src/TestEvolution.cpp:
	* src/sync4jevolution.cpp:

	implemented front-end based on new SyncML C++ config API
	implemented the new begin/endSync() callbacks explain the change
	tracking and error handling -> copying from server works, the
	other way around fails, probably because of vcard 3.0 parsing
	problems on the server

2005-11-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* INSTALL:
	* README:
	* configure:
	* configure.in:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/TestEvolution.cpp:
	* src/sync4jevolution.cpp:

	adapted to Sync4j C++ client API 3.x

2005-11-25  Patrick Ohly  <patrick.ohly@gmx.de>

	* src/EvolutionSyncSource.cpp:
	* src/EvolutionSyncSource.h:

	base class with functionality common to all Evolution sync
	sources

2005-11-05  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* HACKING:
	* README:
	* src/.cvsignore:
	* src/EvolutionContactSource.cpp:
	* src/EvolutionContactSource.h:
	* src/EvolutionSmartPtr.h:
	* src/Makefile.am:
	* src/Makefile.in:
	* src/TestEvolution.cpp:
	* src/TestMain.cpp:
	* src/sync4jevolution.cpp:
	* src/valgrind.supp:

	first working version of SyncSource for Evolution contacts
	(requires Sync4j C++ API 2.0, not currently available) added unit
	testing

2005-10-08  Patrick Ohly  <patrick.ohly@gmx.de>

	* .cvsignore:
	* AUTHORS:
	* COPYING:
	* ChangeLog:
	* INSTALL:
	* Makefile.am:
	* Makefile.in:
	* NEWS:
	* README:
	* aclocal.m4:
	* config.guess:
	* config.h.in:
	* config.sub:
	* configure:
	* configure.in:
	* depcomp:
	* install-sh:
	* ltmain.sh:
	* missing:
	* mkinstalldirs:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/Makefile.in:
	* src/sync4jevolution.cpp:

	setup framework

2005-10-08  (no author)  <(no author)@15ad00c4-1369-45f4-8270-35d70d36bdcd>


	New repository initialized by cvs2svn.

